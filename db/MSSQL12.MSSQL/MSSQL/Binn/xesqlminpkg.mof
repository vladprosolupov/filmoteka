
//*********************************************************************
//              Copyright (c) Microsoft Corporation.
//
//*********************************************************************

#pragma classflags("forceupdate")
#pragma AUTORECOVER
#pragma namespace("\\\\.\\root\\wmi")

[dynamic: ToInstance, Description("sqlserver"),
    Guid("{03FDA7D0-91BA-45F8-9875-8B6DD0B8E9F2}"), locale("MS\\0x409")]
class XeSqlPkg: EventTrace
{
	
	[Description ("Enable flags") : amended,
	ValueDescriptions{
		"Events related to SQL Server service operations",
		"Events related to database operations",
		"Events related to transactions",
		"Events related to disk I/O",
		"Events related to locks",
		"Events related to query execution",
		"Events related to latch operations",
		"Events related to exceptions",
		"Events related to errors",
		"Events related to memory state transitions and allocations",
		"Events related to access methods components.",
		"Events related to SQL Server Change Tracking",
		"Events related to deadlock monitor",
		"Events related to Change Data Capture Logscan sessions",
		"Events releated to SQL Server Replication.",
		"Events related to SQL Server Scale Out Engine DMV Infrastructure.",
		"Events related to SQL Server indexing",
		"Events related to OLEDB",
		"Events releated to SQL Server storage management component.",
		"Events related to backup and restore",
		"Events related to AwaysOn.",
		"Events related to XTP.",
		"Events related to Checkpoint.",
		"Events related to the query store."
	} : amended,
	DefineValues{
		"ETW_XESQLPKG_SERVER"
		,
		"ETW_XESQLPKG_DATABASE"
		,
		"ETW_XESQLPKG_TRANSACTIONS"
		,
		"ETW_XESQLPKG_IO"
		,
		"ETW_XESQLPKG_LOCK"
		,
		"ETW_XESQLPKG_EXECUTION"
		,
		"ETW_XESQLPKG_LATCH"
		,
		"ETW_XESQLPKG_EXCEPTION"
		,
		"ETW_XESQLPKG_ERRORS"
		,
		"ETW_XESQLPKG_MEMORY"
		,
		"ETW_XESQLPKG_ACCESS_METHODS"
		,
		"ETW_XESQLPKG_CHANGE_TRACKING"
		,
		"ETW_XESQLPKG_DEADLOCK_MONITOR"
		,
		"ETW_XESQLPKG_CDC_LOGSCAN"
		,
		"ETW_XESQLPKG_REPLICATION"
		,
		"ETW_XESQLPKG_DMV"
		,
		"ETW_XESQLPKG_INDEX"
		,
		"ETW_XESQLPKG_OLEDB"
		,
		"ETW_XESQLPKG_STORAGE_MANAGEMENT"
		,
		"ETW_XESQLPKG_BACKUP_RESTORE"
		,
		"ETW_XESQLPKG_ALWAYSON"
		,
		"ETW_XESQLPKG_XTP"
		,
		"ETW_XESQLPKG_CHECKPOINT"
		,
		"ETW_XESQLPKG_QUERY_STORE"
		},
	Values{
		"server",
		"database",
		"transactions",
		"io",
		"lock",
		"execution",
		"latch",
		"exception",
		"errors",
		"memory",
		"access_methods",
		"change_tracking",
		"deadlock_monitor",
		"cdc_logscan",
		"replication",
		"dmv",
		"index",
		"oledb",
		"storage_management",
		"backup_restore",
		"alwayson",
		"xtp",
		"checkpoint",
		"query_store"
		},
	ValueMap{
		"1",
		"2",
		"4",
		"8",
		"16",
		"32",
		"64",
		"128",
		"256",
		"512",
		"1024",
		"2048",
		"4096",
		"8192",
		"16384",
		"32768",
		"65536",
		"131072",
		"262144",
		"524288",
		"1048576",
		"2097152",
		"4194304",
		"8388608"
		}
	]
	uint32 Flags;

};

	
[dynamic: ToInstance, Description("File read completed"): Amended,
    Guid("{e4b53496-919d-4766-904f-07049e9b6129}"), locale("MS\\0x409"),
    DisplayName("file_read_completed"): Amended]
class XeSqlPkg_file_read_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_completed: XeSqlPkg_file_read_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 file_group_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File read completed"): Amended,
    Guid("{e4b53496-919d-4766-904f-07049e9b6129}"), locale("MS\\0x409"),
    DisplayName("file_read_completed"): Amended]
class XeSqlPkg_file_read_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_read_completed: XeSqlPkg_file_read_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 filegroup_id;
	[WmiDataId(12), read] uint64 size;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(14), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write completed"): Amended,
    Guid("{d4901105-a95c-4f87-bdfc-520213b64c7a}"), locale("MS\\0x409"),
    DisplayName("file_write_completed"): Amended]
class XeSqlPkg_file_write_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_completed: XeSqlPkg_file_write_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 file_group_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File write completed"): Amended,
    Guid("{d4901105-a95c-4f87-bdfc-520213b64c7a}"), locale("MS\\0x409"),
    DisplayName("file_write_completed"): Amended]
class XeSqlPkg_file_write_completed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_write_completed: XeSqlPkg_file_write_completed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint16 file_id;
	[WmiDataId(11), read] uint16 filegroup_id;
	[WmiDataId(12), read] uint64 size;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("Buffer manager database pages"): Amended,
    Guid("{E8B363F1-CB25-4BE7-88DB-5DF50768ECDC}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_database_pages"): Amended]
class XeSqlPkg_buffer_manager_database_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_database_pages: XeSqlPkg_buffer_manager_database_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager free pages"): Amended,
    Guid("{290EF709-7CA2-4AE4-92B7-A29B42222ADA}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_free_pages"): Amended]
class XeSqlPkg_buffer_manager_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_free_pages: XeSqlPkg_buffer_manager_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager page life expectancy in milliseconds"): Amended,
    Guid("{20960f60-5a70-40bb-aa83-62fdf22da03c}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_page_life_expectancy"): Amended]
class XeSqlPkg_buffer_manager_page_life_expectancy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_page_life_expectancy: XeSqlPkg_buffer_manager_page_life_expectancy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager stolen pages"): Amended,
    Guid("{900391BE-C396-4C00-86F4-D63E3F9C5737}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_stolen_pages"): Amended]
class XeSqlPkg_buffer_manager_stolen_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_stolen_pages: XeSqlPkg_buffer_manager_stolen_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager target pages"): Amended,
    Guid("{74CE12CC-2B87-40BC-9AEC-2F8F1024656B}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_target_pages"): Amended]
class XeSqlPkg_buffer_manager_target_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_target_pages: XeSqlPkg_buffer_manager_target_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer manager total pages"): Amended,
    Guid("{A18C34FD-2DA7-4E4D-8FFF-1B1D183C8789}"), locale("MS\\0x409"),
    DisplayName("buffer_manager_total_pages"): Amended]
class XeSqlPkg_buffer_manager_total_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_manager_total_pages: XeSqlPkg_buffer_manager_total_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Buffer node database pages"): Amended,
    Guid("{a54ff743-eb52-47b9-b9de-74993fe8857d}"), locale("MS\\0x409"),
    DisplayName("buffer_node_database_pages"): Amended]
class XeSqlPkg_buffer_node_database_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_database_pages: XeSqlPkg_buffer_node_database_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node free pages"): Amended,
    Guid("{f3da400d-bdfc-4e66-8d0b-7f0a9636bbf6}"), locale("MS\\0x409"),
    DisplayName("buffer_node_free_pages"): Amended]
class XeSqlPkg_buffer_node_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_free_pages: XeSqlPkg_buffer_node_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node page life expectancy in milliseconds"): Amended,
    Guid("{cfb669ea-96f3-4950-bb1b-aaba5cd1c467}"), locale("MS\\0x409"),
    DisplayName("buffer_node_page_life_expectancy"): Amended]
class XeSqlPkg_buffer_node_page_life_expectancy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_page_life_expectancy: XeSqlPkg_buffer_node_page_life_expectancy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node stolen pages"): Amended,
    Guid("{24f283ce-e002-4402-aabf-736869da3e45}"), locale("MS\\0x409"),
    DisplayName("buffer_node_stolen_pages"): Amended]
class XeSqlPkg_buffer_node_stolen_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_stolen_pages: XeSqlPkg_buffer_node_stolen_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node target pages"): Amended,
    Guid("{feed82d7-dac4-4eab-b64c-37a1bb641660}"), locale("MS\\0x409"),
    DisplayName("buffer_node_target_pages"): Amended]
class XeSqlPkg_buffer_node_target_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_target_pages: XeSqlPkg_buffer_node_target_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer node total pages"): Amended,
    Guid("{3d4059f9-219e-4e6c-a32a-9a85dc35b251}"), locale("MS\\0x409"),
    DisplayName("buffer_node_total_pages"): Amended]
class XeSqlPkg_buffer_node_total_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_node_total_pages: XeSqlPkg_buffer_node_total_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free list empty"): Amended,
    Guid("{734b6942-7b38-40b7-90eb-7933f66d9ab0}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_list_empty"): Amended]
class XeSqlPkg_buffer_partition_free_list_empty: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_list_empty: XeSqlPkg_buffer_partition_free_list_empty
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free list requests"): Amended,
    Guid("{fd8a6deb-df0a-4644-b2de-19ecaf25648b}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_list_requests"): Amended]
class XeSqlPkg_buffer_partition_free_list_requests: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_list_requests: XeSqlPkg_buffer_partition_free_list_requests
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Buffer partition free pages"): Amended,
    Guid("{0607cd0c-a4e0-4cfc-9a8c-686061f7a6b6}"), locale("MS\\0x409"),
    DisplayName("buffer_partition_free_pages"): Amended]
class XeSqlPkg_buffer_partition_free_pages: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_partition_free_pages: XeSqlPkg_buffer_partition_free_pages
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 partition_id;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently using for database cache."): Amended,
    Guid("{21cba386-becd-4572-aadb-9f5a59a12b57}"), locale("MS\\0x409"),
    DisplayName("memory_manager_database_cache_memory"): Amended]
class XeSqlPkg_memory_manager_database_cache_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_database_cache_memory: XeSqlPkg_memory_manager_database_cache_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently not using."): Amended,
    Guid("{fb948675-1160-4c16-83b9-c5b1ea49e9c3}"), locale("MS\\0x409"),
    DisplayName("memory_manager_free_memory"): Amended]
class XeSqlPkg_memory_manager_free_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_free_memory: XeSqlPkg_memory_manager_free_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server has reserved for future usage. This value shows current unused amount of the initial grant shown in Granted Workspace Memory (KB)."): Amended,
    Guid("{92eb90cb-1ee7-4d83-bdfc-692725490cac}"), locale("MS\\0x409"),
    DisplayName("memory_manager_reserved_server_memory"): Amended]
class XeSqlPkg_memory_manager_reserved_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_reserved_server_memory: XeSqlPkg_memory_manager_reserved_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is currently using for the purposes other than the database pages."): Amended,
    Guid("{375aab6c-63db-4e85-92a1-e8dae6072e2b}"), locale("MS\\0x409"),
    DisplayName("memory_manager_stolen_server_memory"): Amended]
class XeSqlPkg_memory_manager_stolen_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_stolen_server_memory: XeSqlPkg_memory_manager_stolen_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Ideal amount of memory for the server."): Amended,
    Guid("{c6338bb7-2f0c-4dc9-8d22-6c19a56a18c5}"), locale("MS\\0x409"),
    DisplayName("memory_manager_target_server_memory"): Amended]
class XeSqlPkg_memory_manager_target_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_target_server_memory: XeSqlPkg_memory_manager_target_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Total amount of memory the server has committed."): Amended,
    Guid("{362bc68e-6d92-44c2-b51b-5c358e5c710c}"), locale("MS\\0x409"),
    DisplayName("memory_manager_total_server_memory"): Amended]
class XeSqlPkg_memory_manager_total_server_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_manager_total_server_memory: XeSqlPkg_memory_manager_total_server_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is using on this node for database pages."): Amended,
    Guid("{89815577-1547-4dd5-9667-c15603bd17e9}"), locale("MS\\0x409"),
    DisplayName("memory_node_database_node_memory"): Amended]
class XeSqlPkg_memory_node_database_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_database_node_memory: XeSqlPkg_memory_node_database_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description(" Amount of memory the server is not using on this node"): Amended,
    Guid("{d4764848-b36d-493a-93fb-f0a36b1e418b}"), locale("MS\\0x409"),
    DisplayName("memory_node_free_node_memory"): Amended]
class XeSqlPkg_memory_node_free_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_free_node_memory: XeSqlPkg_memory_node_free_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Non NUMA-local amount of memory on this node"): Amended,
    Guid("{b29db5da-ebe5-41ce-97ac-d04cf8be608b}"), locale("MS\\0x409"),
    DisplayName("memory_node_foreign_node_memory"): Amended]
class XeSqlPkg_memory_node_foreign_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_foreign_node_memory: XeSqlPkg_memory_node_foreign_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Amount of memory the server is using on this node for the purposes other than database pages."): Amended,
    Guid("{2760b17b-ba37-44c1-89f1-9c2d18d983ea}"), locale("MS\\0x409"),
    DisplayName("memory_node_stolen_node_memory"): Amended]
class XeSqlPkg_memory_node_stolen_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_stolen_node_memory: XeSqlPkg_memory_node_stolen_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Ideal amount of memory for this node"): Amended,
    Guid("{92e4fe7d-c0d1-4c87-b3c4-bf2766011820}"), locale("MS\\0x409"),
    DisplayName("memory_node_target_node_memory"): Amended]
class XeSqlPkg_memory_node_target_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_target_node_memory: XeSqlPkg_memory_node_target_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Total amount of memory the server has committed on this node."): Amended,
    Guid("{d87cbf00-bead-47f9-9f0a-e21a3f5100e1}"), locale("MS\\0x409"),
    DisplayName("memory_node_total_node_memory"): Amended]
class XeSqlPkg_memory_node_total_node_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class memory_node_total_node_memory: XeSqlPkg_memory_node_total_node_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 node_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry added"): Amended,
    Guid("{23C800FD-E765-43B5-9CA1-A97BF0A12829}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_added"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_added: XeSqlPkg_catalog_metadata_cache_entry_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry removed"): Amended,
    Guid("{6EE0F2C9-CFA1-4ACC-B4EA-213CBD1C0CA1}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_removed"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_removed: XeSqlPkg_catalog_metadata_cache_entry_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry removed"): Amended,
    Guid("{6EE0F2C9-CFA1-4ACC-B4EA-213CBD1C0CA1}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_removed"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_removed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_removed: XeSqlPkg_catalog_metadata_cache_entry_removed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry pinned"): Amended,
    Guid("{FF4C5FB5-2F39-4B29-A82B-29CD61D49D02}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_pinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_pinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_pinned: XeSqlPkg_catalog_metadata_cache_entry_pinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry pinned"): Amended,
    Guid("{FF4C5FB5-2F39-4B29-A82B-29CD61D49D02}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_pinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_pinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_pinned: XeSqlPkg_catalog_metadata_cache_entry_pinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry unpinned"): Amended,
    Guid("{AF97C47E-3A34-4B16-8223-6CEDD804121F}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_unpinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_unpinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_entry_unpinned: XeSqlPkg_catalog_metadata_cache_entry_unpinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache entry unpinned"): Amended,
    Guid("{AF97C47E-3A34-4B16-8223-6CEDD804121F}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_entry_unpinned"): Amended]
class XeSqlPkg_catalog_metadata_cache_entry_unpinned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_entry_unpinned: XeSqlPkg_catalog_metadata_cache_entry_unpinned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache hit"): Amended,
    Guid("{5A734119-AB36-491B-B64F-B4BA09914BE5}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_hit"): Amended]
class XeSqlPkg_catalog_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class catalog_metadata_cache_hit: XeSqlPkg_catalog_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Catalog metadata cache hit"): Amended,
    Guid("{5A734119-AB36-491B-B64F-B4BA09914BE5}"), locale("MS\\0x409"),
    DisplayName("catalog_metadata_cache_hit"): Amended]
class XeSqlPkg_catalog_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class catalog_metadata_cache_hit: XeSqlPkg_catalog_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases backup/restore throughput"): Amended,
    Guid("{cdfcdf14-5178-44fa-a1fb-68414d31365a}"), locale("MS\\0x409"),
    DisplayName("databases_backup_restore_throughput"): Amended]
class XeSqlPkg_databases_backup_restore_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_backup_restore_throughput: XeSqlPkg_databases_backup_restore_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases backup/restore throughput"): Amended,
    Guid("{cdfcdf14-5178-44fa-a1fb-68414d31365a}"), locale("MS\\0x409"),
    DisplayName("databases_backup_restore_throughput"): Amended]
class XeSqlPkg_databases_backup_restore_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_backup_restore_throughput: XeSqlPkg_databases_backup_restore_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Fired at locations where it's useful for test to inject a delay"): Amended,
    Guid("{8D569C50-CB55-4e7b-A2D7-2B522FE55500}"), locale("MS\\0x409"),
    DisplayName("backup_restore_test_delay"): Amended]
class XeSqlPkg_backup_restore_test_delay: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_test_delay: XeSqlPkg_backup_restore_test_delay
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string delay_location_name;
};
		
[dynamic: ToInstance, Description("Fired when transient IO operations are retried"): Amended,
    Guid("{4f0eadaa-026c-429c-867f-a9f7cb36bd67}"), locale("MS\\0x409"),
    DisplayName("backup_restore_test_io_retry"): Amended]
class XeSqlPkg_backup_restore_test_io_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_test_io_retry: XeSqlPkg_backup_restore_test_io_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 retry_count;
	[WmiDataId(6), read] uint64 operation;
};
		
[dynamic: ToInstance, Description("Databases bulk insert rows (due to BULK INSERT)"): Amended,
    Guid("{75DE02FD-6437-4792-A5B5-6E2AB9DF2503}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_rows"): Amended]
class XeSqlPkg_databases_bulk_insert_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_insert_rows: XeSqlPkg_databases_bulk_insert_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert rows (due to BULK INSERT)"): Amended,
    Guid("{75DE02FD-6437-4792-A5B5-6E2AB9DF2503}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_rows"): Amended]
class XeSqlPkg_databases_bulk_insert_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_insert_rows: XeSqlPkg_databases_bulk_insert_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert throughput in KB (due to BULK INSERT)"): Amended,
    Guid("{80426564-ECB4-4d80-90C1-6E34806D5FB0}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_throughput"): Amended]
class XeSqlPkg_databases_bulk_insert_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_bulk_insert_throughput: XeSqlPkg_databases_bulk_insert_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases bulk insert throughput in KB (due to BULK INSERT)"): Amended,
    Guid("{80426564-ECB4-4d80-90C1-6E34806D5FB0}"), locale("MS\\0x409"),
    DisplayName("databases_bulk_insert_throughput"): Amended]
class XeSqlPkg_databases_bulk_insert_throughput: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_bulk_insert_throughput: XeSqlPkg_databases_bulk_insert_throughput
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases DBCC logical scan"): Amended,
    Guid("{6CCB4909-9E30-4905-BA84-CBD06A091D4B}"), locale("MS\\0x409"),
    DisplayName("databases_dbcc_logical_scan"): Amended]
class XeSqlPkg_databases_dbcc_logical_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_dbcc_logical_scan: XeSqlPkg_databases_dbcc_logical_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases DBCC logical scan"): Amended,
    Guid("{6CCB4909-9E30-4905-BA84-CBD06A091D4B}"), locale("MS\\0x409"),
    DisplayName("databases_dbcc_logical_scan"): Amended]
class XeSqlPkg_databases_dbcc_logical_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_dbcc_logical_scan: XeSqlPkg_databases_dbcc_logical_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache hit"): Amended,
    Guid("{BD596484-E053-4DA4-8344-3D9823948B0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_hit"): Amended]
class XeSqlPkg_databases_log_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_cache_hit: XeSqlPkg_databases_log_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache hit"): Amended,
    Guid("{BD596484-E053-4DA4-8344-3D9823948B0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_hit"): Amended]
class XeSqlPkg_databases_log_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_cache_hit: XeSqlPkg_databases_log_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache read"): Amended,
    Guid("{BF283DA2-E587-458F-8C79-2DF03291E685}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_read"): Amended]
class XeSqlPkg_databases_log_cache_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_cache_read: XeSqlPkg_databases_log_cache_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log cache read"): Amended,
    Guid("{BF283DA2-E587-458F-8C79-2DF03291E685}"), locale("MS\\0x409"),
    DisplayName("databases_log_cache_read"): Amended]
class XeSqlPkg_databases_log_cache_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_cache_read: XeSqlPkg_databases_log_cache_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file size changed"): Amended,
    Guid("{811B1DF8-2074-434A-98DF-2F4508147FA0}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_size_changed"): Amended]
class XeSqlPkg_databases_log_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_file_size_changed: XeSqlPkg_databases_log_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file size changed"): Amended,
    Guid("{811B1DF8-2074-434A-98DF-2F4508147FA0}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_size_changed"): Amended]
class XeSqlPkg_databases_log_file_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_file_size_changed: XeSqlPkg_databases_log_file_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file used size changed"): Amended,
    Guid("{56D3131A-870A-4BEB-ACF5-C1B4B9326B56}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_used_size_changed"): Amended]
class XeSqlPkg_databases_log_file_used_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_file_used_size_changed: XeSqlPkg_databases_log_file_used_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log file used size changed"): Amended,
    Guid("{56D3131A-870A-4BEB-ACF5-C1B4B9326B56}"), locale("MS\\0x409"),
    DisplayName("databases_log_file_used_size_changed"): Amended]
class XeSqlPkg_databases_log_file_used_size_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_file_used_size_changed: XeSqlPkg_databases_log_file_used_size_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log truncation"): Amended,
    Guid("{2BAE30B2-C645-45A0-AF16-664528E41B86}"), locale("MS\\0x409"),
    DisplayName("databases_log_truncation"): Amended]
class XeSqlPkg_databases_log_truncation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_truncation: XeSqlPkg_databases_log_truncation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log truncation"): Amended,
    Guid("{2BAE30B2-C645-45A0-AF16-664528E41B86}"), locale("MS\\0x409"),
    DisplayName("databases_log_truncation"): Amended]
class XeSqlPkg_databases_log_truncation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_truncation: XeSqlPkg_databases_log_truncation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush wait in milliseconds"): Amended,
    Guid("{B7C1E909-8146-4F67-AD50-6C4FEA17D020}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush_wait"): Amended]
class XeSqlPkg_databases_log_flush_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_flush_wait: XeSqlPkg_databases_log_flush_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush wait in milliseconds"): Amended,
    Guid("{B7C1E909-8146-4F67-AD50-6C4FEA17D020}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush_wait"): Amended]
class XeSqlPkg_databases_log_flush_wait: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_flush_wait: XeSqlPkg_databases_log_flush_wait
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush"): Amended,
    Guid("{C5E4FC0B-4BC6-4490-98B5-B4C4D0E492A1}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush"): Amended]
class XeSqlPkg_databases_log_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_flush: XeSqlPkg_databases_log_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log flush"): Amended,
    Guid("{C5E4FC0B-4BC6-4490-98B5-B4C4D0E492A1}"), locale("MS\\0x409"),
    DisplayName("databases_log_flush"): Amended]
class XeSqlPkg_databases_log_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_flush: XeSqlPkg_databases_log_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log growth"): Amended,
    Guid("{543C0DD2-9F4D-44C5-85DD-BEE76221CA0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_growth"): Amended]
class XeSqlPkg_databases_log_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_growth: XeSqlPkg_databases_log_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log growth"): Amended,
    Guid("{543C0DD2-9F4D-44C5-85DD-BEE76221CA0C}"), locale("MS\\0x409"),
    DisplayName("databases_log_growth"): Amended]
class XeSqlPkg_databases_log_growth: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_growth: XeSqlPkg_databases_log_growth
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases log shrink"): Amended,
    Guid("{AD1239BA-BAB3-4A38-8736-0EFA77238730}"), locale("MS\\0x409"),
    DisplayName("databases_log_shrink"): Amended]
class XeSqlPkg_databases_log_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_log_shrink: XeSqlPkg_databases_log_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases log shrink"): Amended,
    Guid("{AD1239BA-BAB3-4A38-8736-0EFA77238730}"), locale("MS\\0x409"),
    DisplayName("databases_log_shrink"): Amended]
class XeSqlPkg_databases_log_shrink: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_log_shrink: XeSqlPkg_databases_log_shrink
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Databases shrink data movement"): Amended,
    Guid("{9A68AF7C-56B6-401E-9FBF-81FCB6C1F929}"), locale("MS\\0x409"),
    DisplayName("databases_shrink_data_movement"): Amended]
class XeSqlPkg_databases_shrink_data_movement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class databases_shrink_data_movement: XeSqlPkg_databases_shrink_data_movement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Databases shrink data movement"): Amended,
    Guid("{9A68AF7C-56B6-401E-9FBF-81FCB6C1F929}"), locale("MS\\0x409"),
    DisplayName("databases_shrink_data_movement"): Amended]
class XeSqlPkg_databases_shrink_data_movement: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class databases_shrink_data_movement: XeSqlPkg_databases_shrink_data_movement
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Locks lock timeouts greater than 0"): Amended,
    Guid("{8517805E-E85B-4303-AE92-653C03BA8CC8}"), locale("MS\\0x409"),
    DisplayName("locks_lock_timeouts_greater_than_0"): Amended]
class XeSqlPkg_locks_lock_timeouts_greater_than_0: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_timeouts_greater_than_0: XeSqlPkg_locks_lock_timeouts_greater_than_0
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("Locks lock timeouts"): Amended,
    Guid("{03182F70-B33D-4B2A-971C-9996F48CA361}"), locale("MS\\0x409"),
    DisplayName("locks_lock_timeouts"): Amended]
class XeSqlPkg_locks_lock_timeouts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_timeouts: XeSqlPkg_locks_lock_timeouts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("Locks lock waits"): Amended,
    Guid("{969fe884-3fa1-44bc-98a9-6d2e839ad188}"), locale("MS\\0x409"),
    DisplayName("locks_lock_waits"): Amended]
class XeSqlPkg_locks_lock_waits: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class locks_lock_waits: XeSqlPkg_locks_lock_waits
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint64 lock_type;
};
		
[dynamic: ToInstance, Description("User settable"): Amended,
    Guid("{B2AF8177-4AED-4980-B023-3511CD21BD6C}"), locale("MS\\0x409"),
    DisplayName("user_settable"): Amended]
class XeSqlPkg_user_settable: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class user_settable: XeSqlPkg_user_settable
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count;
	[WmiDataId(6), read] sint64 increment;
	[WmiDataId(7), read] uint64 user_counter;
};
		
[dynamic: ToInstance, Description("Latch acquired (available in debug only)"): Amended,
    Guid("{d20bcde5-b094-43e4-81a9-fc1251915c47}"), locale("MS\\0x409"),
    DisplayName("latch_acquired"): Amended]
class XeSqlPkg_latch_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_acquired: XeSqlPkg_latch_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Latch acquired (available in debug only)"): Amended,
    Guid("{d20bcde5-b094-43e4-81a9-fc1251915c47}"), locale("MS\\0x409"),
    DisplayName("latch_acquired"): Amended]
class XeSqlPkg_latch_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_acquired: XeSqlPkg_latch_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 database_id;
	[WmiDataId(17), read] uint16 file_id;
	[WmiDataId(18), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch released (available in debug only)"): Amended,
    Guid("{5427ddc5-1906-4e24-9ceb-45ed7f214fd0}"), locale("MS\\0x409"),
    DisplayName("latch_released"): Amended]
class XeSqlPkg_latch_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_released: XeSqlPkg_latch_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Latch released (available in debug only)"): Amended,
    Guid("{5427ddc5-1906-4e24-9ceb-45ed7f214fd0}"), locale("MS\\0x409"),
    DisplayName("latch_released"): Amended]
class XeSqlPkg_latch_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_released: XeSqlPkg_latch_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 database_id;
	[WmiDataId(17), read] uint16 file_id;
	[WmiDataId(18), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup"): Amended,
    Guid("{D2CFC3EA-266A-49B3-96D3-1A1C84D93650}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup"): Amended]
class XeSqlPkg_ghost_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup: XeSqlPkg_ghost_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup"): Amended,
    Guid("{D2CFC3EA-266A-49B3-96D3-1A1C84D93650}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup"): Amended]
class XeSqlPkg_ghost_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class ghost_cleanup: XeSqlPkg_ghost_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint64 allocation_unit_id;
};
		
[dynamic: ToInstance, Description("Ghost cleanup task start"): Amended,
    Guid("{30493d3c-179f-44ca-abed-23d2f0b05f8a}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_start"): Amended]
class XeSqlPkg_ghost_cleanup_task_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_start: XeSqlPkg_ghost_cleanup_task_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_packets_queued;
};
		
[dynamic: ToInstance, Description("Ghost cleanup task suspend"): Amended,
    Guid("{60be8a5a-9d92-4a7e-b0d6-6916e4a9b9be}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_suspend"): Amended]
class XeSqlPkg_ghost_cleanup_task_suspend: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_suspend: XeSqlPkg_ghost_cleanup_task_suspend
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 page_packets_queued;
	[WmiDataId(6), read] uint32 page_packets_processed;
};
		
[dynamic: ToInstance, Description("A task packet is enqueued"): Amended,
    Guid("{f38ce41e-c98a-4347-a570-1d13843c6ff0}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_packet_enqueue"): Amended]
class XeSqlPkg_ghost_cleanup_task_packet_enqueue: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_packet_enqueue: XeSqlPkg_ghost_cleanup_task_packet_enqueue
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(121),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DATABASE", 
					"DATABASE_INTERNAL", 
					"PAGE" }
			] uint32 ghost_type;
};
		
[dynamic: ToInstance, Description("A task packet is dequeued and processed"): Amended,
    Guid("{c9c40977-438c-4244-b015-f94b0a16161f}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_process_packet"): Amended]
class XeSqlPkg_ghost_cleanup_task_process_packet: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_process_packet: XeSqlPkg_ghost_cleanup_task_process_packet
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(121),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"DATABASE", 
					"DATABASE_INTERNAL", 
					"PAGE" }
			] uint32 ghost_type;
};
		
[dynamic: ToInstance, Description("Purge the pages that contain ghost records found in a database"): Amended,
    Guid("{98462fed-2bb0-4241-ab68-2920a09815fd}"), locale("MS\\0x409"),
    DisplayName("ghost_cleanup_task_process_pages_for_db_packet"): Amended]
class XeSqlPkg_ghost_cleanup_task_process_pages_for_db_packet: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ghost_cleanup_task_process_pages_for_db_packet: XeSqlPkg_ghost_cleanup_task_process_pages_for_db_packet
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 first_ghost_page_file_id;
	[WmiDataId(7), read] uint32 first_ghost_page_page_id;
	[WmiDataId(8), read] uint16 last_ghost_page_file_id;
	[WmiDataId(9), read] uint32 last_ghost_page_page_id;
	[WmiDataId(10), read] uint32 ghost_page_count;
};
		
[dynamic: ToInstance, Description("Lock acquired"): Amended,
    Guid("{6D74001D-F4F9-425E-9DAE-7706FD43F980}"), locale("MS\\0x409"),
    DisplayName("lock_acquired"): Amended]
class XeSqlPkg_lock_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_acquired: XeSqlPkg_lock_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
};
		
[dynamic: ToInstance, Description("Occurs when a lock is acquired on an object. Use this event to troubleshoot data contention issues that are caused by locks that are being held for long periods of time."): Amended,
    Guid("{6D74001D-F4F9-425E-9DAE-7706FD43F980}"), locale("MS\\0x409"),
    DisplayName("lock_acquired"): Amended]
class XeSqlPkg_lock_acquired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_acquired: XeSqlPkg_lock_acquired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a lock on an object has been released. Use this troubleshoot data contention issues that are caused by locks being held for long periods of time"): Amended,
    Guid("{A322A468-9B93-4D39-A1ED-ACE193C51A8A}"), locale("MS\\0x409"),
    DisplayName("lock_released"): Amended]
class XeSqlPkg_lock_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_released: XeSqlPkg_lock_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
};
		
[dynamic: ToInstance, Description("Occurs when a lock is released on an object."): Amended,
    Guid("{A322A468-9B93-4D39-A1ED-ACE193C51A8A}"), locale("MS\\0x409"),
    DisplayName("lock_released"): Amended]
class XeSqlPkg_lock_released: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_released: XeSqlPkg_lock_released
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Deadlock"): Amended,
    Guid("{AA54BE9B-8D6B-4254-A9E6-D60E5100224A}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock"): Amended]
class XeSqlPkg_lock_deadlock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_deadlock: XeSqlPkg_lock_deadlock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint16 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
};
		
[dynamic: ToInstance, Description("Occurs when an attempt to acquire a lock is canceled for the victim of a deadlock."): Amended,
    Guid("{AA54BE9B-8D6B-4254-A9E6-D60E5100224A}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock"): Amended]
class XeSqlPkg_lock_deadlock: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class lock_deadlock: XeSqlPkg_lock_deadlock
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 associated_object_id;
	[WmiDataId(19), read] uint64 duration;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the redo thread blocks when trying to acquire a lock."): Amended,
    Guid("{41CC48BB-CA81-4FFF-9A2B-5579C7D3FCDC}"), locale("MS\\0x409"),
    DisplayName("lock_redo_blocked"): Amended]
class XeSqlPkg_lock_redo_blocked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_redo_blocked: XeSqlPkg_lock_redo_blocked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the redo thread blocks when trying to acquire a lock."): Amended,
    Guid("{1402F906-DDE4-4c1e-B39A-7E3BF8622F05}"), locale("MS\\0x409"),
    DisplayName("lock_redo_unblocked"): Amended]
class XeSqlPkg_lock_redo_unblocked: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_redo_unblocked: XeSqlPkg_lock_redo_unblocked
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a DB lock is acquired from the XactWorkspace DB lock cache."): Amended,
    Guid("{f5fa1413-c345-4020-a197-e4cbaba50e6d}"), locale("MS\\0x409"),
    DisplayName("db_lock_acquired_from_cache"): Amended]
class XeSqlPkg_db_lock_acquired_from_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_lock_acquired_from_cache: XeSqlPkg_db_lock_acquired_from_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 ref_count_total;
	[WmiDataId(7), read, 
				XEMapId(115),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"72", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"24", 
					"52", 
					"15", 
					"12", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"5", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRPCRowset", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 ref_type;
	[WmiDataId(8), read] uint32 ref_type_count;
};
		
[dynamic: ToInstance, Description("Occurs when a DB lock is released from the XactWorkspace DB lock cache."): Amended,
    Guid("{cf1638dd-ed1a-4c60-b18a-57740eb29d25}"), locale("MS\\0x409"),
    DisplayName("db_lock_released_from_cache"): Amended]
class XeSqlPkg_db_lock_released_from_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class db_lock_released_from_cache: XeSqlPkg_db_lock_released_from_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 ref_count_total;
	[WmiDataId(7), read, 
				XEMapId(115),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"72", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"24", 
					"52", 
					"15", 
					"12", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"5", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRPCRowset", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 ref_type;
	[WmiDataId(8), read] uint32 ref_type_count;
};
		
[dynamic: ToInstance, Description("Page split"): Amended,
    Guid("{047E111F-37A7-4C67-8155-898AF079F483}"), locale("MS\\0x409"),
    DisplayName("page_split"): Amended]
class XeSqlPkg_page_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_split: XeSqlPkg_page_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Page split"): Amended,
    Guid("{047E111F-37A7-4C67-8155-898AF079F483}"), locale("MS\\0x409"),
    DisplayName("page_split"): Amended]
class XeSqlPkg_page_split: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_split: XeSqlPkg_page_split
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(68),
				ValueMap { 
					"6", 
					"2", 
					"1", 
					"0", 
					"4", 
					"5", 
					"3" },
				Values { 
					"SPLIT_EMPTY_BTREE", 
					"SPLIT_FOR_DELETE", 
					"SPLIT_FOR_GHOST", 
					"SPLIT_FOR_INSERT", 
					"SPLIT_FOR_INTERNAL_NODE", 
					"SPLIT_FOR_ROOT_NODE", 
					"SPLIT_FOR_UPDATE" }
			] uint8 splitOperation;
	[WmiDataId(10), read] uint16 new_page_file_id;
	[WmiDataId(11), read] uint32 new_page_page_id;
};
		
[dynamic: ToInstance, Description("Physical page read"): Amended,
    Guid("{34EF6F7C-F15D-40A1-B399-14DE8806E143}"), locale("MS\\0x409"),
    DisplayName("physical_page_read"): Amended]
class XeSqlPkg_physical_page_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_page_read: XeSqlPkg_physical_page_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Physical page write"): Amended,
    Guid("{36622C34-95B0-42EC-B9C2-145257EADC46}"), locale("MS\\0x409"),
    DisplayName("physical_page_write"): Amended]
class XeSqlPkg_physical_page_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_page_write: XeSqlPkg_physical_page_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch suspend begin"): Amended,
    Guid("{f0bdd0b0-cccb-493f-bf94-9a9643e0c983}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_begin"): Amended]
class XeSqlPkg_latch_suspend_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_begin: XeSqlPkg_latch_suspend_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 timeout;
};
		
[dynamic: ToInstance, Description("Occurs when a the executing task must suspend while waiting for a latch to become available in the requested mode."): Amended,
    Guid("{f0bdd0b0-cccb-493f-bf94-9a9643e0c983}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_begin"): Amended]
class XeSqlPkg_latch_suspend_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_suspend_begin: XeSqlPkg_latch_suspend_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint32 timeout;
	[WmiDataId(17), read] uint32 database_id;
	[WmiDataId(18), read] uint16 file_id;
	[WmiDataId(19), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch suspend end"): Amended,
    Guid("{881a763a-0da3-4b79-a9ed-050f6efb0745}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_end"): Amended]
class XeSqlPkg_latch_suspend_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_end: XeSqlPkg_latch_suspend_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] sint8  success;
};
		
[dynamic: ToInstance, Description("Occurs when the executing task is resumed after waiting for a latch."): Amended,
    Guid("{881a763a-0da3-4b79-a9ed-050f6efb0745}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_end"): Amended]
class XeSqlPkg_latch_suspend_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_suspend_end: XeSqlPkg_latch_suspend_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] sint8  success;
	[WmiDataId(17), read] uint64 duration;
	[WmiDataId(18), read] uint32 database_id;
	[WmiDataId(19), read] uint16 file_id;
	[WmiDataId(20), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Occurs when there is a timeout waiting for a latch possibly causing performance problems."): Amended,
    Guid("{d162c148-dedd-47bd-ad53-81e0b2a7d570}"), locale("MS\\0x409"),
    DisplayName("latch_suspend_warning"): Amended]
class XeSqlPkg_latch_suspend_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_suspend_warning: XeSqlPkg_latch_suspend_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(46),
				ValueMap { 
					"5", 
					"4", 
					"1", 
					"6", 
					"0", 
					"2", 
					"3" },
				Values { 
					"DT", 
					"EX", 
					"KP", 
					"LASTLATCH", 
					"NL", 
					"SH", 
					"UP" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(8), read] uint32 keep_count;
	[WmiDataId(9), read] uint32 shared_count;
	[WmiDataId(10), read] uint32 update_count;
	[WmiDataId(11), read] uint32 exclusive_count;
	[WmiDataId(12), read] uint32 destroy_count;
	[WmiDataId(13), read] sint8  has_waiters;
	[WmiDataId(14), read] sint8  is_superlatch;
	[WmiDataId(15), read] sint8  is_poisoned;
	[WmiDataId(16), read] uint64 duration;
	[WmiDataId(17), read] uint32 database_id;
	[WmiDataId(18), read] uint16 file_id;
	[WmiDataId(19), read] uint32 page_id;
	[WmiDataId(20), read, Pointer] object  task_owner;
	[WmiDataId(21), read] sint8  continue_wait;
};
		
[dynamic: ToInstance, Description("Latch promotion"): Amended,
    Guid("{beeec925-7ba5-4feb-a242-d642c3b4bd1f}"), locale("MS\\0x409"),
    DisplayName("latch_promoted"): Amended]
class XeSqlPkg_latch_promoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_promoted: XeSqlPkg_latch_promoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Occurs when a latch is promoted to a super latch."): Amended,
    Guid("{beeec925-7ba5-4feb-a242-d642c3b4bd1f}"), locale("MS\\0x409"),
    DisplayName("latch_promoted"): Amended]
class XeSqlPkg_latch_promoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_promoted: XeSqlPkg_latch_promoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
	[WmiDataId(15), read] uint32 database_id;
	[WmiDataId(16), read] uint16 file_id;
	[WmiDataId(17), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Latch demotion"): Amended,
    Guid("{cd8ca5c3-a82e-4326-9a4e-e4db6d3e24d1}"), locale("MS\\0x409"),
    DisplayName("latch_demoted"): Amended]
class XeSqlPkg_latch_demoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_demoted: XeSqlPkg_latch_demoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
};
		
[dynamic: ToInstance, Description("Occurs when a super latch is demoted to an ordinary latch."): Amended,
    Guid("{cd8ca5c3-a82e-4326-9a4e-e4db6d3e24d1}"), locale("MS\\0x409"),
    DisplayName("latch_demoted"): Amended]
class XeSqlPkg_latch_demoted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class latch_demoted: XeSqlPkg_latch_demoted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read, 
				XEMapId(47),
				ValueMap { 
					"130", 
					"154", 
					"144", 
					"10", 
					"12", 
					"14", 
					"13", 
					"11", 
					"15", 
					"9", 
					"8", 
					"129", 
					"17", 
					"16", 
					"19", 
					"18", 
					"159", 
					"103", 
					"27", 
					"22", 
					"24", 
					"25", 
					"26", 
					"23", 
					"20", 
					"21", 
					"75", 
					"28", 
					"7", 
					"137", 
					"29", 
					"33", 
					"30", 
					"31", 
					"32", 
					"34", 
					"111", 
					"152", 
					"153", 
					"161", 
					"148", 
					"160", 
					"149", 
					"150", 
					"151", 
					"74", 
					"1", 
					"68", 
					"70", 
					"67", 
					"69", 
					"71", 
					"123", 
					"124", 
					"35", 
					"36", 
					"38", 
					"39", 
					"40", 
					"44", 
					"37", 
					"43", 
					"41", 
					"42", 
					"45", 
					"46", 
					"47", 
					"48", 
					"118", 
					"50", 
					"49", 
					"113", 
					"145", 
					"146", 
					"54", 
					"139", 
					"51", 
					"52", 
					"53", 
					"61", 
					"62", 
					"60", 
					"65", 
					"64", 
					"56", 
					"58", 
					"57", 
					"66", 
					"63", 
					"59", 
					"128", 
					"147", 
					"155", 
					"156", 
					"158", 
					"3", 
					"6", 
					"4", 
					"2", 
					"157", 
					"5", 
					"73", 
					"125", 
					"165", 
					"55", 
					"140", 
					"142", 
					"143", 
					"116", 
					"76", 
					"114", 
					"135", 
					"127", 
					"126", 
					"133", 
					"132", 
					"77", 
					"131", 
					"78", 
					"136", 
					"134", 
					"138", 
					"79", 
					"83", 
					"81", 
					"82", 
					"84", 
					"80", 
					"115", 
					"98", 
					"87", 
					"92", 
					"100", 
					"93", 
					"96", 
					"88", 
					"89", 
					"90", 
					"97", 
					"99", 
					"94", 
					"95", 
					"86", 
					"85", 
					"91", 
					"101", 
					"119", 
					"141", 
					"104", 
					"105", 
					"106", 
					"102", 
					"107", 
					"110", 
					"109", 
					"108", 
					"0", 
					"117", 
					"72", 
					"112", 
					"163", 
					"162", 
					"164", 
					"120", 
					"122", 
					"121" },
				Values { 
					"AM_ACCESSOR_CACHE", 
					"AM_COLUMN_CACHE_SHARING", 
					"AM_INDEX_BUILD_ALLOC", 
					"AM_IOAFF_KEY_RANGE_GENERATOR", 
					"AM_IOAFF_QUEUE", 
					"AM_IOAFF_READAHEAD", 
					"AM_IOAFF_READAHEAD_QUEUE", 
					"AM_IOAFF_TARGET_PAGE_CNT", 
					"AM_IOAFF_WAITING_WORKER_QUEUE", 
					"AM_KEY_RANGE_GENERATOR_READAHEAD", 
					"AM_SCAN_RANGE_GENERATOR", 
					"AM_STRING_COMPARE_FUNCTION", 
					"APPEND_ONLY_STORAGE_FIRST_ALLOC", 
					"APPEND_ONLY_STORAGE_INSERT_POINT", 
					"APPEND_ONLY_STORAGE_MANAGER", 
					"APPEND_ONLY_STORAGE_UNIT_MANAGER", 
					"ASYNC_TRANSPORT_MULTI_SESSION", 
					"AUDIT_IO_ACCESS", 
					"BACKUP_FILE_HANDLE", 
					"BACKUP_LOGREDO", 
					"BACKUP_MANAGER", 
					"BACKUP_MANAGER_DIFFERENTIAL", 
					"BACKUP_OPERATION_LOCK", 
					"BACKUP_PERF_INSTANCE_ID", 
					"BACKUP_RESULTSET", 
					"BACKUP_TAPEPOOL", 
					"BAD_PAGE_LIST", 
					"BUF", 
					"BULK_EXTENT_ALLOCATOR", 
					"CHECK_PRINT_RECORD", 
					"CHECKPOINT_STATE", 
					"CLR_DATA_ACCESS_EXEC", 
					"CLR_PROC_HASHTABLE", 
					"CLR_UDT_HASHTABLE", 
					"CLR_UDX_CACHESTORE", 
					"CLR_XVAR_PROXY_LIST", 
					"CMSQLXACTMGR", 
					"COLUMNSTORE_ATTRIB_CACHE", 
					"COLUMNSTORE_INDEX_BUILD", 
					"COLUMNSTORE_LOAD_METADATA", 
					"COLUMNSTORE_OBJECT", 
					"COLUMNSTORE_ROWGROUP_COLLECTION", 
					"CSIBUILD_HASHDICT_BUCKET", 
					"CSIBUILD_HASHDICT_GLOBAL", 
					"CSIBUILD_STRINGSTORE_GLOBAL", 
					"CVIEWREP", 
					"DATASET_PARENT", 
					"DB_MIRRORING_COMMAND", 
					"DB_MIRRORING_CONNECTION", 
					"DB_MIRRORING_REDO_MANAGER", 
					"DB_MIRRORING_SERVER", 
					"DB_MIRRORING_STREAM", 
					"DB_VER_STATE", 
					"DB_VER_STATE_CHANGE", 
					"DBCC_CHECK_AGGREGATE", 
					"DBCC_CHECK_RESULTSET", 
					"DBCC_CHECK_TABLES_INIT", 
					"DBCC_CHECK_TRACE_LIST", 
					"DBCC_FS_FILE_LINKAGE_CHECK_STATE", 
					"DBCC_HASHDLL", 
					"DBCC_MULTIOBJECT_SCANNER", 
					"DBCC_OBJECT_METADATA", 
					"DBCC_PERF", 
					"DBCC_PFS_STATUS", 
					"EVENTING_CACHE", 
					"FCB", 
					"FCB_REPLICA", 
					"FGCB_ADDREMOVE", 
					"FILE_DBG_STREAM", 
					"FILE_MANAGER", 
					"FILEGROUP_MANAGER", 
					"FILEID_TO_DBID", 
					"FILESTREAM_ALLOCATION_MANAGER", 
					"FILESTREAM_CONTAINER_HEADER", 
					"FILESTREAM_DFS_ROOT", 
					"FILESTREAM_DOWNLEVEL_LOGGING", 
					"FILESTREAM_FCB", 
					"FILESTREAM_FILE_MANAGER", 
					"FILESTREAM_GHOST_FILES", 
					"FULLTEXT_ADMIN", 
					"FULLTEXT_ADMIN_COMMAND_CACHE", 
					"FULLTEXT_CRAWL_LOG", 
					"FULLTEXT_CRAWL_MANAGER_CATALOG", 
					"FULLTEXT_CRAWL_MANAGER_DMLIST", 
					"FULLTEXT_DOCID", 
					"FULLTEXT_DOCID_NOTIFY", 
					"FULLTEXT_DOCID_TRAN", 
					"FULLTEXT_FILE_MANAGER", 
					"FULLTEXT_LANGUAGE_TABLE", 
					"FULLTEXT_LOGS", 
					"FULLTEXT_MERGE", 
					"GHOST_CLEANUP_SYNC_MANAGER", 
					"HADR_BACKUP_LOCK_RESQUEUE_TABLE", 
					"HADR_BACKUP_TASK_TABLE", 
					"HADR_XDES_TABLE", 
					"HOBT", 
					"HOBT_CACHE_ONLY_ALLOC", 
					"HOBT_COUNT", 
					"HOBT_FACTORY", 
					"HOBT_LOBPAGEINFO", 
					"HOBT_VIRTUAL_ROOT", 
					"ID_MANAGER", 
					"KTM_VIRTUAL_CLOCK", 
					"LAST_CLASS", 
					"LOG_MANAGER_SPACE", 
					"LOGBLOCK_GENERATIONS", 
					"METADATA_CLONE_ACCESS_TICKET", 
					"METADATA_SEQUENCE_GENERATOR", 
					"NOTIFY_DROP_DATABASE", 
					"RECOVERY_MANAGER", 
					"SE_DYNAMIC_VECTOR", 
					"SECURITY_ACCESS_CHECK_CACHE", 
					"SECURITY_ASYMKEY_INT", 
					"SECURITY_CERT_INT", 
					"SECURITY_EXECAS_ENCTOKEN_CR", 
					"SECURITY_EXECAS_ENCTOKEN_INIT", 
					"SECURITY_OBJPERM_CACHE", 
					"SECURITY_RLS_CACHE", 
					"SECURITY_TEMP_KEY_LIST", 
					"SECURITY_USER_INSTANCE", 
					"SECURITY_WSPI_LOOKUP", 
					"SECURITY_XPCMDSHELL", 
					"SPACE_CACHES_MANAGER_COHERENCY", 
					"SPACEMGR_AEC", 
					"SPACEMGR_CREATE_FSC", 
					"SPACEMGR_FSC", 
					"SPACEMGR_IAM_PAGE_RANGE_CACHE", 
					"SPACEMGR_RINGBUF_CREATE", 
					"SPARSE_BITMAP", 
					"SSB_DISPATCHER", 
					"SSB_FORWARDING_MGR", 
					"SSB_MAPPING_MANAGER", 
					"SSB_MIRROR_ROUTE_CONNECTION", 
					"SSB_READCACHE", 
					"SSB_TRANSMISSION_TRANSACTION_DATA", 
					"SSB_TRANSMITTER", 
					"SSB_TRANSMITTER_ASB", 
					"SSB_TRANSMITTER_EVENTS", 
					"SSB_TRANSPORT", 
					"SSB_TRANSPORT_MEMORY_NOTIFICATION", 
					"SSB_WAITFOR_GLOBAL_MANAGER", 
					"SSB_WAITFOR_TRANSACTION_DATA", 
					"SSB_XMIT_ACCESS_UPDATE", 
					"SSB_XMIT_OBJECT", 
					"SSB_XMIT_WORK", 
					"SSB_XMIT_WORKTABLE", 
					"SYS_LOCK_INFORMATION", 
					"TEST_LATCH", 
					"TRACE", 
					"TRACE_CONTROLLER", 
					"TRACE_EVENT_DATA_QUEUE", 
					"TRACE_IO_PROVIDER", 
					"TRAN_DISTRIBUTED_MARK", 
					"TRAN_NESTING_FULL", 
					"TRAN_NESTING_RO", 
					"TRAN_OUTCOME", 
					"UNKNOWN", 
					"UTROWSET", 
					"VD_MANAGER", 
					"XACTWORKSPACEMGR", 
					"XFCB_CREDENTIAL", 
					"XFCB_CREDENTIAL_MANAGER", 
					"XFCB_RENEWAL", 
					"XVB", 
					"XVB_CHAIN", 
					"XVB_LIST_SCAN" }
			] uint32 class0;
	[WmiDataId(7), read] uint32 keep_count;
	[WmiDataId(8), read] uint32 shared_count;
	[WmiDataId(9), read] uint32 update_count;
	[WmiDataId(10), read] uint32 exclusive_count;
	[WmiDataId(11), read] uint32 destroy_count;
	[WmiDataId(12), read] sint8  has_waiters;
	[WmiDataId(13), read] sint8  is_superlatch;
	[WmiDataId(14), read] sint8  is_poisoned;
	[WmiDataId(15), read] uint32 database_id;
	[WmiDataId(16), read] uint16 file_id;
	[WmiDataId(17), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("FlushFileBuffers called"): Amended,
    Guid("{bff5b15e-7314-4029-b27f-a10c21ac6b2e}"), locale("MS\\0x409"),
    DisplayName("flush_file_buffers"): Amended]
class XeSqlPkg_flush_file_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class flush_file_buffers: XeSqlPkg_flush_file_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  file_handle;
	[WmiDataId(6), read] sint8  succeeded;
};
		
[dynamic: ToInstance, Description("File read"): Amended,
    Guid("{521d231a-85c1-4791-8c35-4c5c0f51d0c0}"), locale("MS\\0x409"),
    DisplayName("file_read"): Amended]
class XeSqlPkg_file_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read: XeSqlPkg_file_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read"): Amended,
    Guid("{521d231a-85c1-4791-8c35-4c5c0f51d0c0}"), locale("MS\\0x409"),
    DisplayName("file_read"): Amended]
class XeSqlPkg_file_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_read: XeSqlPkg_file_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read enqueued"): Amended,
    Guid("{9785c953-b648-4d45-9ffa-47a99528d93d}"), locale("MS\\0x409"),
    DisplayName("file_read_enqueued"): Amended]
class XeSqlPkg_file_read_enqueued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_enqueued: XeSqlPkg_file_read_enqueued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File read throttled"): Amended,
    Guid("{84d65c13-5a5e-4e6a-8717-7e07edf06796}"), locale("MS\\0x409"),
    DisplayName("file_read_throttled"): Amended]
class XeSqlPkg_file_read_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_read_throttled: XeSqlPkg_file_read_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("File written"): Amended,
    Guid("{9f72e2fb-2874-4fa2-b348-6862bc6fb41c}"), locale("MS\\0x409"),
    DisplayName("file_written"): Amended]
class XeSqlPkg_file_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_written: XeSqlPkg_file_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(12), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File written"): Amended,
    Guid("{9f72e2fb-2874-4fa2-b348-6862bc6fb41c}"), locale("MS\\0x409"),
    DisplayName("file_written"): Amended]
class XeSqlPkg_file_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_written: XeSqlPkg_file_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write enqueued"): Amended,
    Guid("{82e88b5c-24af-4e2d-bdbc-edc773c1b66f}"), locale("MS\\0x409"),
    DisplayName("file_write_enqueued"): Amended]
class XeSqlPkg_file_write_enqueued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_enqueued: XeSqlPkg_file_write_enqueued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File write throttled"): Amended,
    Guid("{89cf4039-1e55-4ddf-99fd-2aba89ec2777}"), locale("MS\\0x409"),
    DisplayName("file_write_throttled"): Amended]
class XeSqlPkg_file_write_throttled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_write_throttled: XeSqlPkg_file_write_throttled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read] sint8  is_volume_limit_hit;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(14), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("Checkpoint has begun"): Amended,
    Guid("{99ca2b70-a594-4250-9ca6-b761a9486fd2}"), locale("MS\\0x409"),
    DisplayName("checkpoint_begin"): Amended]
class XeSqlPkg_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_begin: XeSqlPkg_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has begun"): Amended,
    Guid("{99ca2b70-a594-4250-9ca6-b761a9486fd2}"), locale("MS\\0x409"),
    DisplayName("checkpoint_begin"): Amended]
class XeSqlPkg_checkpoint_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class checkpoint_begin: XeSqlPkg_checkpoint_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Checkpoint has ended"): Amended,
    Guid("{43694edc-2f3b-4e10-b13f-14393f3bd9d6}"), locale("MS\\0x409"),
    DisplayName("checkpoint_end"): Amended]
class XeSqlPkg_checkpoint_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class checkpoint_end: XeSqlPkg_checkpoint_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("File writes issued to sparse file for replica DB"): Amended,
    Guid("{016B66E5-AD18-4FF4-9445-046F0802DB8D}"), locale("MS\\0x409"),
    DisplayName("file_written_to_replica"): Amended]
class XeSqlPkg_file_written_to_replica: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_written_to_replica: XeSqlPkg_file_written_to_replica
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 file_group_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(12), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("File writes issued to sparse file for replica DB"): Amended,
    Guid("{016B66E5-AD18-4FF4-9445-046F0802DB8D}"), locale("MS\\0x409"),
    DisplayName("file_written_to_replica"): Amended]
class XeSqlPkg_file_written_to_replica: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class file_written_to_replica: XeSqlPkg_file_written_to_replica
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read, Pointer] object  file_handle;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint16 database_id;
	[WmiDataId(9), read] uint16 file_id;
	[WmiDataId(10), read] uint16 filegroup_id;
	[WmiDataId(11), read] uint64 size;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string path;
	[WmiDataId(13), read, Extension("Variant")] object io_data;
};
		
[dynamic: ToInstance, Description("Target for outstanding data pages has been changed"): Amended,
    Guid("{d3c47ecc-90dd-47e3-ac8b-9911f4e19646}"), locale("MS\\0x409"),
    DisplayName("recovery_target_reset"): Amended]
class XeSqlPkg_recovery_target_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_target_reset: XeSqlPkg_recovery_target_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 new_target_time;
	[WmiDataId(7), read] uint64 dirty_page_read_time;
	[WmiDataId(8), read] uint64 dirty_page_count;
};
		
[dynamic: ToInstance, Description("Found we were over target and queued background writes"): Amended,
    Guid("{c5f44ac5-c8df-4f68-ae64-e9c990398e33}"), locale("MS\\0x409"),
    DisplayName("recovery_target_miss"): Amended]
class XeSqlPkg_recovery_target_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_target_miss: XeSqlPkg_recovery_target_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 target_time;
	[WmiDataId(7), read] uint64 dirty_page_read_time;
	[WmiDataId(8), read] uint64 dirty_page_count;
};
		
[dynamic: ToInstance, Description("Background writes queued to allow truncation of simple recovery database"): Amended,
    Guid("{d1d19d2a-5c07-41a9-8788-87e861369b45}"), locale("MS\\0x409"),
    DisplayName("recovery_simple_log_truncate"): Amended]
class XeSqlPkg_recovery_simple_log_truncate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_simple_log_truncate: XeSqlPkg_recovery_simple_log_truncate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Background writes queued to allow truncation dirty page point to get to last checkpoint"): Amended,
    Guid("{921603c7-5ab6-406f-9f30-10e446e9bce9}"), locale("MS\\0x409"),
    DisplayName("recovery_catch_checkpoint"): Amended]
class XeSqlPkg_recovery_catch_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_catch_checkpoint: XeSqlPkg_recovery_catch_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Chose not to enqueue a checkpoint as we are within the target"): Amended,
    Guid("{6d0913ac-c746-43ed-b346-c879d7a6a8e3}"), locale("MS\\0x409"),
    DisplayName("recovery_skip_checkpoint"): Amended]
class XeSqlPkg_recovery_skip_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_skip_checkpoint: XeSqlPkg_recovery_skip_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 recovery_log_bytes;
	[WmiDataId(7), read] uint64 recovery_log_read_time_estimate;
	[WmiDataId(8), read] uint64 recovery_log_target_time;
	[WmiDataId(9), read] uint64 dirty_page_read_time;
	[WmiDataId(10), read] uint64 dirty_page_count;
	[WmiDataId(11), read] uint64 dirty_page_target_time;
	[WmiDataId(12), read] uint64 page_writes_logged;
	[WmiDataId(13), read] uint64 page_writes_not_logged;
};
		
[dynamic: ToInstance, Description("Background writes forced to allow oldest dirty page to get to last checkpoint"): Amended,
    Guid("{2be2bf32-ac92-4337-b324-2a703685f9e3}"), locale("MS\\0x409"),
    DisplayName("recovery_force_oldest_page"): Amended]
class XeSqlPkg_recovery_force_oldest_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_force_oldest_page: XeSqlPkg_recovery_force_oldest_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Chose to enqueue an indirect checkpoint as we are near our recovery target"): Amended,
    Guid("{1eac732f-fb83-4fe6-9d12-9ac2c180f1ad}"), locale("MS\\0x409"),
    DisplayName("recovery_indirect_checkpoint"): Amended]
class XeSqlPkg_recovery_indirect_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_indirect_checkpoint: XeSqlPkg_recovery_indirect_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 recovery_log_bytes;
	[WmiDataId(7), read] uint64 recovery_log_read_time_estimate;
	[WmiDataId(8), read] uint64 recovery_log_target_time;
	[WmiDataId(9), read] uint64 dirty_page_read_time;
	[WmiDataId(10), read] uint64 dirty_page_count;
	[WmiDataId(11), read] uint64 dirty_page_target_time;
	[WmiDataId(12), read] uint64 page_writes_logged;
	[WmiDataId(13), read] uint64 page_writes_not_logged;
};
		
[dynamic: ToInstance, Description("Allocation ring buffer recorded"): Amended,
    Guid("{9b1a3866-5e60-403d-b614-1dc6c8f9c53f}"), locale("MS\\0x409"),
    DisplayName("allocation_ring_buffer_recorded"): Amended]
class XeSqlPkg_allocation_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class allocation_ring_buffer_recorded: XeSqlPkg_allocation_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint8 event;
	[WmiDataId(8), read] sint16 session_id;
	[WmiDataId(9), read] uint8 ec_id;
	[WmiDataId(10), read] sint16 file_id;
	[WmiDataId(11), read] sint32 page_id;
	[WmiDataId(12), read] sint32 au_id_long;
	[WmiDataId(13), read] sint16 au_id_short;
	[WmiDataId(14), read] uint64 ls_ws_id;
	[WmiDataId(15), read] uint32 ls_sub_id;
	[WmiDataId(16), read] uint32 ls_nest_id;
	[WmiDataId(17), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("A page that should have been constant has changed"): Amended,
    Guid("{b6dbcde1-f1a8-4564-ad61-1824c148b6be}"), locale("MS\\0x409"),
    DisplayName("constant_page_corruption_detected"): Amended]
class XeSqlPkg_constant_page_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class constant_page_corruption_detected: XeSqlPkg_constant_page_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("A page that should have been constant has changed"): Amended,
    Guid("{b6dbcde1-f1a8-4564-ad61-1824c148b6be}"), locale("MS\\0x409"),
    DisplayName("constant_page_corruption_detected"): Amended]
class XeSqlPkg_constant_page_corruption_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class constant_page_corruption_detected: XeSqlPkg_constant_page_corruption_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Database attached"): Amended,
    Guid("{248cd648-c674-4741-ba0d-1032fcd33a37}"), locale("MS\\0x409"),
    DisplayName("database_attached"): Amended]
class XeSqlPkg_database_attached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_attached: XeSqlPkg_database_attached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Database attached"): Amended,
    Guid("{248cd648-c674-4741-ba0d-1032fcd33a37}"), locale("MS\\0x409"),
    DisplayName("database_attached"): Amended]
class XeSqlPkg_database_attached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_attached: XeSqlPkg_database_attached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database detached"): Amended,
    Guid("{c0e4203a-8d5c-4d00-8dce-0a020bab8755}"), locale("MS\\0x409"),
    DisplayName("database_detached"): Amended]
class XeSqlPkg_database_detached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_detached: XeSqlPkg_database_detached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Database detached"): Amended,
    Guid("{c0e4203a-8d5c-4d00-8dce-0a020bab8755}"), locale("MS\\0x409"),
    DisplayName("database_detached"): Amended]
class XeSqlPkg_database_detached: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class database_detached: XeSqlPkg_database_detached
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database started"): Amended,
    Guid("{56b89946-e94b-4c22-a588-12598c7c572e}"), locale("MS\\0x409"),
    DisplayName("database_started"): Amended]
class XeSqlPkg_database_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_started: XeSqlPkg_database_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Database stopped"): Amended,
    Guid("{1398523a-dd87-45d5-8faa-24f0d0ae0c79}"), locale("MS\\0x409"),
    DisplayName("database_stopped"): Amended]
class XeSqlPkg_database_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_stopped: XeSqlPkg_database_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Occurs when checkpointing has been dynamically throttled with a new Checkpoint rate."): Amended,
    Guid("{efbeab6e-1c9d-4f25-9f85-23fec3674887}"), locale("MS\\0x409"),
    DisplayName("dyn_throttle_checkpoint"): Amended]
class XeSqlPkg_dyn_throttle_checkpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dyn_throttle_checkpoint: XeSqlPkg_dyn_throttle_checkpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] real64 average_throughput;
	[WmiDataId(6), read] real64 average_writes_per_second;
	[WmiDataId(7), read] real64 checkpoint_rate_mb;
	[WmiDataId(8), read] real64 checkpoint_rate_iops;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint32 checkpoint_duration;
};
		
[dynamic: ToInstance, Description("Trace flag changed"): Amended,
    Guid("{142beaac-9a34-42ae-849a-3c2051bf13e7}"), locale("MS\\0x409"),
    DisplayName("trace_flag_changed"): Amended]
class XeSqlPkg_trace_flag_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class trace_flag_changed: XeSqlPkg_trace_flag_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 flag;
	[WmiDataId(6), read, 
				XEMapId(2),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Global", 
					"Session" }
			] uint32 type;
	[WmiDataId(7), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("Change Tracking Cleanup"): Amended,
    Guid("{D878EAE3-68D7-48FB-868E-8422E6D8A18F}"), locale("MS\\0x409"),
    DisplayName("change_tracking_cleanup"): Amended]
class XeSqlPkg_change_tracking_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class change_tracking_cleanup: XeSqlPkg_change_tracking_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read, 
				XEMapId(5),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11" },
				Values { 
					"CleanupStatusChange", 
					"UpdateRetention", 
					"UpdateInvalidCleanup", 
					"UpdateHardenedCleanup", 
					"RowsCleanedUp", 
					"BeginTableCleanup", 
					"EndTableCleanup", 
					"AddChangeTrackDbToQueue", 
					"ProcessNewDatabase", 
					"StartChangeTrackingCleanup", 
					"StopChangeTrackingCleanup" }
			] uint32 cleanup_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string value;
};
		
[dynamic: ToInstance, Description("Tracks SYS.SYSCOMMITTAB Table Cleanup"): Amended,
    Guid("{8040BB1C-D62A-4327-AC4D-DDC45EC3FBB7}"), locale("MS\\0x409"),
    DisplayName("syscommittab_cleanup"): Amended]
class XeSqlPkg_syscommittab_cleanup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class syscommittab_cleanup: XeSqlPkg_syscommittab_cleanup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 rows_deleted;
	[WmiDataId(7), read, Extension("WmiTime")] uint64 cleaned_upto_date;
};
		
[dynamic: ToInstance, Description("Deadlock monitor performance statistics"): Amended,
    Guid("{bce30e88-3af6-11dc-bd05-4d0f56d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_perf_stats"): Amended]
class XeSqlPkg_deadlock_monitor_perf_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_perf_stats: XeSqlPkg_deadlock_monitor_perf_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint64 prev_cycle_start_time;
	[WmiDataId(7), read] uint64 prev_cycle_duration_ms;
	[WmiDataId(8), read] uint16 curr_cycle_end_cause;
	[WmiDataId(9), read] uint32 prev_cycle_deadlock_participant_count;
	[WmiDataId(10), read] uint64 count_cycles_with_deadlock;
	[WmiDataId(11), read] uint64 count_cycles_with_deadlock_ended_normally;
	[WmiDataId(12), read] uint64 count_cycles_with_deadlock_failed_deadlock_resolution_prep;
	[WmiDataId(13), read] uint64 count_cycles_with_deadlock_out_of_memory;
	[WmiDataId(14), read] uint64 count_cycles_with_deadlock_timeout;
	[WmiDataId(15), read] uint64 avg_cycle_duration_ms;
	[WmiDataId(16), read] uint64 max_cycle_duration_ms;
	[WmiDataId(17), read] uint32 avg_deadlock_participant_count;
	[WmiDataId(18), read] uint32 max_deadlock_participant_count;
};
		
[dynamic: ToInstance, Description("Deadlock monitor memory utilization statistics"): Amended,
    Guid("{e3857ef4-3ee8-11df-bdb3-82ae55d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_mem_stats"): Amended]
class XeSqlPkg_deadlock_monitor_mem_stats: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_mem_stats: XeSqlPkg_deadlock_monitor_mem_stats
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint32 peak_mem_util;
	[WmiDataId(7), read] uint32 vertex_primary_pool_cap;
	[WmiDataId(8), read] uint32 vertex_secondary_pool_cap;
	[WmiDataId(9), read] uint32 vertex_avg_alloc_count;
	[WmiDataId(10), read] uint32 vertex_max_alloc_count;
	[WmiDataId(11), read] uint32 edge_primary_pool_cap;
	[WmiDataId(12), read] uint32 edge_secondary_pool_cap;
	[WmiDataId(13), read] uint32 edge_avg_alloc_count;
	[WmiDataId(14), read] uint32 edge_max_alloc_count;
	[WmiDataId(15), read] uint32 scc_primary_pool_cap;
	[WmiDataId(16), read] uint32 scc_secondary_pool_cap;
	[WmiDataId(17), read] uint32 scc_avg_alloc_count;
	[WmiDataId(18), read] uint32 scc_max_alloc_count;
	[WmiDataId(19), read] uint32 vertex_hash_primary_pool_cap;
	[WmiDataId(20), read] uint32 vertex_hash_secondary_pool_cap;
	[WmiDataId(21), read] uint32 vertex_hash_avg_alloc_count;
	[WmiDataId(22), read] uint32 vertex_hash_max_alloc_count;
};
		
[dynamic: ToInstance, Description("Deadlock Monitor state transition"): Amended,
    Guid("{403c3f44-3eed-11dc-a813-901356d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_state_transition"): Amended]
class XeSqlPkg_deadlock_monitor_state_transition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_state_transition: XeSqlPkg_deadlock_monitor_state_transition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 prev_state;
	[WmiDataId(7), read] uint16 new_state;
};
		
[dynamic: ToInstance, Description("Deadlock monitor PMO status at various checkpoints in the LDM cycle"): Amended,
    Guid("{44dd455e-3ef5-11dc-bc6c-226d56d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_pmo_status"): Amended]
class XeSqlPkg_deadlock_monitor_pmo_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_pmo_status: XeSqlPkg_deadlock_monitor_pmo_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 checkpoint;
	[WmiDataId(7), read, Pointer] object  pmo_mark;
	[WmiDataId(8), read] uint32 pmo_pages_alloc;
	[WmiDataId(9), read] uint32 ringbuffer_pmo_pages_alloc;
	[WmiDataId(10), read] uint32 xml_deadlock_report_pmo_pages_alloc;
};
		
[dynamic: ToInstance, Description("Deadlock monitor local wait-for graph dump in binary form"): Amended,
    Guid("{cea6bf44-3ef6-11dc-bbac-627456d89593}"), locale("MS\\0x409"),
    DisplayName("deadlock_monitor_serialized_local_wait_for_graph"): Amended]
class XeSqlPkg_deadlock_monitor_serialized_local_wait_for_graph: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class deadlock_monitor_serialized_local_wait_for_graph: XeSqlPkg_deadlock_monitor_serialized_local_wait_for_graph
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 count_cycles;
	[WmiDataId(6), read] uint16 id;
	[WmiDataId(7), read, Extension("Variant")] object obj;
};
		
[dynamic: ToInstance, Description("Buffer pool ring buffer recorded"): Amended,
    Guid("{a711cf1e-287a-4f06-b6dc-f60fcb95a808}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_ring_buffer_recorded"): Amended]
class XeSqlPkg_buffer_pool_ring_buffer_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_ring_buffer_recorded: XeSqlPkg_buffer_pool_ring_buffer_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 id;
	[WmiDataId(6), read] uint64 timestamp0;
	[WmiDataId(7), read] uint32 memory_utilization_pct;
	[WmiDataId(8), read] uint64 total_physical_memory_kb;
	[WmiDataId(9), read] uint64 available_physical_memory_kb;
	[WmiDataId(10), read] uint64 total_page_file_kb;
	[WmiDataId(11), read] uint64 available_page_file_kb;
	[WmiDataId(12), read] uint64 total_virtual_address_space_kb;
	[WmiDataId(13), read] uint64 available_virtual_address_space_kb;
	[WmiDataId(14), read] uint64 available_extended_virtual_address_space_kb;
	[WmiDataId(15), read, 
				XEMapId(6),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"OOM", 
					"Map", 
					"Reserve Adjust", 
					"Lazywriter No Buffers" }
			] uint32 failure_type;
	[WmiDataId(16), read, Pointer] object  task;
	[WmiDataId(17), read] uint32 committed_count;
	[WmiDataId(18), read] uint32 committed_target;
	[WmiDataId(19), read] uint32 free_count;
	[WmiDataId(20), read] uint32 hashed_count;
	[WmiDataId(21), read] uint32 stolen_count;
	[WmiDataId(22), read] uint32 reserved_count;
	[WmiDataId(23), read, Extension("Variant"), XEVLD("callstack")] object call_stack;
};
		
[dynamic: ToInstance, Description("An attempt to compress a database page failed"): Amended,
    Guid("{978a8ca7-2e69-4755-84a4-b33a9b1e3cba}"), locale("MS\\0x409"),
    DisplayName("page_compression_attempt_failed"): Amended]
class XeSqlPkg_page_compression_attempt_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_compression_attempt_failed: XeSqlPkg_page_compression_attempt_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(4),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"PageModCountBelowThreshold", 
					"OnlyOneRecordFound", 
					"NewGeneratedInfoSameAsOld", 
					"NoSpaceSavings" }
			] uint8 failure_reason;
};
		
[dynamic: ToInstance, Description("An attempt to compress a database page failed"): Amended,
    Guid("{978a8ca7-2e69-4755-84a4-b33a9b1e3cba}"), locale("MS\\0x409"),
    DisplayName("page_compression_attempt_failed"): Amended]
class XeSqlPkg_page_compression_attempt_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_compression_attempt_failed: XeSqlPkg_page_compression_attempt_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint64 rowset_id;
	[WmiDataId(9), read, 
				XEMapId(4),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"PageModCountBelowThreshold", 
					"OnlyOneRecordFound", 
					"NewGeneratedInfoSameAsOld", 
					"NoSpaceSavings" }
			] uint8 failure_reason;
};
		
[dynamic: ToInstance, Description("Entry and exit tracking for page compression operations"): Amended,
    Guid("{DA5B447A-38BC-42B6-BCF0-2B30488A372D}"), locale("MS\\0x409"),
    DisplayName("page_compression_tracing"): Amended]
class XeSqlPkg_page_compression_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_compression_tracing: XeSqlPkg_page_compression_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 call_duration;
};
		
[dynamic: ToInstance, Description("Entry and exit tracking for page compression operations"): Amended,
    Guid("{DA5B447A-38BC-42B6-BCF0-2B30488A372D}"), locale("MS\\0x409"),
    DisplayName("page_compression_tracing"): Amended]
class XeSqlPkg_page_compression_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_compression_tracing: XeSqlPkg_page_compression_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 rowset_id;
	[WmiDataId(10), read] uint64 call_duration;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Long IO detected"): Amended,
    Guid("{85e7b283-6475-4ec9-9604-dabee1f54411}"), locale("MS\\0x409"),
    DisplayName("long_io_detected"): Amended]
class XeSqlPkg_long_io_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class long_io_detected: XeSqlPkg_long_io_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 occurrences;
	[WmiDataId(6), read] uint64 longer_than_sec;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 last_long_io_offset;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Failed to complete a request to Windows Azure Storage."): Amended,
    Guid("{3149756E-8C91-43D1-A92D-3651AFA1FF95}"), locale("MS\\0x409"),
    DisplayName("xfcb_failed_request"): Amended]
class XeSqlPkg_xfcb_failed_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_failed_request: XeSqlPkg_xfcb_failed_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read, 
				XEMapId(59),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"23", 
					"24", 
					"25", 
					"26", 
					"27", 
					"28", 
					"29", 
					"30", 
					"31", 
					"32", 
					"33", 
					"34", 
					"35", 
					"36", 
					"37", 
					"38", 
					"39", 
					"40", 
					"41", 
					"42", 
					"43", 
					"44", 
					"45", 
					"46", 
					"47", 
					"48", 
					"49", 
					"50", 
					"51", 
					"52", 
					"53", 
					"54", 
					"55", 
					"56", 
					"57", 
					"58", 
					"59", 
					"60", 
					"61", 
					"62", 
					"63", 
					"64", 
					"65", 
					"66", 
					"67", 
					"68", 
					"69", 
					"70", 
					"71", 
					"72", 
					"73" },
				Values { 
					"AccountAlreadyExists", 
					"AccountBeingCreated", 
					"AccountIsDisabled", 
					"AuthenticationFailed", 
					"BlobAlreadyExists", 
					"BlobNotFound", 
					"CannotVerifyCopySource", 
					"ConditionNotMet", 
					"ContainerAlreadyExists", 
					"ContainerBeingDeleted", 
					"ContainerDisabled", 
					"ContainerNotFound", 
					"CopyAcrossAccountsNotSupported", 
					"CopyIdMismatch", 
					"EmptyMetadataKey", 
					"InfiniteLeaseDurationRequired", 
					"InsufficientAccountPermissions", 
					"InternalError", 
					"InvalidAuthenticationInfo", 
					"InvalidBlobOrBlock", 
					"InvalidBlobType", 
					"InvalidBlockId", 
					"InvalidBlockList", 
					"InvalidHeaderValue", 
					"InvalidHttpVerb", 
					"InvalidInput", 
					"InvalidMd5", 
					"InvalidMetadata", 
					"InvalidPageRange", 
					"InvalidQueryParameterValue", 
					"InvalidRange", 
					"InvalidUri", 
					"InvalidVersionForPageBlobOperation", 
					"InvalidXmlDocument", 
					"InvalidXmlNodeValue", 
					"LeaseAlreadyBroken", 
					"LeaseAlreadyPresent", 
					"LeaseIdMismatchWithBlobOperation", 
					"LeaseIdMismatchWithContainerOperation", 
					"LeaseIdMismatchWithLeaseOperation", 
					"LeaseIdMissing", 
					"LeaseIsBreakingAndCannotBeAquired", 
					"LeaseIsBreakingAndCannotBeChanged", 
					"LeaseIsBrokenAndCannotBeRenewed", 
					"LeaseLost", 
					"LeaseNotPresentWithBlobOperation", 
					"LeaseNotPresentWithContainerOperation", 
					"LeaseNotPresentWithLeaseOperation", 
					"Md5Mismatch", 
					"MetadataTooLarge", 
					"MissingContentLengthHeader", 
					"MissingRequiredHeader", 
					"MissingRequiredQueryParameter", 
					"MissingRequiredXmlNode", 
					"MultipleConditionHeadersNotSupported", 
					"NoPendingCopyOperation", 
					"OperationTimedOut", 
					"OutOfRangeInput", 
					"OutOfRangeQueryParameterValue", 
					"PendingCopyOperation", 
					"RequestBodyTooLarge", 
					"RequestUrlFailedToParse", 
					"ResourceNotFound", 
					"SequenceNumberConditionNotMet", 
					"SequenceNumberIncrementTooLarge", 
					"ServerBusy", 
					"SnapshotsPresent", 
					"SourceConditionNotMet", 
					"TargetConditionNotMet", 
					"UnknownError", 
					"UnsupportedHeader", 
					"UnsupportedHttpVerb", 
					"UnsupportedQueryParameter", 
					"UnsupportedXmlNode" }
			] uint8 errorcode;
	[WmiDataId(7), read] sint32 http_errorcode;
	[WmiDataId(8), read] sint32 mapped_errorcode;
	[WmiDataId(9), read] uint32 callback_status;
	[WmiDataId(10), read] sint32 retry_count;
	[WmiDataId(11), read] uint64 file_byte_offset;
	[WmiDataId(12), read] uint64 file_byte_count;
	[WmiDataId(13), read, Extension("Guid")] guid request_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("A request is opened to Windows Azure Storage."): Amended,
    Guid("{25CEB172-25B3-46E0-A713-0AACFAB3C9C5}"), locale("MS\\0x409"),
    DisplayName("xfcb_request_opened"): Amended]
class XeSqlPkg_xfcb_request_opened: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_request_opened: XeSqlPkg_xfcb_request_opened
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 retry_count;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Response header is obtained from request to Windows Azure Storage."): Amended,
    Guid("{FA06C2B5-C7FF-49A9-932C-70ABFD827745}"), locale("MS\\0x409"),
    DisplayName("xfcb_header_obtained"): Amended]
class XeSqlPkg_xfcb_header_obtained: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_header_obtained: XeSqlPkg_xfcb_header_obtained
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 http_errorcode;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Windows Azure Storage blob property is obtained from response header."): Amended,
    Guid("{2FF5A587-066F-4862-A40D-34D8E660F7E2}"), locale("MS\\0x409"),
    DisplayName("xfcb_blob_properties_obtained"): Amended]
class XeSqlPkg_xfcb_blob_properties_obtained: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_blob_properties_obtained: XeSqlPkg_xfcb_blob_properties_obtained
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read, 
				XEMapId(60),
				ValueMap { 
					"0", 
					"3", 
					"4", 
					"2", 
					"1", 
					"5" },
				Values { 
					"Available", 
					"Breaking", 
					"Broken", 
					"Expired", 
					"Leased", 
					"Max" }
			] uint8 lease_state;
	[WmiDataId(7), read] uint64 blob_size;
	[WmiDataId(8), read, Extension("Guid")] guid request_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string instance_id;
};
		
[dynamic: ToInstance, Description("Read complete from Windows Azure Storage response."): Amended,
    Guid("{F422103C-B142-49D2-BCAD-5709DB6DA215}"), locale("MS\\0x409"),
    DisplayName("xfcb_read_complete"): Amended]
class XeSqlPkg_xfcb_read_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_read_complete: XeSqlPkg_xfcb_read_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 bytes_read;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Request send to Windows Azure Storage is complete."): Amended,
    Guid("{D9FB583B-5362-4A2F-BBBE-9DF7F18F63B0}"), locale("MS\\0x409"),
    DisplayName("xfcb_send_complete"): Amended]
class XeSqlPkg_xfcb_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_send_complete: XeSqlPkg_xfcb_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read, Extension("Guid")] guid request_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Request send to Windows Azure Storage is complete."): Amended,
    Guid("{59A46E7E-2AA5-47CD-B7F8-843B3967083C}"), locale("MS\\0x409"),
    DisplayName("xfcb_write_complete"): Amended]
class XeSqlPkg_xfcb_write_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xfcb_write_complete: XeSqlPkg_xfcb_write_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(58),
				ValueMap { 
					"5", 
					"6", 
					"9", 
					"2", 
					"7", 
					"11", 
					"0", 
					"10", 
					"8", 
					"3", 
					"1", 
					"4" },
				Values { 
					"FCBIoTypeCreateFile", 
					"FCBIoTypeDeleteFile", 
					"FCBIoTypeGetPageRange", 
					"FCBIoTypeGetProperties", 
					"FCBIoTypeLease", 
					"FCBIoTypeMax", 
					"FCBIoTypeRead", 
					"FCBIoTypeSetMetadata", 
					"FCBIoTypeSetSeqNum", 
					"FCBIoTypeSetSize", 
					"FCBIoTypeWrite", 
					"FCBIoTypeZeroFile" }
			] uint8 request_type;
	[WmiDataId(6), read] uint64 file_byte_offset;
	[WmiDataId(7), read] uint64 file_byte_count;
	[WmiDataId(8), read] sint32 bytes_written;
	[WmiDataId(9), read, Extension("Guid")] guid request_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Various statistics about the sort"): Amended,
    Guid("{a85c6145-0131-4c0b-a63d-3ed4de618112}"), locale("MS\\0x409"),
    DisplayName("sort_statistics_tracing"): Amended]
class XeSqlPkg_sort_statistics_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_statistics_tracing: XeSqlPkg_sort_statistics_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 input_phase_max_buffers;
	[WmiDataId(10), read] uint32 input_phase_max_fanout;
	[WmiDataId(11), read] uint32 input_phase_max_io;
	[WmiDataId(12), read] uint32 input_phase_bobs;
	[WmiDataId(13), read] uint32 merge_phase_max_buffers;
	[WmiDataId(14), read] uint32 merge_phase_max_fanout;
	[WmiDataId(15), read] uint32 merge_phase_bobs;
	[WmiDataId(16), read] uint32 max_memory_grant;
	[WmiDataId(17), read] uint64 estimate_total_rows;
	[WmiDataId(18), read] sint8  is_fast_key_optimized;
	[WmiDataId(19), read] sint8  is_unique;
	[WmiDataId(20), read] sint8  is_partitioned;
	[WmiDataId(21), read] sint8  is_manual;
};
		
[dynamic: ToInstance, Description("Various statistics about the sort"): Amended,
    Guid("{a85c6145-0131-4c0b-a63d-3ed4de618112}"), locale("MS\\0x409"),
    DisplayName("sort_statistics_tracing"): Amended]
class XeSqlPkg_sort_statistics_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_statistics_tracing: XeSqlPkg_sort_statistics_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 input_phase_max_buffers;
	[WmiDataId(10), read] uint32 input_phase_max_fanout;
	[WmiDataId(11), read] uint32 input_phase_max_io;
	[WmiDataId(12), read] uint32 input_phase_bobs;
	[WmiDataId(13), read] uint32 merge_phase_max_buffers;
	[WmiDataId(14), read] uint32 merge_phase_max_fanout;
	[WmiDataId(15), read] uint32 merge_phase_bobs;
	[WmiDataId(16), read] uint32 max_memory_grant;
	[WmiDataId(17), read] uint64 estimate_total_rows;
	[WmiDataId(18), read] sint8  is_fast_key_optimized;
	[WmiDataId(19), read] sint8  is_unique;
	[WmiDataId(20), read] sint8  is_partitioned;
	[WmiDataId(21), read] sint8  is_manual;
};
		
[dynamic: ToInstance, Description("Sort adding merge runs to the merge run directory"): Amended,
    Guid("{9b51ca5a-586e-4a3c-8824-b697397ea8a5}"), locale("MS\\0x409"),
    DisplayName("sort_add_run_tracing"): Amended]
class XeSqlPkg_sort_add_run_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_add_run_tracing: XeSqlPkg_sort_add_run_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 run_id;
	[WmiDataId(10), read] uint32 run_length_in_pages;
	[WmiDataId(11), read] uint16 run_first_page_file_id;
	[WmiDataId(12), read] uint32 run_first_page_page_id;
};
		
[dynamic: ToInstance, Description("Sort internal events and state changes"): Amended,
    Guid("{714c92f6-24f7-4843-877d-c911212f5c48}"), locale("MS\\0x409"),
    DisplayName("sort_state_change_tracing"): Amended]
class XeSqlPkg_sort_state_change_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_state_change_tracing: XeSqlPkg_sort_state_change_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"SortInputStateChange", 
					"SortMergeStateChange", 
					"SortPostInputStateChange", 
					"SortOutputStateChange", 
					"SortFinishedStateChange", 
					"SortCleanupStateChange", 
					"SortBestMerge" }
			] uint32 event_id;
};
		
[dynamic: ToInstance, Description("Sort internal events and state changes"): Amended,
    Guid("{714c92f6-24f7-4843-877d-c911212f5c48}"), locale("MS\\0x409"),
    DisplayName("sort_state_change_tracing"): Amended]
class XeSqlPkg_sort_state_change_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_state_change_tracing: XeSqlPkg_sort_state_change_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read, 
				XEMapId(7),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6" },
				Values { 
					"SortInputStateChange", 
					"SortMergeStateChange", 
					"SortPostInputStateChange", 
					"SortOutputStateChange", 
					"SortFinishedStateChange", 
					"SortCleanupStateChange", 
					"SortBestMerge" }
			] uint32 event_id;
};
		
[dynamic: ToInstance, Description("Sort adjusting the memory grant of an in-progress sort"): Amended,
    Guid("{0bf34831-9f30-4ecc-8026-aff22891b01b}"), locale("MS\\0x409"),
    DisplayName("sort_memory_grant_adjustment"): Amended]
class XeSqlPkg_sort_memory_grant_adjustment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_memory_grant_adjustment: XeSqlPkg_sort_memory_grant_adjustment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint16 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 previous_grant_in_pages;
	[WmiDataId(10), read] uint32 requested_grant_in_pages;
	[WmiDataId(11), read] uint32 grant_delta_in_pages;
	[WmiDataId(12), read] uint32 new_grant_in_pages;
};
		
[dynamic: ToInstance, Description("Sort adjusting the memory grant of an in-progress sort"): Amended,
    Guid("{0bf34831-9f30-4ecc-8026-aff22891b01b}"), locale("MS\\0x409"),
    DisplayName("sort_memory_grant_adjustment"): Amended]
class XeSqlPkg_sort_memory_grant_adjustment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class sort_memory_grant_adjustment: XeSqlPkg_sort_memory_grant_adjustment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 rowset_id;
	[WmiDataId(6), read] uint64 allocation_unit_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint16 filegroup_id;
	[WmiDataId(9), read] uint32 previous_grant_in_pages;
	[WmiDataId(10), read] uint32 requested_grant_in_pages;
	[WmiDataId(11), read] uint32 grant_delta_in_pages;
	[WmiDataId(12), read] uint32 new_grant_in_pages;
};
		
[dynamic: ToInstance, Description("Produces a deadlock report in XML format."): Amended,
    Guid("{8A7E5DF0-BFE2-11DC-878F-68B855D89593}"), locale("MS\\0x409"),
    DisplayName("xml_deadlock_report"): Amended]
class XeSqlPkg_xml_deadlock_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xml_deadlock_report: XeSqlPkg_xml_deadlock_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string xml_report;
};
		
[dynamic: ToInstance, Description("Produces a deadlock report for a victim, with information scoped to the victim's database."): Amended,
    Guid("{C3BBEB62-36C5-41A0-A617-AC7DAD87AF48}"), locale("MS\\0x409"),
    DisplayName("database_xml_deadlock_report"): Amended]
class XeSqlPkg_database_xml_deadlock_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_xml_deadlock_report: XeSqlPkg_database_xml_deadlock_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 deadlock_cycle_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string server_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string xml_report;
};
		
[dynamic: ToInstance, Description("Index leaf page disfavored during scan"): Amended,
    Guid("{04cbd3a5-1876-4edb-931b-1147387bb098}"), locale("MS\\0x409"),
    DisplayName("leaf_page_disfavored"): Amended]
class XeSqlPkg_leaf_page_disfavored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class leaf_page_disfavored: XeSqlPkg_leaf_page_disfavored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Index leaf page disfavored during scan"): Amended,
    Guid("{04cbd3a5-1876-4edb-931b-1147387bb098}"), locale("MS\\0x409"),
    DisplayName("leaf_page_disfavored"): Amended]
class XeSqlPkg_leaf_page_disfavored: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class leaf_page_disfavored: XeSqlPkg_leaf_page_disfavored
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
};
		
[dynamic: ToInstance, Description("Prefetch issued for a whole extent instead of a single page"): Amended,
    Guid("{8e440d52-1374-4bea-975d-856c00753bdb}"), locale("MS\\0x409"),
    DisplayName("prefetch_extent"): Amended]
class XeSqlPkg_prefetch_extent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class prefetch_extent: XeSqlPkg_prefetch_extent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 extent_id;
};
		
[dynamic: ToInstance, Description("Prefetch issued for a whole extent instead of a single page"): Amended,
    Guid("{8e440d52-1374-4bea-975d-856c00753bdb}"), locale("MS\\0x409"),
    DisplayName("prefetch_extent"): Amended]
class XeSqlPkg_prefetch_extent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class prefetch_extent: XeSqlPkg_prefetch_extent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 extent_id;
};
		
[dynamic: ToInstance, Description("Occurs when fastloadcontext is activated / deactivated"): Amended,
    Guid("{32BE64E4-1E0C-439E-85F6-2B42B4D92A69}"), locale("MS\\0x409"),
    DisplayName("fastloadcontext_enabled"): Amended]
class XeSqlPkg_fastloadcontext_enabled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class fastloadcontext_enabled: XeSqlPkg_fastloadcontext_enabled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read, 
				XEMapId(48),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"FastLoadContext_Activated", 
					"FastLoadContext_Deactivated" }
			] uint8 state;
};
		
[dynamic: ToInstance, Description("Occurs when a text info record is read by the replication logreader."): Amended,
    Guid("{E7902D45-5A7D-447C-A189-55B339C3BCA6}"), locale("MS\\0x409"),
    DisplayName("logreader_process_text_info"): Amended]
class XeSqlPkg_logreader_process_text_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_text_info: XeSqlPkg_logreader_process_text_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(49),
				ValueMap { 
					"130", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"223", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"166", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"145", 
					"230", 
					"232", 
					"231", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"220", 
					"126", 
					"200", 
					"206", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_ROWGROUP", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FEDTM_INFO", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_RANGE_INSERT", 
					"LOP_REMOVE_VERSION_INFO", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 text_pointer_timestamp;
	[WmiDataId(8), read] uint16 text_pointer_file_id;
	[WmiDataId(9), read] uint32 text_pointer_page_id;
	[WmiDataId(10), read] uint16 text_pointer_slot_id;
	[WmiDataId(11), read] sint32 coloffset;
	[WmiDataId(12), read] uint32 text_info_flags;
	[WmiDataId(13), read] uint64 text_size;
	[WmiDataId(14), read] uint64 offset;
	[WmiDataId(15), read] uint64 old_size;
	[WmiDataId(16), read] uint64 new_size;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a text pointer is being read by the replication logreader."): Amended,
    Guid("{E4A3CAFA-588A-4CE2-BCFC-CC1CB6482400}"), locale("MS\\0x409"),
    DisplayName("logreader_process_text_ptr"): Amended]
class XeSqlPkg_logreader_process_text_ptr: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_text_ptr: XeSqlPkg_logreader_process_text_ptr
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(49),
				ValueMap { 
					"130", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"223", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"166", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"145", 
					"230", 
					"232", 
					"231", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"220", 
					"126", 
					"200", 
					"206", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_ROWGROUP", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FEDTM_INFO", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_RANGE_INSERT", 
					"LOP_REMOVE_VERSION_INFO", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 text_pointer_timestamp;
	[WmiDataId(8), read] uint16 text_pointer_file_id;
	[WmiDataId(9), read] uint32 text_pointer_page_id;
	[WmiDataId(10), read] uint16 text_pointer_slot_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when a filestream info record is read by the replication logreader."): Amended,
    Guid("{6ECD9A46-32C8-4F30-BA81-36A4B9D4BC62}"), locale("MS\\0x409"),
    DisplayName("logreader_process_filestream_info"): Amended]
class XeSqlPkg_logreader_process_filestream_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_process_filestream_info: XeSqlPkg_logreader_process_filestream_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(49),
				ValueMap { 
					"130", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"223", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"166", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"145", 
					"230", 
					"232", 
					"231", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"220", 
					"126", 
					"200", 
					"206", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_ROWGROUP", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FEDTM_INFO", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_RANGE_INSERT", 
					"LOP_REMOVE_VERSION_INFO", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 log_operation;
	[WmiDataId(6), read] uint64 fsi_rowset_id;
	[WmiDataId(7), read] uint64 fsi_txt_file_id_low;
	[WmiDataId(8), read] uint64 fsi_txt_file_id_high;
	[WmiDataId(9), read] sint32 fsi_col_offset;
	[WmiDataId(10), read] uint64 fsi_current_lsn;
	[WmiDataId(11), read] uint64 fsi_base_lsn;
	[WmiDataId(12), read] uint16 fsi_filegroup_id;
	[WmiDataId(13), read] uint32 fsi_db_id;
	[WmiDataId(14), read] uint32 fsi_info_flags;
	[WmiDataId(15), read] uint64 fsi_size;
	[WmiDataId(16), read] uint64 fsi_offset;
	[WmiDataId(17), read] uint64 fsi_old_size;
	[WmiDataId(18), read] uint64 fsi_new_size;
	[WmiDataId(19), read] uint64 log_rowset_id;
	[WmiDataId(20), read] uint64 log_txt_file_id_low;
	[WmiDataId(21), read] uint64 log_txt_file_id_high;
	[WmiDataId(22), read] uint64 log_current_lsn;
	[WmiDataId(23), read] uint64 log_base_lsn;
	[WmiDataId(24), read] uint16 log_filegroup_id;
	[WmiDataId(25), read] uint32 log_db_id;
	[WmiDataId(26), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(27), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader encounters a partial rollback for a particular transaction."): Amended,
    Guid("{1CD7767B-6331-437C-9D82-DED4549407FE}"), locale("MS\\0x409"),
    DisplayName("logreader_add_compensation_range"): Amended]
class XeSqlPkg_logreader_add_compensation_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_compensation_range: XeSqlPkg_logreader_add_compensation_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read, 
				XEMapId(49),
				ValueMap { 
					"130", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"223", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"166", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"145", 
					"230", 
					"232", 
					"231", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"220", 
					"126", 
					"200", 
					"206", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_ROWGROUP", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FEDTM_INFO", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_RANGE_INSERT", 
					"LOP_REMOVE_VERSION_INFO", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 last_op_code;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string first_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string last_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader agent reads an EOR record."): Amended,
    Guid("{0F0D6117-E946-4021-AE52-503E1110E7AE}"), locale("MS\\0x409"),
    DisplayName("logreader_add_eor"): Amended]
class XeSqlPkg_logreader_add_eor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_eor: XeSqlPkg_logreader_add_eor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 originator_db_version;
	[WmiDataId(9), read] uint32 originator_pubid;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string originator;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string originator_db;
	[WmiDataId(12), read, Extension("Variant")] object originator_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Outputs transactions which are added to the repl hash table as well as some hash table statistics."): Amended,
    Guid("{0F0D6117-E946-4021-AE52-503E1110E7AF}"), locale("MS\\0x409"),
    DisplayName("logreader_add_tran_info"): Amended]
class XeSqlPkg_logreader_add_tran_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_add_tran_info: XeSqlPkg_logreader_add_tran_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 xdesid_low;
	[WmiDataId(6), read] uint16 xdesid_high;
	[WmiDataId(7), read] uint32 num_hashed_trans;
	[WmiDataId(8), read] uint32 num_compensated_trans;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string begin_xact_lsn;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string last_xact_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string first_begin_xact_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string last_end_xact_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when the replication logreader agent executes a horizontal filtering proc."): Amended,
    Guid("{3E7E7095-732C-4787-B2F5-63861C9D50FB}"), locale("MS\\0x409"),
    DisplayName("logreader_apply_filter_proc"): Amended]
class XeSqlPkg_logreader_apply_filter_proc: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_apply_filter_proc: XeSqlPkg_logreader_apply_filter_proc
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filter_proc_id;
	[WmiDataId(7), read] sint8  use_row;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Outputs the replnextlsn value from the database table that the first replcmds scan uses as a starting point."): Amended,
    Guid("{53b98f69-44b3-4a9d-800c-6e1ff1d81930}"), locale("MS\\0x409"),
    DisplayName("logreader_start_scan"): Amended]
class XeSqlPkg_logreader_start_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logreader_start_scan: XeSqlPkg_logreader_start_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string start_scan_lsn;
};
		
[dynamic: ToInstance, Description("CDC Logscan session Information"): Amended,
    Guid("{B9396CBC-72C0-4c79-9F8D-A14E19AF7264}"), locale("MS\\0x409"),
    DisplayName("cdc_session"): Amended]
class XeSqlPkg_cdc_session: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_session: XeSqlPkg_cdc_session
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read] sint64 duration;
	[WmiDataId(7), read] sint32 error_count;
	[WmiDataId(8), read] sint64 tran_count;
	[WmiDataId(9), read] sint64 log_record_count;
	[WmiDataId(10), read] sint64 schema_change_count;
	[WmiDataId(11), read] sint64 command_count;
	[WmiDataId(12), read] sint64 latency;
	[WmiDataId(13), read] sint64 empty_scan_count;
	[WmiDataId(14), read] sint32 failed_sessions_count;
	[WmiDataId(15), read, Extension("WmiTime")] uint64 start_time;
	[WmiDataId(16), read, Extension("WmiTime")] uint64 end_time;
	[WmiDataId(17), read, Extension("WmiTime")] uint64 last_commit_time;
	[WmiDataId(18), read, Extension("WmiTime")] uint64 last_commit_cdc_time;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string end_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string last_commit_lsn;
	[WmiDataId(23), read, StringTermination("NullTerminated"), Format("w")] string first_begin_cdc_lsn;
	[WmiDataId(24), read, StringTermination("NullTerminated"), Format("w")] string last_commit_cdc_lsn;
};
		
[dynamic: ToInstance, Description("CDC Error Information"): Amended,
    Guid("{4626C7A0-15C5-44d8-8CC2-AE0F453B7D54}"), locale("MS\\0x409"),
    DisplayName("cdc_error"): Amended]
class XeSqlPkg_cdc_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cdc_error: XeSqlPkg_cdc_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 session_id;
	[WmiDataId(6), read] sint32 phase_number;
	[WmiDataId(7), read] sint32 error_number;
	[WmiDataId(8), read] sint32 error_severity;
	[WmiDataId(9), read] sint32 error_state;
	[WmiDataId(10), read, Extension("WmiTime")] uint64 entry_time;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string error_message;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string begin_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string sequence_value;
};
		
[dynamic: ToInstance, Description("Database recovery at the beginning of user transaction rollback stage."): Amended,
    Guid("{528080ed-634e-409d-a704-3b7f30382dae}"), locale("MS\\0x409"),
    DisplayName("recovery_in_rollback"): Amended]
class XeSqlPkg_recovery_in_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_in_rollback: XeSqlPkg_recovery_in_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Database recovery at the end of physical recovery stage."): Amended,
    Guid("{5282f5c3-1f52-40f2-abba-69b3c85503db}"), locale("MS\\0x409"),
    DisplayName("recovery_in_physical"): Amended]
class XeSqlPkg_recovery_in_physical: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_in_physical: XeSqlPkg_recovery_in_physical
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("File manager delete or mark file entries from master database and this database."): Amended,
    Guid("{589c346b-6e88-404c-9465-b9105e46eecb}"), locale("MS\\0x409"),
    DisplayName("delete_or_mark_file"): Amended]
class XeSqlPkg_delete_or_mark_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class delete_or_mark_file: XeSqlPkg_delete_or_mark_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("A new and unused database Id is found and reserved."): Amended,
    Guid("{db072c9a-85ea-4da4-a017-92eb0cfc42f6}"), locale("MS\\0x409"),
    DisplayName("database_creation_dbid_reserve"): Amended]
class XeSqlPkg_database_creation_dbid_reserve: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_creation_dbid_reserve: XeSqlPkg_database_creation_dbid_reserve
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("A database recovery unit metadata is inserted in masterDB on local brick."): Amended,
    Guid("{b077cffd-f8b7-4d6c-9ece-9e9eddd68d35}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_metadata_create"): Amended]
class XeSqlPkg_recovery_unit_metadata_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_metadata_create: XeSqlPkg_recovery_unit_metadata_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Begin the request to create a database segment at some remote or local brick from the local brick."): Amended,
    Guid("{00910bb9-e9b9-44cf-8232-82ed3c1795ac}"), locale("MS\\0x409"),
    DisplayName("database_segment_creation_begin"): Amended]
class XeSqlPkg_database_segment_creation_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_creation_begin: XeSqlPkg_database_segment_creation_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint32 local_brick_id;
};
		
[dynamic: ToInstance, Description("The request to create a database segment at some remote or local brick is finished."): Amended,
    Guid("{78a61b9c-7443-4e7b-ad0c-a68f092b6ec3}"), locale("MS\\0x409"),
    DisplayName("database_segment_creation_end"): Amended]
class XeSqlPkg_database_segment_creation_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_creation_end: XeSqlPkg_database_segment_creation_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint32 local_brick_id;
};
		
[dynamic: ToInstance, Description("user data is dropped, and logical metadata are truncated in one matrix database segment."): Amended,
    Guid("{c3d5adf8-b2d6-47e6-af6f-262e4cb592ef}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_metadata_truncate_data_drop"): Amended]
class XeSqlPkg_recovery_unit_metadata_truncate_data_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_metadata_truncate_data_drop: XeSqlPkg_recovery_unit_metadata_truncate_data_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 recovery_unit_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager started to modify a database file name."): Amended,
    Guid("{09b02254-272b-4ff7-ab59-0b184cd9f23a}"), locale("MS\\0x409"),
    DisplayName("modify_file_name"): Amended]
class XeSqlPkg_modify_file_name: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class modify_file_name: XeSqlPkg_modify_file_name
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read] sint8  is_physical_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager starts validating a file declaration."): Amended,
    Guid("{dba2227b-ff94-434d-aed7-df7cfb9ad5c8}"), locale("MS\\0x409"),
    DisplayName("validate_file"): Amended]
class XeSqlPkg_validate_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class validate_file: XeSqlPkg_validate_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Failure encountered in recreating a file."): Amended,
    Guid("{4E5595D8-014B-4C15-8002-B8418EDA66DE}"), locale("MS\\0x409"),
    DisplayName("file_recreate_failure"): Amended]
class XeSqlPkg_file_recreate_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_recreate_failure: XeSqlPkg_file_recreate_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("The files of a database segment are remapped with sys.master_files system table."): Amended,
    Guid("{0a1a426a-36cc-44d5-8c67-3b49911b29ca}"), locale("MS\\0x409"),
    DisplayName("brick_files_metadata_remap"): Amended]
class XeSqlPkg_brick_files_metadata_remap: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class brick_files_metadata_remap: XeSqlPkg_brick_files_metadata_remap
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("The recovery unit files metadata, sys.database_files, of a database segment is copied from the sys.master_files system table."): Amended,
    Guid("{19a557e6-5bb0-4d4d-a6c3-2e2279f0366e}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_file_metadata_copy"): Amended]
class XeSqlPkg_recovery_unit_file_metadata_copy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_file_metadata_copy: XeSqlPkg_recovery_unit_file_metadata_copy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("File manager created information for a physical file group information in metadata."): Amended,
    Guid("{39a93030-5667-4c14-950d-5fa538ae47d3}"), locale("MS\\0x409"),
    DisplayName("physical_filegroup_create"): Amended]
class XeSqlPkg_physical_filegroup_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class physical_filegroup_create: XeSqlPkg_physical_filegroup_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
	[WmiDataId(7), read] uint32 filegroup_log_id;
	[WmiDataId(8), read] uint32 logical_filegroup_id;
	[WmiDataId(9), read] uint32 recovery_unit_id;
	[WmiDataId(10), read] uint32 database_segment_id;
	[WmiDataId(11), read, Extension("Guid")] guid filegroup_guid;
};
		
[dynamic: ToInstance, Description("Occurs when all the files for a database segment have been attached."): Amended,
    Guid("{651ab5e8-82ba-4a6f-a705-6e68edb2bd96}"), locale("MS\\0x409"),
    DisplayName("all_database_segment_files_attach"): Amended]
class XeSqlPkg_all_database_segment_files_attach: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segment_files_attach: XeSqlPkg_all_database_segment_files_attach
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 recovery_unit_id;
	[WmiDataId(8), read] uint32 files_count;
};
		
[dynamic: ToInstance, Description("One database segment begins starting."): Amended,
    Guid("{502b0c19-c7a7-4986-a270-0e5cb0822bae}"), locale("MS\\0x409"),
    DisplayName("database_startup_begin"): Amended]
class XeSqlPkg_database_startup_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_startup_begin: XeSqlPkg_database_startup_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The data structure DBTable is initialized according to registered information in Master database catalogs."): Amended,
    Guid("{2307e2f9-2035-4abb-a1b0-a87d95d51c72}"), locale("MS\\0x409"),
    DisplayName("dbtable_initialize"): Amended]
class XeSqlPkg_dbtable_initialize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_initialize: XeSqlPkg_dbtable_initialize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The startup process of DBTable data structure is done successfully."): Amended,
    Guid("{4f9954ba-579b-4721-b47b-169e38d3f60c}"), locale("MS\\0x409"),
    DisplayName("dbtable_startup"): Amended]
class XeSqlPkg_dbtable_startup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_startup: XeSqlPkg_dbtable_startup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("The Database is migrated to MatrixDB segment."): Amended,
    Guid("{c6c7361e-f3dc-4890-b6e9-4ca02b91d432}"), locale("MS\\0x409"),
    DisplayName("database_migrate_to_matrix"): Amended]
class XeSqlPkg_database_migrate_to_matrix: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_migrate_to_matrix: XeSqlPkg_database_migrate_to_matrix
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("The database is opened at one brick successfully and a shared lock is held by the user."): Amended,
    Guid("{3e1d4cda-0b7b-48dc-af30-01fbc23bd5e9}"), locale("MS\\0x409"),
    DisplayName("database_open"): Amended]
class XeSqlPkg_database_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_open: XeSqlPkg_database_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("the new database segment id is updated at the boot block and clone tables for matrix."): Amended,
    Guid("{3f728c0d-a24d-4f18-9162-323f72efc6b2}"), locale("MS\\0x409"),
    DisplayName("recovery_unit_new_dbsegment_id_set"): Amended]
class XeSqlPkg_recovery_unit_new_dbsegment_id_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_unit_new_dbsegment_id_set: XeSqlPkg_recovery_unit_new_dbsegment_id_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 recovery_unit_id;
	[WmiDataId(7), read] uint32 old_database_segment_id;
	[WmiDataId(8), read] uint32 new_database_segment_id;
};
		
[dynamic: ToInstance, Description("The state of a database segment is changed in the local database segment"): Amended,
    Guid("{595cea72-c2c1-4a89-91ad-87a22223cfec}"), locale("MS\\0x409"),
    DisplayName("database_segment_state_change"): Amended]
class XeSqlPkg_database_segment_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_state_change: XeSqlPkg_database_segment_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 local_database_segment_id;
	[WmiDataId(8), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 previous_state;
	[WmiDataId(9), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_state;
};
		
[dynamic: ToInstance, Description("Matrix Database aggregate state is changed"): Amended,
    Guid("{d6ecf6eb-ed37-4c79-83c6-145a00fee12d}"), locale("MS\\0x409"),
    DisplayName("matrix_database_state_change"): Amended]
class XeSqlPkg_matrix_database_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class matrix_database_state_change: XeSqlPkg_matrix_database_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 previous_state;
	[WmiDataId(7), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_state;
};
		
[dynamic: ToInstance, Description("One database segment sent a state change message to the primary database segment"): Amended,
    Guid("{398add46-e1b3-4111-8996-682b146c8e21}"), locale("MS\\0x409"),
    DisplayName("database_segment_state_change_notification"): Amended]
class XeSqlPkg_database_segment_state_change_notification: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_segment_state_change_notification: XeSqlPkg_database_segment_state_change_notification
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 sender_brick_id;
	[WmiDataId(8), read] uint32 receiver_brick_id;
	[WmiDataId(9), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_segment_state;
	[WmiDataId(10), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 new_matrix_state;
};
		
[dynamic: ToInstance, Description("The primary database segment received the state of the secondary database segment"): Amended,
    Guid("{9ef9b62d-19af-4267-a15a-59d648968c2d}"), locale("MS\\0x409"),
    DisplayName("database_poll_segment_state"): Amended]
class XeSqlPkg_database_poll_segment_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_poll_segment_state: XeSqlPkg_database_poll_segment_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 sender_brick_id;
	[WmiDataId(7), read] uint32 receiver_brick_id;
	[WmiDataId(8), read] uint32 remote_database_segment_id;
	[WmiDataId(9), read, 
				XEMapId(112),
				ValueMap { 
					"5", 
					"7", 
					"6", 
					"0", 
					"2", 
					"3", 
					"1", 
					"4" },
				Values { 
					"Emergency", 
					"LastAvailableState", 
					"Offline", 
					"Online", 
					"Recovering", 
					"RecoveryPending", 
					"Restoring", 
					"Suspect" }
			] uint8 remote_database_segment_state;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent starts to execute the local operation upon receiving a valid request from a remote brick"): Amended,
    Guid("{34e0d11c-71b6-4efd-873e-c24a371c58dd}"), locale("MS\\0x409"),
    DisplayName("database_agent_local_operation_begin"): Amended]
class XeSqlPkg_database_agent_local_operation_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_local_operation_begin: XeSqlPkg_database_agent_local_operation_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read, 
				XEMapId(113),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 local_operation_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent finishes the local operation requested from a remote brick"): Amended,
    Guid("{9c92650d-edb8-47fd-ac1f-3bfae8aee043}"), locale("MS\\0x409"),
    DisplayName("database_agent_local_operation_end"): Amended]
class XeSqlPkg_database_agent_local_operation_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_local_operation_end: XeSqlPkg_database_agent_local_operation_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read, 
				XEMapId(113),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 local_operation_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Database DDL or operation agent sends a request to a remote brick to execute an operation"): Amended,
    Guid("{355ba9c9-6c4b-4909-874e-12854ca8fa8e}"), locale("MS\\0x409"),
    DisplayName("database_agent_request_begin"): Amended]
class XeSqlPkg_database_agent_request_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_request_begin: XeSqlPkg_database_agent_request_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read] uint32 remote_brick_id;
	[WmiDataId(8), read, 
				XEMapId(113),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 request_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("A database DDL or operation agent request is finished"): Amended,
    Guid("{ed683e3b-4176-475b-affc-85f8bb6d881c}"), locale("MS\\0x409"),
    DisplayName("database_agent_request_end"): Amended]
class XeSqlPkg_database_agent_request_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_request_end: XeSqlPkg_database_agent_request_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 local_brick_id;
	[WmiDataId(7), read] uint32 remote_brick_id;
	[WmiDataId(8), read, 
				XEMapId(113),
				ValueMap { 
					"4", 
					"12", 
					"1", 
					"8", 
					"2", 
					"9", 
					"10", 
					"11", 
					"6", 
					"5", 
					"7", 
					"3" },
				Values { 
					"ATTACH_DATABASE_FRAGMENT", 
					"CACHE_DATABASE_FRAGMENT", 
					"CREATE_DATABASE_FRAGMENT", 
					"CREATE_FILEGROUP", 
					"DROP_DATABASE_FRAGMENT", 
					"DROP_FILEGROUP", 
					"MODIFY_FILEGROUP", 
					"PREPARE_DATABASE_FRAGMENT", 
					"SHUTDOWN_DATABASE", 
					"START_DATABASE_FRAGMENT", 
					"STATE_OPTION", 
					"VALIDATE_FILE" }
			] uint32 request_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("All database segments are dropped, and the physical files may or may not be deleted"): Amended,
    Guid("{2bcad792-d550-4da5-ab34-ba577c3bde49}"), locale("MS\\0x409"),
    DisplayName("all_database_segments_drop"): Amended]
class XeSqlPkg_all_database_segments_drop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_database_segments_drop: XeSqlPkg_all_database_segments_drop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  files_deleted;
};
		
[dynamic: ToInstance, Description("Database is renamed, but the transaction has not been submitted yet."): Amended,
    Guid("{6e75b191-2bfb-43bf-9c8a-853cc1e4a703}"), locale("MS\\0x409"),
    DisplayName("database_rename"): Amended]
class XeSqlPkg_database_rename: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_rename: XeSqlPkg_database_rename
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string previous_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("One or more database option changes are changed in metadata or bootpage"): Amended,
    Guid("{27ac378f-7ec2-41d9-ae1b-6b4906eaf774}"), locale("MS\\0x409"),
    DisplayName("database_option_change"): Amended]
class XeSqlPkg_database_option_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_option_change: XeSqlPkg_database_option_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(31),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"5" },
				Values { 
					"Database SE Options", 
					"Database RE Options", 
					"Database State or Access Option", 
					"Database Collation" }
			] uint8 option_type;
	[WmiDataId(7), read] uint32 previous_value;
	[WmiDataId(8), read] uint32 new_value;
};
		
[dynamic: ToInstance, Description("Database bootpage is sync'ed with the DB Registration information in metadata"): Amended,
    Guid("{0d0bc431-11c9-43d4-a8c9-5fde55815fae}"), locale("MS\\0x409"),
    DisplayName("database_bootpage_sync"): Amended]
class XeSqlPkg_database_bootpage_sync: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_bootpage_sync: XeSqlPkg_database_bootpage_sync
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("DBTABLE structure is refreshed after database options are changed"): Amended,
    Guid("{7c0ebbbd-f8da-4116-a291-68c28e124568}"), locale("MS\\0x409"),
    DisplayName("dbtable_options_refresh"): Amended]
class XeSqlPkg_dbtable_options_refresh: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dbtable_options_refresh: XeSqlPkg_dbtable_options_refresh
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Occurs when all database files has already been formatted on disk for an ADD FILE DDL statement."): Amended,
    Guid("{df631ed7-6b45-4f32-b82d-5ecd4faf57aa}"), locale("MS\\0x409"),
    DisplayName("all_files_created"): Amended]
class XeSqlPkg_all_files_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class all_files_created: XeSqlPkg_all_files_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager added file metadata in the master database segment."): Amended,
    Guid("{0799fd19-1129-4d82-a5d9-ca0343222249}"), locale("MS\\0x409"),
    DisplayName("add_file_in_master"): Amended]
class XeSqlPkg_add_file_in_master: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_file_in_master: XeSqlPkg_add_file_in_master
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Occurs when a database file is added into the database segment."): Amended,
    Guid("{985b3d7e-9a4c-414c-80ae-6c2c3169c1f5}"), locale("MS\\0x409"),
    DisplayName("file_added_in_database"): Amended]
class XeSqlPkg_file_added_in_database: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_added_in_database: XeSqlPkg_file_added_in_database
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] uint32 filegroup_id;
	[WmiDataId(9), read] sint8  is_log_file;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_logical_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_physical_name;
};
		
[dynamic: ToInstance, Description("Occurs when add file action is rolled back."): Amended,
    Guid("{7bebe39b-ab60-4492-a5a9-433f0d41b1d6}"), locale("MS\\0x409"),
    DisplayName("add_file_rollback"): Amended]
class XeSqlPkg_add_file_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class add_file_rollback: XeSqlPkg_add_file_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file is prepared to be dropped."): Amended,
    Guid("{ecc882e2-a072-48b3-9af7-36765f355b14}"), locale("MS\\0x409"),
    DisplayName("drop_file_prepared"): Amended]
class XeSqlPkg_drop_file_prepared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_prepared: XeSqlPkg_drop_file_prepared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when drop file action is committed."): Amended,
    Guid("{bd8216b5-f8e0-4b37-bb08-2b8e2e9f8a5e}"), locale("MS\\0x409"),
    DisplayName("drop_file_committed"): Amended]
class XeSqlPkg_drop_file_committed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_committed: XeSqlPkg_drop_file_committed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when drop file action is rolled back."): Amended,
    Guid("{37f35540-18a5-45bf-adfc-540e61e2bcd9}"), locale("MS\\0x409"),
    DisplayName("drop_file_rollback"): Amended]
class XeSqlPkg_drop_file_rollback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class drop_file_rollback: XeSqlPkg_drop_file_rollback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
};
		
[dynamic: ToInstance, Description("Occurs when the file manager modified the property of a database file."): Amended,
    Guid("{f988dda2-9ad0-46d5-b4be-cf8fe5f8dfdd}"), locale("MS\\0x409"),
    DisplayName("modify_file_operation"): Amended]
class XeSqlPkg_modify_file_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class modify_file_operation: XeSqlPkg_modify_file_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 file_id;
	[WmiDataId(8), read] sint8  is_log_file;
	[WmiDataId(9), read, 
				XEMapId(118),
				ValueMap { 
					"16", 
					"8", 
					"1", 
					"32", 
					"1073741824", 
					"2", 
					"4" },
				Values { 
					"Filegrowth", 
					"Maxsize", 
					"Name", 
					"NewName", 
					"Offline", 
					"Physname", 
					"Size" }
			] uint32 modification_type;
	[WmiDataId(10), read] uint32 new_value;
	[WmiDataId(11), read] sint8  is_growth_by_percentage;
};
		
[dynamic: ToInstance, Description("Occurs when the database agent on the connect brick starts to create a filegroup."): Amended,
    Guid("{af1d8134-6f46-47b9-9ac4-886c9d1735dd}"), locale("MS\\0x409"),
    DisplayName("database_agent_create_filegroup"): Amended]
class XeSqlPkg_database_agent_create_filegroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_create_filegroup: XeSqlPkg_database_agent_create_filegroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
	[WmiDataId(7), read] uint32 log_filegroup_id;
	[WmiDataId(8), read, 
				XEMapId(119),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"0" },
				Values { 
					"FILESTREAM", 
					"FILESTREAMLOG", 
					"MEMORY_OPTIMIZED", 
					"ROWS" }
			] uint32 type;
};
		
[dynamic: ToInstance, Description("Occurs when the database agent on the connect brick starts to drop a filegroup."): Amended,
    Guid("{d734e3ed-cda0-4cf8-a409-c2aed48a230e}"), locale("MS\\0x409"),
    DisplayName("database_agent_drop_filegroup"): Amended]
class XeSqlPkg_database_agent_drop_filegroup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_agent_drop_filegroup: XeSqlPkg_database_agent_drop_filegroup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 filegroup_id;
};
		
[dynamic: ToInstance, Description("Occurs when the database MetaData version has been updated."): Amended,
    Guid("{7f53f59d-927b-4f0d-b40e-064e4a79d12f}"), locale("MS\\0x409"),
    DisplayName("metadata_database_mdversion_updated"): Amended]
class XeSqlPkg_metadata_database_mdversion_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_database_mdversion_updated: XeSqlPkg_metadata_database_mdversion_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 new_version;
};
		
[dynamic: ToInstance, Description("Occurs when the file group manager changed the name for a physical filegroup."): Amended,
    Guid("{e84a1fde-2edf-4518-a47f-ae63f3a73116}"), locale("MS\\0x409"),
    DisplayName("filegroup_name_change"): Amended]
class XeSqlPkg_filegroup_name_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filegroup_name_change: XeSqlPkg_filegroup_name_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 filegroup_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string new_name;
};
		
[dynamic: ToInstance, Description("Occurs when the file group manager changed the property for a physical filegroup."): Amended,
    Guid("{b6d0fe4c-06f2-478e-9478-399ac3836f0a}"), locale("MS\\0x409"),
    DisplayName("filegroup_property_change"): Amended]
class XeSqlPkg_filegroup_property_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class filegroup_property_change: XeSqlPkg_filegroup_property_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 database_segment_id;
	[WmiDataId(7), read] uint32 filegroup_id;
	[WmiDataId(8), read, 
				XEMapId(120),
				ValueMap { 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"Offline", 
					"Online", 
					"ReadOnly", 
					"ReadWrite" }
			] uint32 new_property;
};
		
[dynamic: ToInstance, Description("Number of group commit waiters has changed"): Amended,
    Guid("{268c5088-ea00-465f-9224-2a4b9fe34bd5}"), locale("MS\\0x409"),
    DisplayName("group_commit_value_changed"): Amended]
class XeSqlPkg_group_commit_value_changed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class group_commit_value_changed: XeSqlPkg_group_commit_value_changed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 waiters_per_flush;
	[WmiDataId(6), read] uint64 duration_ms;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint32 flushes_per_sec;
	[WmiDataId(9), read] uint32 next_sample_duration_ms;
	[WmiDataId(10), read] uint32 next_sample_index;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(6), read] uint32 waiters;
	[WmiDataId(7), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Log flush was requested"): Amended,
    Guid("{d9b42c24-fb8a-4744-80f6-9b15149173a1}"), locale("MS\\0x409"),
    DisplayName("log_flush_requested"): Amended]
class XeSqlPkg_log_flush_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(3)]
class log_flush_requested: XeSqlPkg_log_flush_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(8),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Waiters limit reached", 
					"Time limit reached", 
					"Immediate request" }
			] sint32 reason;
	[WmiDataId(7), read] uint32 waiters;
	[WmiDataId(8), read] uint64 log_block_id;
	[WmiDataId(9), read] sint8  is_delayed_durable;
	[WmiDataId(10), read] sint8  only_signal;
};
		
[dynamic: ToInstance, Description("Log write buffer was allocated"): Amended,
    Guid("{455e9012-2a18-4131-b6bf-1391e93d7acd}"), locale("MS\\0x409"),
    DisplayName("log_buffer_allocated"): Amended]
class XeSqlPkg_log_buffer_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_buffer_allocated: XeSqlPkg_log_buffer_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read] uint32 size;
	[WmiDataId(7), read, 
				XEMapId(9),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Regular", 
					"Locked" }
			] sint32 type;
	[WmiDataId(8), read] uint32 current_count;
};
		
[dynamic: ToInstance, Description("Log block was freed"): Amended,
    Guid("{44802c4c-63dd-4d54-8e23-e6b04d66ab64}"), locale("MS\\0x409"),
    DisplayName("log_buffer_freed"): Amended]
class XeSqlPkg_log_buffer_freed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_buffer_freed: XeSqlPkg_log_buffer_freed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  address;
	[WmiDataId(6), read] uint32 current_count;
};
		
[dynamic: ToInstance, Description("After some amount of log is snipped but not all."): Amended,
    Guid("{4E7BCABC-6877-4327-8DF9-CE839E2AC945}"), locale("MS\\0x409"),
    DisplayName("after_snipping_some_log"): Amended]
class XeSqlPkg_after_snipping_some_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class after_snipping_some_log: XeSqlPkg_after_snipping_some_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Occurs when DBCC CHECK enters a new phase of the checking. Use this event to trace the phases of DBCC CHECK process."): Amended,
    Guid("{AFE41265-C11F-4c9b-86F5-1C72868CBD50}"), locale("MS\\0x409"),
    DisplayName("check_phase_tracing"): Amended]
class XeSqlPkg_check_phase_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_phase_tracing: XeSqlPkg_check_phase_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
	[WmiDataId(6), read] uint16 database_id;
	[WmiDataId(7), read] uint64 call_duration;
	[WmiDataId(8), read] sint8  is_remote;
	[WmiDataId(9), read, 
				XEMapId(64),
				ValueMap { 
					"1", 
					"6", 
					"18", 
					"14", 
					"0", 
					"11", 
					"4", 
					"5", 
					"8", 
					"15", 
					"16", 
					"7", 
					"10", 
					"17", 
					"2", 
					"12", 
					"3", 
					"13", 
					"9" },
				Values { 
					"CHECK_ALLOCATIONS", 
					"CHECK_CATALOG", 
					"CHECK_PHASE_LAST", 
					"DATABASE_REPAIR", 
					"DATABASE_SNAPSHOT_CREATION", 
					"EMERGENCY_MODE_REPAIR", 
					"INDEX_DEEP_DIVE", 
					"INDEX_DEEP_DIVE_CHECK_ONE_INDEX", 
					"INDEXED_VIEW_CHECKS", 
					"PARALLEL_THREAD", 
					"REPLICATED_TABLES_CHECK", 
					"SERVICE_BROKER_CHECKS", 
					"SPATIAL_INDEX_CHECKS", 
					"SXI_INDEX_CHECKS", 
					"SYSTEM_TABLE_CHECKS", 
					"SYSTEM_TABLE_PRIMITIVES", 
					"USER_TABLE_CHECKS", 
					"VERIFY_FILESTREAM_TOMBSTONES", 
					"XML_INDEX_CHECKS" }
			] uint32 command_phase;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use this event to collect the number of messages a DBCC CHECK thread has sent or received."): Amended,
    Guid("{85909298-C1B1-4386-BD70-62C89285150A}"), locale("MS\\0x409"),
    DisplayName("check_thread_message_statistics"): Amended]
class XeSqlPkg_check_thread_message_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_message_statistics: XeSqlPkg_check_thread_message_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_remote;
	[WmiDataId(7), read] uint32 messages_sent;
	[WmiDataId(8), read] uint32 messages_received;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use this event to collect the number of logical, physical, and read-ahead IOs a DBCC CHECK thread has performed."): Amended,
    Guid("{8F25DB3D-9289-48c6-B864-05A674F209A8}"), locale("MS\\0x409"),
    DisplayName("check_thread_page_io_statistics"): Amended]
class XeSqlPkg_check_thread_page_io_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_page_io_statistics: XeSqlPkg_check_thread_page_io_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_remote;
	[WmiDataId(7), read] uint64 logical_reads;
	[WmiDataId(8), read] uint64 physical_reads;
	[WmiDataId(9), read] uint64 read_ahead_reads;
};
		
[dynamic: ToInstance, Description("Occurs when a phase of DBCC CHECK is finished. Use This event to collect the number and time of page latch and IO latch waits."): Amended,
    Guid("{0C226861-B916-4f09-B22A-2C902278D678}"), locale("MS\\0x409"),
    DisplayName("check_thread_page_latch_statistics"): Amended]
class XeSqlPkg_check_thread_page_latch_statistics: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_thread_page_latch_statistics: XeSqlPkg_check_thread_page_latch_statistics
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_remote;
	[WmiDataId(7), read] uint64 total_page_io_latch_waits;
	[WmiDataId(8), read] uint64 page_io_latch_wait_time_in_ms;
	[WmiDataId(9), read] uint64 total_page_latch_waits;
	[WmiDataId(10), read] uint64 page_latch_wait_time_in_ms;
};
		
[dynamic: ToInstance, Description("Occurs when a request message is sent or received. Use this event to trace a request message sent to or received from a remote brick."): Amended,
    Guid("{B8624DD9-9B63-440a-AC8F-325A03E88C9B}"), locale("MS\\0x409"),
    DisplayName("check_message_request"): Amended]
class XeSqlPkg_check_message_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_message_request: XeSqlPkg_check_message_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read, 
				XEMapId(65),
				ValueMap { 
					"3", 
					"4", 
					"7", 
					"6", 
					"5", 
					"1", 
					"8", 
					"2", 
					"0" },
				Values { 
					"x_eRequest_CheckAllocPhaseBegin", 
					"x_eRequest_CheckTablesPhaseBegin", 
					"x_eRequest_ExtendedIndex", 
					"x_eRequest_GetNextCrossRowsetFact", 
					"x_eRequest_GetNextResultSetRow", 
					"x_eRequest_InstallDbccTLS", 
					"x_eRequest_ShutdownRemote", 
					"x_eRequest_SysTablesPhaseBegin", 
					"x_eRequest_UnknownType" }
			] uint32 request_type;
	[WmiDataId(7), read, 
				XEMapId(26),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
};
		
[dynamic: ToInstance, Description("Occurs when a reply message is sent or received. Use this event to trace a reply message sent to or received from a remote brick."): Amended,
    Guid("{48D0026A-C7A4-4f6d-97EF-BAB1F7E2EAE3}"), locale("MS\\0x409"),
    DisplayName("check_message_reply"): Amended]
class XeSqlPkg_check_message_reply: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class check_message_reply: XeSqlPkg_check_message_reply
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read, 
				XEMapId(66),
				ValueMap { 
					"4", 
					"5", 
					"2", 
					"1", 
					"3", 
					"6", 
					"0" },
				Values { 
					"x_eReply_CrossRowsetFact", 
					"x_eReply_ExtendedIndex", 
					"x_eReply_RemotePhaseComplete", 
					"x_eReply_RemoteThreadInitialized", 
					"x_eReply_ResultSetRow", 
					"x_eReply_ShutdownRemote", 
					"x_eReply_UnknownType" }
			] uint32 reply_type;
	[WmiDataId(7), read, 
				XEMapId(26),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
};
		
[dynamic: ToInstance, Description("Traces Checkpoint DB message sent to a remote brick."): Amended,
    Guid("{65bdab16-3b04-45f6-b7ef-aa939c618725}"), locale("MS\\0x409"),
    DisplayName("checkpoint_db_request"): Amended]
class XeSqlPkg_checkpoint_db_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class checkpoint_db_request: XeSqlPkg_checkpoint_db_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(26),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
	[WmiDataId(6), read] uint64 time_frame;
	[WmiDataId(7), read] sint8  truncate_log;
};
		
[dynamic: ToInstance, Description("Reports the DBID used for Transient Replica."): Amended,
    Guid("{86800D62-10AC-4c0b-8EBC-929CA3C85551}"), locale("MS\\0x409"),
    DisplayName("replica_create_start"): Amended]
class XeSqlPkg_replica_create_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_start: XeSqlPkg_replica_create_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Traces Create Replica message sent to a remote brick."): Amended,
    Guid("{E623D6BD-EB4B-4290-822C-4D0519591695}"), locale("MS\\0x409"),
    DisplayName("replica_create_request"): Amended]
class XeSqlPkg_replica_create_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_request: XeSqlPkg_replica_create_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read, 
				XEMapId(114),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, 
				XEMapId(26),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
	[WmiDataId(10), read] uint64 split_age;
};
		
[dynamic: ToInstance, Description("Traces recover-to age response from a remote brick."): Amended,
    Guid("{F7B3FF7F-C947-44ec-B150-C4D12DA240E5}"), locale("MS\\0x409"),
    DisplayName("replica_create_reply"): Amended]
class XeSqlPkg_replica_create_reply: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_reply: XeSqlPkg_replica_create_reply
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint64 brick_age;
	[WmiDataId(8), read, 
				XEMapId(114),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(9), read, 
				XEMapId(26),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint32 message_opcode;
};
		
[dynamic: ToInstance, Description("Occurs when all messages are sent and the replica is about to be created on the connect brick."): Amended,
    Guid("{2624EA35-70AA-4eea-93B5-BE9EE333D4EC}"), locale("MS\\0x409"),
    DisplayName("replica_create_local_sent"): Amended]
class XeSqlPkg_replica_create_local_sent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_local_sent: XeSqlPkg_replica_create_local_sent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(114),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
};
		
[dynamic: ToInstance, Description("Signals completion of local call."): Amended,
    Guid("{46335EED-8EF7-40be-98D2-26EF5899500E}"), locale("MS\\0x409"),
    DisplayName("replica_create_local_complete"): Amended]
class XeSqlPkg_replica_create_local_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_local_complete: XeSqlPkg_replica_create_local_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(114),
				ValueMap { 
					"2", 
					"1", 
					"3" },
				Values { 
					"RECOVERREPLICA", 
					"SETUPREPLICA", 
					"WAITFORPEERS" }
			] uint32 phase_id;
	[WmiDataId(6), read] uint64 split_age;
};
		
[dynamic: ToInstance, Description("Signals the end of the conversation"): Amended,
    Guid("{83B6F816-C469-4244-B21A-C7335123D53C}"), locale("MS\\0x409"),
    DisplayName("replica_create_wait_for_peers"): Amended]
class XeSqlPkg_replica_create_wait_for_peers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_create_wait_for_peers: XeSqlPkg_replica_create_wait_for_peers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Signals the begining of drop replica db operation."): Amended,
    Guid("{45939252-E67E-40b4-8AEA-7821EA6A2E95}"), locale("MS\\0x409"),
    DisplayName("replica_destroy_start"): Amended]
class XeSqlPkg_replica_destroy_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class replica_destroy_start: XeSqlPkg_replica_destroy_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
};
		
[dynamic: ToInstance, Description("Track mixed extent activation and deactivation operations."): Amended,
    Guid("{89d90e20-2739-4233-81e3-ab70729462f8}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_activation"): Amended]
class XeSqlPkg_mixed_extent_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_activation: XeSqlPkg_mixed_extent_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 extent_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  activate;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed extent allocation operations"): Amended,
    Guid("{c3ca2852-3b85-4dfb-a22f-359e374feff8}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_allocation"): Amended]
class XeSqlPkg_mixed_extent_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_allocation: XeSqlPkg_mixed_extent_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 last_mixed_extent_file_id;
	[WmiDataId(6), read] uint32 last_mixed_extent_extent_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 extent_id;
	[WmiDataId(9), read] sint8  is_logged;
	[WmiDataId(10), read] sint8  rollback;
	[WmiDataId(11), read] sint8  success;
	[WmiDataId(12), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed extent deallocation operations."): Amended,
    Guid("{84839d7c-0395-405f-8d38-7a80baa26b07}"), locale("MS\\0x409"),
    DisplayName("mixed_extent_deallocation"): Amended]
class XeSqlPkg_mixed_extent_deallocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_extent_deallocation: XeSqlPkg_mixed_extent_deallocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 extent_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed page allocation operations"): Amended,
    Guid("{4aaa0742-f8cf-4ad7-a198-937ec2af31ee}"), locale("MS\\0x409"),
    DisplayName("mixed_page_allocation"): Amended]
class XeSqlPkg_mixed_page_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_allocation: XeSqlPkg_mixed_page_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track mixed page allocation operations"): Amended,
    Guid("{93fcc7a2-6946-4e91-8591-f0608f489d38}"), locale("MS\\0x409"),
    DisplayName("mixed_page_deallocation"): Amended]
class XeSqlPkg_mixed_page_deallocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_deallocation: XeSqlPkg_mixed_page_deallocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read] sint8  is_logged;
	[WmiDataId(8), read] sint8  rollback;
	[WmiDataId(9), read] sint8  success;
	[WmiDataId(10), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{6a7575ed-6da5-4c49-bed1-81654ecc6fb1}"), locale("MS\\0x409"),
    DisplayName("mixed_page_scan_file"): Amended]
class XeSqlPkg_mixed_page_scan_file: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_scan_file: XeSqlPkg_mixed_page_scan_file
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 sgam_file;
	[WmiDataId(6), read] uint32 sgam_page;
	[WmiDataId(7), read] uint16 start_file_id;
	[WmiDataId(8), read] uint32 start_page_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{4c5fde39-913f-4219-b659-6ac63713e681}"), locale("MS\\0x409"),
    DisplayName("mixed_page_scan_page"): Amended]
class XeSqlPkg_mixed_page_scan_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_scan_page: XeSqlPkg_mixed_page_scan_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 sgam_file;
	[WmiDataId(6), read] uint32 sgam_page;
	[WmiDataId(7), read] uint16 start_file_id;
	[WmiDataId(8), read] uint32 start_page_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Track the activity of SGAM scans for mixed page allocation"): Amended,
    Guid("{9e2cb6b0-28d4-4ee3-800b-4a7ee0119810}"), locale("MS\\0x409"),
    DisplayName("mixed_page_skipextent"): Amended]
class XeSqlPkg_mixed_page_skipextent: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mixed_page_skipextent: XeSqlPkg_mixed_page_skipextent
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 file_id;
	[WmiDataId(6), read] uint32 page_id;
	[WmiDataId(7), read, 
				XEMapId(44),
				ValueMap { 
					"3", 
					"2", 
					"0", 
					"1", 
					"-2", 
					"-1" },
				Values { 
					"LK_DEADLOCK", 
					"LK_FAILED", 
					"LK_GRANTED", 
					"LK_GRANTEDWAIT", 
					"LK_HELDBYPARENT", 
					"LK_NOTNEEDED" }
			] uint32 lock_result;
	[WmiDataId(8), read] uint32 skipcount;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore protocol events"): Amended,
    Guid("{3B469B58-C8D2-43e1-A31F-30D94FBA806F}"), locale("MS\\0x409"),
    DisplayName("mbr_protocol"): Amended]
class XeSqlPkg_mbr_protocol: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_protocol: XeSqlPkg_mbr_protocol
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 backup_worker_id;
	[WmiDataId(6), read] sint8  is_send;
	[WmiDataId(7), read] sint8  is_pre_event;
	[WmiDataId(8), read] sint8  is_request;
	[WmiDataId(9), read, 
				XEMapId(127),
				ValueMap { 
					"221", 
					"220", 
					"1535", 
					"1524", 
					"214", 
					"213", 
					"615", 
					"713", 
					"714", 
					"715", 
					"1318", 
					"2307", 
					"2308", 
					"2303", 
					"2503", 
					"2528", 
					"208", 
					"209", 
					"1502", 
					"2012", 
					"1330", 
					"1216", 
					"1217", 
					"1249", 
					"1248", 
					"1205", 
					"1343", 
					"1344", 
					"1204", 
					"1945", 
					"1293", 
					"2023", 
					"1243", 
					"1246", 
					"2403", 
					"1201", 
					"1353", 
					"1355", 
					"1319", 
					"1352", 
					"1351", 
					"1321", 
					"1323", 
					"1354", 
					"1350", 
					"1296", 
					"1294", 
					"2013", 
					"2007", 
					"2017", 
					"2025", 
					"2024", 
					"1313", 
					"811", 
					"2006", 
					"2005", 
					"2021", 
					"2020", 
					"1946", 
					"1923", 
					"1913", 
					"1925", 
					"1924", 
					"1912", 
					"1914", 
					"1926", 
					"501", 
					"1904", 
					"2008", 
					"2018", 
					"1295", 
					"1327", 
					"1328", 
					"1300", 
					"1325", 
					"1356", 
					"1301", 
					"1329", 
					"1302", 
					"812", 
					"809", 
					"808", 
					"1326", 
					"1903", 
					"807", 
					"2500", 
					"2501", 
					"2502", 
					"1242", 
					"1269", 
					"1268", 
					"1270", 
					"1938", 
					"1939", 
					"2310", 
					"2002", 
					"2003", 
					"2010", 
					"1937", 
					"1802", 
					"1801", 
					"2608", 
					"704", 
					"703", 
					"1949", 
					"210", 
					"215", 
					"204", 
					"205", 
					"706", 
					"707", 
					"716", 
					"1220", 
					"1322", 
					"1324", 
					"1221", 
					"1222", 
					"2127", 
					"2126", 
					"2120", 
					"2119", 
					"2104", 
					"2116", 
					"2110", 
					"2106", 
					"2118", 
					"2117", 
					"2114", 
					"2113", 
					"2109", 
					"2115", 
					"2133", 
					"2128", 
					"2132", 
					"2026", 
					"2107", 
					"1035", 
					"1287", 
					"841", 
					"840", 
					"1235", 
					"1234", 
					"1212", 
					"829", 
					"828", 
					"837", 
					"836", 
					"1247", 
					"853", 
					"225", 
					"224", 
					"2315", 
					"2302", 
					"2312", 
					"2305", 
					"2311", 
					"2318", 
					"1281", 
					"1255", 
					"1254", 
					"758", 
					"10", 
					"1262", 
					"1267", 
					"1266", 
					"1264", 
					"1263", 
					"1261", 
					"770", 
					"766", 
					"755", 
					"792", 
					"769", 
					"772", 
					"776", 
					"764", 
					"761", 
					"759", 
					"754", 
					"767", 
					"793", 
					"771", 
					"768", 
					"774", 
					"781", 
					"765", 
					"787", 
					"786", 
					"1936", 
					"1935", 
					"789", 
					"2202", 
					"2203", 
					"2204", 
					"2208", 
					"2206", 
					"2200", 
					"2210", 
					"2201", 
					"2205", 
					"1256", 
					"1950", 
					"304", 
					"1947", 
					"775", 
					"763", 
					"762", 
					"2301", 
					"2300", 
					"1929", 
					"760", 
					"1257", 
					"2209", 
					"2207", 
					"2530", 
					"2529", 
					"2534", 
					"2533", 
					"2548", 
					"2547", 
					"2554", 
					"2553", 
					"2540", 
					"2539", 
					"2542", 
					"2541", 
					"2550", 
					"2549", 
					"2544", 
					"2543", 
					"2511", 
					"2510", 
					"2536", 
					"2535", 
					"2546", 
					"2545", 
					"2538", 
					"2537", 
					"2582", 
					"2509", 
					"2552", 
					"2551", 
					"2558", 
					"2557", 
					"2532", 
					"2531", 
					"2583", 
					"2556", 
					"2555", 
					"2581", 
					"2568", 
					"2567", 
					"2508", 
					"2505", 
					"2504", 
					"2560", 
					"2559", 
					"2517", 
					"2516", 
					"2515", 
					"2580", 
					"2579", 
					"2575", 
					"2576", 
					"2578", 
					"2506", 
					"2507", 
					"2514", 
					"2563", 
					"2561", 
					"2569", 
					"2522", 
					"2518", 
					"2526", 
					"2524", 
					"2520", 
					"2577", 
					"2570", 
					"2513", 
					"2512", 
					"2523", 
					"2519", 
					"2527", 
					"2525", 
					"2564", 
					"2562", 
					"2521", 
					"2571", 
					"2565", 
					"2566", 
					"1273", 
					"805", 
					"804", 
					"806", 
					"1405", 
					"1401", 
					"1400", 
					"1407", 
					"1406", 
					"1404", 
					"1346", 
					"2019", 
					"705", 
					"1206", 
					"1948", 
					"1276", 
					"1274", 
					"2711", 
					"1283", 
					"1291", 
					"1292", 
					"1284", 
					"1961", 
					"227", 
					"230", 
					"231", 
					"228", 
					"1271", 
					"1515", 
					"1526", 
					"1907", 
					"843", 
					"842", 
					"1275", 
					"1110", 
					"1226", 
					"611", 
					"1922", 
					"1223", 
					"1916", 
					"2407", 
					"2406", 
					"2405", 
					"2404", 
					"2022", 
					"954", 
					"955", 
					"1214", 
					"1000", 
					"1009", 
					"1010", 
					"1008", 
					"1015", 
					"1211", 
					"2415", 
					"2416", 
					"2409", 
					"2413", 
					"2411", 
					"2412", 
					"2414", 
					"2410", 
					"2408", 
					"1215", 
					"1232", 
					"1225", 
					"959", 
					"839", 
					"925", 
					"924", 
					"1942", 
					"1943", 
					"1944", 
					"1228", 
					"968", 
					"969", 
					"1918", 
					"1910", 
					"2402", 
					"1920", 
					"2401", 
					"1917", 
					"1919", 
					"1345", 
					"917", 
					"918", 
					"912", 
					"902", 
					"909", 
					"905", 
					"904", 
					"922", 
					"908", 
					"919", 
					"923", 
					"907", 
					"921", 
					"906", 
					"903", 
					"910", 
					"915", 
					"916", 
					"901", 
					"900", 
					"913", 
					"911", 
					"920", 
					"914", 
					"1905", 
					"966", 
					"1906", 
					"610", 
					"821", 
					"825", 
					"823", 
					"824", 
					"822", 
					"827", 
					"826", 
					"838", 
					"1282", 
					"1278", 
					"1280", 
					"1277", 
					"1279", 
					"844", 
					"835", 
					"834", 
					"2309", 
					"1348", 
					"833", 
					"832", 
					"1025", 
					"1320", 
					"1314", 
					"1316", 
					"1308", 
					"1309", 
					"1252", 
					"1900", 
					"1901", 
					"936", 
					"934", 
					"932", 
					"933", 
					"939", 
					"938", 
					"937", 
					"935", 
					"941", 
					"940", 
					"930", 
					"1915", 
					"2607", 
					"1911", 
					"1921", 
					"1940", 
					"1335", 
					"1336", 
					"1337", 
					"1334", 
					"1338", 
					"1203", 
					"1340", 
					"1209", 
					"1231", 
					"1317", 
					"1908", 
					"1224", 
					"1251", 
					"1909", 
					"1934", 
					"1933", 
					"1200", 
					"845", 
					"1134", 
					"1133", 
					"1107", 
					"1131", 
					"1339", 
					"1115", 
					"2011", 
					"1124", 
					"1123", 
					"1101", 
					"1112", 
					"1120", 
					"1127", 
					"1135", 
					"1136", 
					"1132", 
					"1126", 
					"1105", 
					"1138", 
					"1140", 
					"1139", 
					"1121", 
					"1141", 
					"1116", 
					"1117", 
					"1103", 
					"1118", 
					"1125", 
					"1108", 
					"1128", 
					"1104", 
					"1129", 
					"1113", 
					"1111", 
					"1114", 
					"1122", 
					"1106", 
					"1130", 
					"1119", 
					"1137", 
					"1213", 
					"1928", 
					"1245", 
					"1218", 
					"1303", 
					"1304", 
					"2705", 
					"2708", 
					"2709", 
					"2702", 
					"2703", 
					"2704", 
					"2707", 
					"2706", 
					"1240", 
					"1239", 
					"1244", 
					"1001", 
					"1034", 
					"1006", 
					"1029", 
					"1039", 
					"1023", 
					"1022", 
					"1028", 
					"1005", 
					"1031", 
					"1032", 
					"1040", 
					"1037", 
					"1042", 
					"1018", 
					"1044", 
					"1007", 
					"1004", 
					"1019", 
					"1033", 
					"1038", 
					"1002", 
					"1012", 
					"1021", 
					"1020", 
					"1024", 
					"1013", 
					"1017", 
					"1027", 
					"1026", 
					"1041", 
					"1016", 
					"1003", 
					"1014", 
					"1036", 
					"1030", 
					"1011", 
					"1043", 
					"1045", 
					"1241", 
					"931", 
					"1305", 
					"1306", 
					"1307", 
					"1710", 
					"1536", 
					"1721", 
					"1722", 
					"1312", 
					"2108", 
					"2102", 
					"2103", 
					"1299", 
					"2004", 
					"2001", 
					"2000", 
					"1288", 
					"2015", 
					"2014", 
					"2016", 
					"1402", 
					"1403", 
					"1233", 
					"1208", 
					"2801", 
					"217", 
					"2131", 
					"500", 
					"2805", 
					"752", 
					"753", 
					"750", 
					"751", 
					"852", 
					"1530", 
					"1529", 
					"2804", 
					"2803", 
					"201", 
					"2606", 
					"2600", 
					"2603", 
					"2601", 
					"2604", 
					"2609", 
					"2602", 
					"2605", 
					"1960", 
					"1290", 
					"2910", 
					"2911", 
					"2904", 
					"2906", 
					"2907", 
					"2908", 
					"2909", 
					"2902", 
					"2900", 
					"2903", 
					"2901", 
					"2905", 
					"1533", 
					"1531", 
					"1930", 
					"1931", 
					"1285", 
					"1927", 
					"1236", 
					"1210", 
					"1342", 
					"1286", 
					"616", 
					"612", 
					"504", 
					"614", 
					"226", 
					"216", 
					"218", 
					"246", 
					"245", 
					"300", 
					"301", 
					"302", 
					"790", 
					"2710", 
					"1289", 
					"1237", 
					"207", 
					"1501", 
					"1500", 
					"1932", 
					"1315", 
					"613", 
					"601", 
					"244", 
					"1109", 
					"1513", 
					"851", 
					"1341", 
					"605", 
					"1713", 
					"211", 
					"212", 
					"229", 
					"1714", 
					"239", 
					"240", 
					"953", 
					"1238", 
					"1310", 
					"950", 
					"961", 
					"962", 
					"963", 
					"964", 
					"1349", 
					"960", 
					"1229", 
					"957", 
					"967", 
					"951", 
					"952", 
					"958", 
					"2304", 
					"2009", 
					"234", 
					"247", 
					"223", 
					"233", 
					"222", 
					"232", 
					"242", 
					"241", 
					"236", 
					"238", 
					"243", 
					"2306", 
					"2574", 
					"206", 
					"2129", 
					"2130", 
					"1202", 
					"200", 
					"1719", 
					"709", 
					"710", 
					"1272", 
					"2316", 
					"2317", 
					"2802", 
					"502", 
					"1347", 
					"1250", 
					"777", 
					"780", 
					"778", 
					"788", 
					"791", 
					"1227", 
					"2", 
					"7", 
					"4", 
					"3", 
					"1", 
					"5", 
					"6", 
					"1311", 
					"831", 
					"2806", 
					"235", 
					"237", 
					"248", 
					"1715", 
					"1331", 
					"1941", 
					"1230", 
					"1527", 
					"1528", 
					"503", 
					"1902", 
					"602", 
					"617", 
					"609", 
					"604", 
					"608", 
					"603", 
					"607", 
					"618", 
					"600", 
					"249", 
					"1510", 
					"1511", 
					"1512", 
					"203", 
					"202", 
					"1542", 
					"1541", 
					"2800", 
					"2400", 
					"1253", 
					"1333", 
					"1332", 
					"1297", 
					"1298", 
					"2313", 
					"2314", 
					"779", 
					"956", 
					"606", 
					"711", 
					"712", 
					"2572", 
					"2573", 
					"1519", 
					"1518", 
					"303", 
					"1522", 
					"1521", 
					"1523", 
					"1532", 
					"1534", 
					"1606", 
					"717", 
					"2701", 
					"2700" },
				Values { 
					"AbortConfirmed", 
					"AbortRemoteOperation", 
					"ActivationHandlerAcf", 
					"ActivationHeader", 
					"AddressCommonPart", 
					"AddressDiscriminator", 
					"AGEForXactResolve", 
					"AppChannelMessage", 
					"AppChannelReply", 
					"AppChannelRequest", 
					"ArrayOfBytes", 
					"AsyncTransportDestinationsTableInfo", 
					"AsyncTransportStreamsTableInfo", 
					"AsyncTransportWorkersTableInfo", 
					"BackupEntry", 
					"BackupEntryCoordinator", 
					"BaseErrorMessage", 
					"BrickDownError", 
					"BroadcastMessage", 
					"CAttachDbFragRequest", 
					"CAutoXVarArray", 
					"CBitmapCollection", 
					"CBitmapReference", 
					"CBitSet", 
					"CBitSetNoPmo", 
					"CBitVector", 
					"CBlobHandleBaseTable", 
					"CBlobHandleInlined", 
					"CBndOutputs", 
					"CBuiltinPermissionsSTVFInfo", 
					"CBulkImp", 
					"CCacheDbFragRequest", 
					"CCATInfo", 
					"CCloneAccessManager", 
					"CCollationsSTVFInfo", 
					"CColumnInfo", 
					"CCompareBlob", 
					"CCompareClob", 
					"CCompareHashInfo", 
					"CCompareLob", 
					"CCompareObject", 
					"CCompareString", 
					"CCompareVarTimeInfo", 
					"CCompareWlob", 
					"CCompatLevel", 
					"CConstraintMaxLevel", 
					"CConstraintTag", 
					"CCreateDbFragReply", 
					"CCreateDbFragRequest", 
					"CCreateFileGroup", 
					"CCreateSnapshotReply", 
					"CCreateSnapshotRequest", 
					"CCrsRefBase", 
					"CDbAndSetOpts", 
					"CDBDDLBaseReply", 
					"CDBDDLBaseRequest", 
					"CDBDDLReply", 
					"CDBDDLRequest", 
					"CDbLogSpaceUsageInfo", 
					"CDBMirrorAutoPageRepairTVFInstantiate", 
					"CDBMirrorTVFInstantiate", 
					"CDBMPastActionsTVFInstantiate", 
					"CDBMWitnessTVFInstantiate", 
					"CDBPropTVFInstantiate", 
					"CDBRecoveryStateTVFInstantiate", 
					"CDBScriptLevelTVFInstantiate", 
					"CDiagAggregatedStats", 
					"CDMVBaseSTVFInfo", 
					"CDropDbFragRequest", 
					"CDropFileGroup", 
					"CDynObjNames", 
					"CEsCacheObj", 
					"CEsCacheObjUdtToBinConvert", 
					"CEsComp", 
					"CEsCompareP", 
					"CEsCompBase", 
					"CEsCompFull", 
					"CEsCompGroup", 
					"CEsCompValSeg", 
					"CEsExecContext", 
					"CESExecParamList", 
					"CESExecParamListCollection", 
					"CEsHashP", 
					"CExecCachedPlansSTVFInfo", 
					"CExecContext", 
					"CExecDumpLoadDevice", 
					"CExecDumpLoadFile", 
					"CExecDumpLoadRelocatedFile", 
					"CExMem", 
					"CFabricChannelTableInfo", 
					"CFabricConversationTableInfo", 
					"CFabricMessageTableInfo", 
					"CFFtDatabaseOptionsTVFInstantiate", 
					"CFFtTableOptionsTVFInstantiate", 
					"CfgTableInfo", 
					"CFileDecl", 
					"CFileGroupDecl", 
					"CFileOpRequest", 
					"CFilePropTVFInstantiate", 
					"CFW_MessageByteArray", 
					"CFW_MessageDWORD", 
					"CGlmTaskResult", 
					"CH04MessageReply", 
					"CH04MessageRequest", 
					"CHadrAutoPageRepairTVFInstantiate", 
					"ChannelForceCloseError", 
					"ChannelKey", 
					"ChannelMap", 
					"ChannelMapKey", 
					"ChannelOperationMessage", 
					"ChannelOperationMessageReply", 
					"ChannelUnitTestMessage", 
					"CHashPartitionGroupCompile", 
					"CHashString", 
					"CHashVarTimeInfo", 
					"CHashWorkfilePartitionGroupCompile", 
					"CHashWorktablePartitionGroupCompile", 
					"CheckAggCrossRowsetReply", 
					"CheckAggCrossRowsetRequest", 
					"CheckAggExtendedIndexReply", 
					"CheckAggExtendedIndexRequest", 
					"CheckAggRemotePhaseComplete", 
					"CheckAggRemotePhaseStart", 
					"CheckAggRemoteReplyHeader", 
					"CheckAggRemoteRequestHeader", 
					"CheckAggRemoteShutdownReply", 
					"CheckAggRemoteShutdownRequest", 
					"CheckAggRemoteThreadInitReply", 
					"CheckAggRemoteThreadInitRequest", 
					"CheckAggResultSetMessageReply", 
					"CheckAggResultSetMessageRequest", 
					"CheckCrossRowsetActualFact", 
					"CheckCrossRowsetFact", 
					"CheckCrossRowsetParentFact", 
					"CheckpointRequest", 
					"CheckResultSetBuffer", 
					"CIndexCommon", 
					"CIndexInfo", 
					"CInputBufferReply", 
					"CInputBufferRequest", 
					"CLinkedMap", 
					"CLinkedMapEntry", 
					"CLockCollection", 
					"CLogicalConnectionCloseReply", 
					"CLogicalConnectionCloseRequest", 
					"CLogonSessionKillReply", 
					"CLogonSessionKillRequest", 
					"CloneAccessMetadata", 
					"ClonePlacement", 
					"CloseChannelReply", 
					"CloseChannelRequest", 
					"CloudBackgroundTasksTableInfo", 
					"CloudPartitionMapTableInfo", 
					"CloudPartitionSloTableInfo", 
					"CloudPartitionStatsTableInfo", 
					"CloudPartitionWaitStatsTableInfo", 
					"CloudPhysicalSeedingStatsTableInfo", 
					"CMapValuesTableInfo", 
					"CMatrixAgentsTableInfo", 
					"CMatrixBricksTableInfo", 
					"CMatrixBroadcastNotification", 
					"CMatrixCacheExtension", 
					"CMatrixChannelMapsInfo", 
					"CMatrixChannelMessagesInfo", 
					"CMatrixChannelPipelinesInfo", 
					"CMatrixChannelsInfo", 
					"CMatrixChannelTopologiesInfo", 
					"CMatrixChannelTypesInfo", 
					"CMatrixCMAAgentEventAckMsg", 
					"CMatrixCMABrickAckMsg", 
					"CMatrixCMAChannelEventAckMsg", 
					"CMatrixCMAEnlistmentMsg", 
					"CMatrixCMAgentEventMsg", 
					"CMatrixCMAManagerEventAckMsg", 
					"CMatrixCMAShutdownMsg", 
					"CMatrixCMBaseMsg", 
					"CMatrixCMBitmap", 
					"CMatrixCMBitmapBuffer", 
					"CMatrixCMChannelEventMsg", 
					"CMatrixCMCommMsg", 
					"CMatrixCMEnlistmentReplyMsg", 
					"CMatrixCMManagerEventMsg", 
					"CMatrixCMMgrNotifyMsg", 
					"CMatrixCMPlacementMsg", 
					"CMatrixCMTimeEventMsg", 
					"CMatrixCMUpdateMsg", 
					"CMatrixConfigMemento", 
					"CMatrixConfigMementoEntry", 
					"CMatrixDBFilePropInfo", 
					"CMatrixDBSegmentStateInfo", 
					"CMatrixErrorMessage", 
					"CMatrixGDMAGWFGEdge", 
					"CMatrixGDMAGWFGEdgeDesc", 
					"CMatrixGDMAGWFGFragment", 
					"CMatrixGDMAXactLocalStabilityDescriptor", 
					"CMatrixGDMAXactLocalStateDescriptor", 
					"CMatrixGDMBaseMessage", 
					"CMatrixGDMDeadlockResolutionReq", 
					"CMatrixGDMXactListMessage", 
					"CMatrixGWFGFragmentReply", 
					"CMatrixManagersTableInfo", 
					"CMatrixNYAFeaturesTVFInfo", 
					"CMatrixOpId", 
					"CMatrixPartitionsInfo", 
					"CMatrixPlacementMemento", 
					"CMatrixRosterMemento", 
					"CMatrixRosterMementoEntry", 
					"CMatrixSampleReply", 
					"CMatrixSampleRequest", 
					"CMatrixSegmentStatsInfo", 
					"CMatrixSerializableBitmap", 
					"CMatrixTableInfo", 
					"CMatrixXactLocalStabilityReply", 
					"CMatrixXactLocalStateReply", 
					"CMbrBackupDatabaseAllocateContextReply", 
					"CMbrBackupDatabaseAllocateContextRequest", 
					"CMbrBackupDatabaseCheckPermissionsReply", 
					"CMbrBackupDatabaseCheckPermissionsRequest", 
					"CMbrBackupDatabaseCloseOperationReply", 
					"CMbrBackupDatabaseCloseOperationRequest", 
					"CMbrBackupDatabaseCommitTransactionReply", 
					"CMbrBackupDatabaseCommitTransactionRequest", 
					"CMbrBackupDatabaseCopyDataReply", 
					"CMbrBackupDatabaseCopyDataRequest", 
					"CMbrBackupDatabaseCopyLogReply", 
					"CMbrBackupDatabaseCopyLogRequest", 
					"CMbrBackupDatabaseEndSynchronizationReply", 
					"CMbrBackupDatabaseEndSynchronizationRequest", 
					"CMbrBackupDatabaseFinalizeOperationReply", 
					"CMbrBackupDatabaseFinalizeOperationRequest", 
					"CMbrBackupDatabaseGetProposedRestoreAGEReply", 
					"CMbrBackupDatabaseGetProposedRestoreAGERequest", 
					"CMbrBackupDatabaseInitiateOperationReply", 
					"CMbrBackupDatabaseInitiateOperationRequest", 
					"CMbrBackupDatabaseInvokePostOperationHookReply", 
					"CMbrBackupDatabaseInvokePostOperationHookRequest", 
					"CMbrBackupDatabaseInvokePreOperationHookReply", 
					"CMbrBackupDatabaseInvokePreOperationHookRequest", 
					"CMbrBackupDatabaseReadyForUnUseDbReply", 
					"CMbrBackupDatabaseReadyForUseDbReply", 
					"CMbrBackupDatabaseReleaseResourcesReply", 
					"CMbrBackupDatabaseReleaseResourcesRequest", 
					"CMbrBackupDatabaseReportResultReply", 
					"CMbrBackupDatabaseReportResultRequest", 
					"CMbrBackupDatabaseStartSynchronizationReply", 
					"CMbrBackupDatabaseStartSynchronizationRequest", 
					"CMbrBackupDatabaseUnUseDbCompleteRequest", 
					"CMbrBackupDatabaseUpdateHistoryReply", 
					"CMbrBackupDatabaseUpdateHistoryRequest", 
					"CMbrBackupDatabaseUseDbCompleteRequest", 
					"CMbrBackupLogAllocateContextReply", 
					"CMbrBackupLogAllocateContextRequest", 
					"CMbrBootstrapRequest", 
					"CMbrReply", 
					"CMbrRequest", 
					"CMbrRestoreArchiveQueryReply", 
					"CMbrRestoreArchiveQueryRequest", 
					"CMbrRestoreAttachDbCompleteRequest", 
					"CMbrRestoreAttachDbOnPrimaryCompleteReply", 
					"CMbrRestoreAttachDbOnPrimaryRequest", 
					"CMbrRestoreCatalogUpdateCommittedRequest", 
					"CMbrRestoreCatalogUpdateCompleteReply", 
					"CMbrRestoreCheckBindingsCompleteReply", 
					"CMbrRestoreCheckBindingsResultRequest", 
					"CMbrRestoreDatabaseDeleteCompleteRequest", 
					"CMbrRestoreDoPermissionCheckReply", 
					"CMbrRestorePermissionCheckCompleteRequest", 
					"CMbrRestoreReadyForAttachDbReply", 
					"CMbrRestoreReadyForFixupPostRollforwardOnNonPrimaryReply", 
					"CMbrRestoreReadyForFixupPostRollforwardReply", 
					"CMbrRestoreReadyForRecoveryReply", 
					"CMbrRestoreReadyForShutdownDbForOnlineReply", 
					"CMbrRestoreReadyForStartDbForFixupsReply", 
					"CMbrRestoreReadyForStartDbForOnlineOnNonPrimaryReply", 
					"CMbrRestoreReadyForStartDbForOnlineReply", 
					"CMbrRestoreReadyForStartRecoveryOnNonPrimaryReply", 
					"CMbrRestoreReadyToDeleteDatabaseReply", 
					"CMbrRestoreRecoverDatabaseRequest", 
					"CMbrRestoreReply", 
					"CMbrRestoreRequest", 
					"CMbrRestoreShutdownDbForOnlineRequest", 
					"CMbrRestoreStartDbForFixupsRequest", 
					"CMbrRestoreStartDbForOnlineOnNonPrimaryRequest", 
					"CMbrRestoreStartDbForOnlineOnPrimaryRequest", 
					"CMbrRestoreStartFixupPostRollforwardOnNonPrimaryRequest", 
					"CMbrRestoreStartFixupPostRollforwardOnPrimaryRequest", 
					"CMbrRestoreStartRecoveryOnNonPrimaryRequest", 
					"CMbrRestoreStartRecoveryOnPrimaryRequest", 
					"CMbrWorkerRequestingSyncReply", 
					"CMbrWorkerSyncCompletedRequest", 
					"CMciPipeInfo", 
					"CMdbBatchAndLevelContextMessage", 
					"CMdbSessionContextMessage", 
					"CMdbStmtQueryContextMessage", 
					"CMDFinishScan", 
					"CMdmReply", 
					"CMdmRequest", 
					"CMDScanReply", 
					"CMDScanRequest", 
					"CMDStartScan", 
					"CMemoryGrantEstimate", 
					"CModifyFileGroup", 
					"CMyMessage", 
					"CNonSargPred", 
					"CNtUserOrGroupSTVFInfo", 
					"CObjectColumnsTableInfo", 
					"CObjectsTableInfo", 
					"CObjName", 
					"COledbRange", 
					"COledbRangeStream", 
					"COledbRangeStreamBulk", 
					"COLUMNDATANODE", 
					"ColumnStoreRowGroupsTableInfo", 
					"CommAgeData", 
					"CommAgeReq", 
					"CommAgeResp", 
					"CommAgeResponse", 
					"CompositeScopeTableInfo", 
					"ConversationDescriptor", 
					"ConvTaskParticipantBinding", 
					"COpenTapesSTVFInfo", 
					"COutputBufferReply", 
					"COutputBufferRequest", 
					"CPackagesTableInfo", 
					"CParamBase", 
					"CParamList", 
					"CParticipantReport", 
					"CPartitionCountTVFInstantiate", 
					"CPerIndexMetaXte", 
					"CPersistedSkuFeaturesTVFInstantiate", 
					"CPlanPersistPlanInMemoryTVFInfo", 
					"CPlanPersistQueryInMemoryTVFInfo", 
					"CPlanPersistQueryTextInMemoryTVFInfo", 
					"CPlanPersistRuntimeStatsInMemoryTVFInfo", 
					"CPrepareDbFragRequest", 
					"CProfileElement", 
					"CProfileInfo", 
					"CQODouble", 
					"CQte", 
					"CQtePrjEl", 
					"CQtePrjElVector", 
					"CQtePrjList", 
					"CQteScalar", 
					"CQuery", 
					"CQueryStoreContextSettingsTVFInfo", 
					"CQueryStoreGlobalHealthTVFInfo", 
					"CQueryStoreOptionsTVFInfo", 
					"CQueryStorePlanTVFInfo", 
					"CQueryStoreQueryTextTVFInfo", 
					"CQueryStoreQueryTVFInfo", 
					"CQueryStoreRuntimeStatsIntervalTVFInfo", 
					"CQueryStoreRuntimeStatsTVFInfo", 
					"CQueryStoreStatementHandleTVFInfo", 
					"CRangeInterval", 
					"CRefCount", 
					"CReloadList", 
					"CRemotableQueryCtxt", 
					"CRemoteRequestFragmentTableInfo", 
					"CRemoteThreadFinish", 
					"CRemoteThreadStart", 
					"CReplSTVFSchemasInfo", 
					"CReplSTVFTranHashInfo", 
					"CReplSTVFTranInfoInfo", 
					"CRiCompInfo", 
					"CRowcountTracker", 
					"CRowcountTrackerList", 
					"CRowsetALUInstantiate", 
					"CRowsetCfgInstantiate", 
					"CRowsetCharsetInstantiate", 
					"CRowsetIndexPropInstantiate", 
					"CRowsetLanguageInstantiate", 
					"CRowsetRefInstantiate", 
					"CRowsetRSCPropInstantiate", 
					"CRowsetTraceTableSTVFInfo", 
					"CRpc_DBBINDING", 
					"CRpc_SQL_DBBIND_EXT", 
					"CRpcAccessor", 
					"CRpcCommand", 
					"CRpcCommand_DeleteRow", 
					"CRpcCommand_FetchData", 
					"CRpcCommand_GetData", 
					"CRpcCommand_GotoMarker", 
					"CRpcCommand_InsertRow", 
					"CRpcCommand_LobAction", 
					"CRpcCommand_PrepareToDelete", 
					"CRpcCommand_SetData", 
					"CRpcCommand_SetMarker", 
					"CRpcCommand_SetRange", 
					"CRpcCommand_WakeUp", 
					"CRpcCommandWithData", 
					"CRpcIoStats", 
					"CRpcMDRowsetOwner", 
					"CRpcReply", 
					"CRpcRequest", 
					"CRpcRequestHeader", 
					"CRpcRow", 
					"CRpcSTATSTG", 
					"CRpcTableInfo", 
					"CRuleStatsTableSTVFInfo", 
					"CRXContextMessage", 
					"CSecurableClassSTVFInfo", 
					"CSerializedParticipant", 
					"CSessCmdPayload", 
					"CSessCmdReply", 
					"CSessCmdReplyData", 
					"CSessCmdRequest", 
					"CSessCmdRequestData", 
					"CSessFootprintResetReply", 
					"CSessFootprintResetRequest", 
					"CSessionContext", 
					"CSessionEventActionsTableInfo", 
					"CSessionEventsTableInfo", 
					"CSessionObjectColumnsTableInfo", 
					"CSessionsTableInfo", 
					"CSessionTargetsTableInfo", 
					"CSessionTraceFlags", 
					"CSessLogoutReply", 
					"CSessLogoutRequest", 
					"CSFWSTVFRulesInfo", 
					"CSingleLinkedPtrs", 
					"CSMSessionFootprintTableInfo", 
					"CSMWorkItemTableInfo", 
					"CSpoolSet", 
					"CSQLCollation", 
					"CSsGuidBase", 
					"CSsMoney8Base", 
					"CSsNumericBase", 
					"CSsUdtBase", 
					"CStreamingInternalTVFInfo", 
					"CStreamingSysDmSessionTransactionTVFInfo", 
					"CStreamingSysTVFInfo", 
					"CStvfRpcReplyWithXact", 
					"CStvfRpcRequestWithXact", 
					"CStvfStreamRow", 
					"CStvfStreamRpcCommand", 
					"CStvfStreamRpcCommandGetLobBytes", 
					"CStvfStreamRpcCommandGetRows", 
					"CStvfStreamRpcCommandOpen", 
					"CStvfStreamRpcCommandReply", 
					"CStvfStreamRpcCommandReplyGetBytes", 
					"CStvfStreamRpcCommandReplyOpen", 
					"CStvfStreamSessionHandle", 
					"CSysComTVFInstantiate", 
					"CSysLockInformationSTVFInfo", 
					"CSysPartFragTVFInstantiate", 
					"CSysPlanGuidesTVFInstantiate", 
					"CSysTempStatsTVFInstantiate", 
					"CSysTraceCategoriesSTVFInfo", 
					"CSysTraceColumnsSTVFInfo", 
					"CSysTraceEventBindingsSTVFInfo", 
					"CSysTraceEventsSTVFInfo", 
					"CSysTraceSubclassValuesSTVFInfo", 
					"CTableAlias", 
					"CTableAliasClass", 
					"CTDynArray", 
					"CTDynArrayBase", 
					"CTimeStampBase", 
					"CTranslatePermissionsSTVFInfo", 
					"CTStack", 
					"CTVFInfo", 
					"CTVFInfoCatalog", 
					"CTVFInfoSequences", 
					"CTVFInfoSysMessagesTVF", 
					"CTypeInfo", 
					"CUserContext", 
					"CValComp", 
					"CValCompileTimeClrUdxInfo", 
					"CValConstant", 
					"CValEsChecksumInfo", 
					"CValEsCompLobReaderInfo", 
					"CValEsConstXVar", 
					"CValidateFileReply", 
					"CValOdsRow", 
					"CValOdsRowRef", 
					"CValRef", 
					"CValRefCachedExpr", 
					"CValRefCalculated", 
					"CValRefCatLookup", 
					"CValRefComp", 
					"CValRefCompTypeInfo", 
					"CValRefCoordinated", 
					"CValRefExchange", 
					"CValRefExecTable", 
					"CValRefGetRange", 
					"CValRefGetRangeThroughConvert", 
					"CValRefGetRangeWithMismatchedTypes", 
					"CValRefGrouping", 
					"CValRefIndexColumn", 
					"CValRefInRow", 
					"CValRefJoin", 
					"CValRefOrdinal", 
					"CValRefOrdinalEx", 
					"CValRefParallel", 
					"CValRefParameter", 
					"CValRefPartitionId", 
					"CValRefPrefetch", 
					"CValRefRmt", 
					"CValRefRow", 
					"CValRefRTConst", 
					"CValRefSetRange", 
					"CValRefSpecial", 
					"CValRefSS", 
					"CValRefUnionNth", 
					"CValRefWork", 
					"CValSSInRowCompile", 
					"CVRTable", 
					"CVRTableComp", 
					"CXActivateDesc", 
					"CXCacheMgr", 
					"CXCodeInst", 
					"CXCodeInstMultiData", 
					"CXE_Action", 
					"CXE_Event", 
					"CXE_Field", 
					"CXE_Obj", 
					"CXE_ObjList", 
					"CXE_Option", 
					"CXE_Predicate", 
					"CXE_Target", 
					"CXPacketDesc", 
					"CXPortDesc", 
					"CXRoutingDesc", 
					"CXte", 
					"CXteAssert", 
					"CXteBitmap", 
					"CXteCollapse", 
					"CXteConcat", 
					"CXteConstScan", 
					"CXteExchange", 
					"CXteFilter", 
					"CXteHash", 
					"CXteIndex", 
					"CXteIndexSort", 
					"CXteMergeInterval", 
					"CXteMergeJoin", 
					"CXteMergeStat", 
					"CXteNLJoin", 
					"CXtePrint", 
					"CXteProject", 
					"CXteRange", 
					"CXteRangePrefetch", 
					"CXteRmtScan", 
					"CXteRowCountSpool", 
					"CXteRowset", 
					"CXteScalarInsert", 
					"CXteSegment", 
					"CXteSeqProject", 
					"CXteSequence", 
					"CXteSimpleUpdate", 
					"CXteSort", 
					"CXteSplit", 
					"CXteSpool", 
					"CXteStatAgg", 
					"CXteStreamAggregate", 
					"CXteTableScan", 
					"CXteTop", 
					"CXteTopSort", 
					"CXteTVFStream", 
					"CXteUpdate", 
					"CXteVersionScan", 
					"CXteWindow", 
					"CXValDesc", 
					"CXVarArrayTransport", 
					"CXVariant", 
					"CXVariantBase", 
					"CXVarValue", 
					"DataEndOfStreamMsg", 
					"DataPortCreditGrant", 
					"DataPortKickMsg", 
					"DataPortTestConfig", 
					"DATE4BASE", 
					"DbccCombinedId", 
					"DbccOptions", 
					"DbccStateObject", 
					"DbFileSpaceUsageTableInfo", 
					"DBFragmentPlacement", 
					"DBOpReply", 
					"DBOpRequest", 
					"DBPROPSET_SERIALIZABLE", 
					"DBShutdownRequest", 
					"DBStartupRequest", 
					"DBStateOptionChange", 
					"DDLMessage", 
					"DDLMessageReply", 
					"DRgCId", 
					"DRgULONG", 
					"DWORDPayload", 
					"ExecutionErrorMessage", 
					"FactMetadataIdentifier", 
					"FederatedXactId", 
					"FlushPayload", 
					"ForceCloseOrder", 
					"ForceCloseOrderReply", 
					"ForceCloseRequest", 
					"ForceCloseRequestReply", 
					"FragmentPlacement", 
					"FragmentShutdownCompleted", 
					"FragmentShutdownMessage", 
					"FreeProcCachePayload", 
					"FreeSystemCachePayload", 
					"GenericMessage", 
					"GlmDatabaseParams", 
					"GlmRequestMessage", 
					"GlmRequestPayload", 
					"GlmResponseMessage", 
					"GlmResponsePayload", 
					"GlmTableParams", 
					"GlmUndoMessage", 
					"GlmUndoPayload", 
					"GlobalDbId", 
					"GUID", 
					"HkTvfIndexStats", 
					"HkTvfIndexStatsIterator", 
					"HkTvfRecentRowTransactions", 
					"HkTvfSystemStats", 
					"HkTvfSystemStatsIterator", 
					"HkTvfTableStats", 
					"HkTvfTableStatsIterator", 
					"HkTvfTransactionEvents", 
					"HkTvfTransactions", 
					"HkTvfTxEventIterator", 
					"HkTvfTxIterator", 
					"HkTvfTxRecentRowIterator", 
					"IAcfResult", 
					"IActivationContextFragment", 
					"IMPORT_COLINFO", 
					"IMPORT_KEYINFO", 
					"INDEXDATANODE", 
					"IOledbRange", 
					"IoStats", 
					"IQueryObj", 
					"IRemoteableBlobHandle", 
					"KEYDATANODE", 
					"ListOfAGESForXactResolve", 
					"LockClass", 
					"LockStateInfo", 
					"LSN", 
					"MapKeyList", 
					"MatrixError", 
					"MatrixErrorCollection", 
					"MatrixRpcReplyBase", 
					"MatrixRpcRequestBase", 
					"MatrixXactContext", 
					"MatrixXactId", 
					"MatrixXactReport", 
					"MDAttrMatrixBrick", 
					"MDName", 
					"MDObjectVersion", 
					"MDRowsetOwner", 
					"MemberInfo", 
					"Message", 
					"MessageHeader", 
					"MetaDataBlob", 
					"MONY4BASE", 
					"MtmRpcRequest", 
					"NestInfo", 
					"OriginatorContext", 
					"ParamID", 
					"ParticipantId", 
					"PartitionPlacement", 
					"PbhAndLen", 
					"PendingBindUnbindUSM", 
					"PingMsg", 
					"PipelineDisconnectError", 
					"PipelineKey", 
					"PipelineSuspect", 
					"PongMsg", 
					"ProbeRemoteThread", 
					"ProbeRemoteThreadReply", 
					"ProfileAggregationMessage", 
					"ProfileIOStatsInfo", 
					"PtrAndLen", 
					"QueryContextMessage", 
					"QueryDriverKey", 
					"QueryDriversTableInfo", 
					"QueryDriverTasksTableInfo", 
					"QueryDriverTopologiesTableInfo", 
					"QueryHintsForTest", 
					"QueryPlanCacheKey", 
					"QueryPlanInfoForLinearization", 
					"QueryRXSync", 
					"QueryTaskResult", 
					"QueryTopology", 
					"QueryTopologyMap", 
					"QueryXactReportMessage", 
					"RecordDecodeTableInfo", 
					"RemapFileEntry", 
					"RemoteOpCtxtMessageData", 
					"RemoteOperationNoContext", 
					"RemoteOpReplyBase", 
					"RemoteOpReplyBaseNonTransactional", 
					"RemoteOpRequestBase", 
					"RemoteOpRequestBaseNonTransactional", 
					"RemoteThreadBaseReply", 
					"RemoteThreadBaseRequest", 
					"RemoteThreadFinished", 
					"RemoteThreadFinishedTransactional", 
					"RemoteThreadKey", 
					"ReplDecodeMessageInfo", 
					"RestoreVerifyOnlyInfo", 
					"RoutingTable", 
					"RowsetFactData", 
					"RowsetFactDataList", 
					"RowsetUsageDescriptor", 
					"RPCMessage", 
					"SampleACF", 
					"SampleMessage", 
					"SampleMessageReply", 
					"ScopeFragmentTableInfo", 
					"ScriptDeploymentRequestsTableInfo", 
					"ScriptDeploymentWorkersTableInfo", 
					"SecurityCacheInvalidationPayload", 
					"SEExecutionStatistics", 
					"SERowsetId", 
					"SLinkedBitSet", 
					"SMatrixCMBrickEvent", 
					"SMatrixCMEventInfo", 
					"SMatrixCMManagerEvent", 
					"SMatrixConfigMgrMetadata", 
					"SMatrixEnlistmentHeader", 
					"SortColDesc", 
					"SOS_CacheEntryMessage", 
					"SOS_CacheMemBufferMessage", 
					"SOS_CacheReplyMessage", 
					"SOS_CacheRequestMessage", 
					"SOS_CacheTokenMessage", 
					"SOS_CacheUserExtensionBase", 
					"SOS_CacheUserExtensionDefault", 
					"SQLDATEBASE", 
					"SSessionKey", 
					"StackDumpPayload", 
					"StartRemoteThread", 
					"StartRemoteThreadTransactional", 
					"StartThread", 
					"StringMsg", 
					"STVFCurrentXactInfo", 
					"SymbolicNameInfo", 
					"TableInfoBase", 
					"TaskResult", 
					"TaskResultMessage", 
					"TaskSessAllocCounters", 
					"TasksTableInfo", 
					"TCMAgeCloseMessage", 
					"TCMAgentXactOutcomesRequest", 
					"TCMBrickAgeVector", 
					"TCMBrickCleanupData", 
					"TCMBrickStatus", 
					"TCMBrickStatusMessage", 
					"TCMCommitOrders", 
					"TCMManagerXactOutcomesResponse", 
					"TCMMessageHeader", 
					"ThreadFinished", 
					"TopologyMap", 
					"TopologyMapEntry", 
					"TopologyMapEntryArray", 
					"TranRPCReply", 
					"TranRPCRequest", 
					"TransientStateChangeReply", 
					"TransientStateChangeRequest", 
					"TransientStateChangeRequestPayload", 
					"TSimpleTableInfoEngineHost", 
					"TTableInfoBase", 
					"TTraceMetaTVFInfo", 
					"TTraceMetaTVFInfoBase", 
					"TVFActiveTransInfo", 
					"TVFDatabaseTransInfo", 
					"UcsTaskManagersTableInfo", 
					"UcsTaskManagerWorkersTableInfo", 
					"UMatrixEventInfo", 
					"UpdateRowsAggMessage", 
					"UpdateSequenceMarkerInfo", 
					"UtChannelMessage", 
					"UtOkReply", 
					"WorkerMetadataForArchiveQuery", 
					"WorkerMetadataInfo", 
					"WorkspaceDescriptor", 
					"WorkspaceFragmentId", 
					"WorkspaceIdRoot", 
					"WorkspaceTaskDescriptor", 
					"WorkspaceTaskId", 
					"WorkspaceTopology", 
					"XactAcf", 
					"XactAcfResult", 
					"XactReportMsg", 
					"XCWUnitTestMessage", 
					"XEventDDLReply", 
					"XEventDDLRequest" }
			] uint32 message_type;
};
		
[dynamic: ToInstance, Description("Fired before matrix restore redo begins when target restore AGE is being determined"): Amended,
    Guid("{20506A8E-06DC-4505-B737-39F91DFC2CFC}"), locale("MS\\0x409"),
    DisplayName("mbr_redo_target_age"): Amended]
class XeSqlPkg_mbr_redo_target_age: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_redo_target_age: XeSqlPkg_mbr_redo_target_age
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 backup_worker_id;
	[WmiDataId(6), read] uint64 target_age;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Leading Meta Data read of Backup Config Type"): Amended,
    Guid("{1986CB99-60C6-4325-9E4C-78423C5FBA87}"), locale("MS\\0x409"),
    DisplayName("mbr_lmd_read_backup_config_type"): Amended]
class XeSqlPkg_mbr_lmd_read_backup_config_type: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_lmd_read_backup_config_type: XeSqlPkg_mbr_lmd_read_backup_config_type
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read] uint32 field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Leading Meta Data read of Backup Group Count"): Amended,
    Guid("{581FCDDA-C1FC-45bf-8694-DBCBFC7C8ECA}"), locale("MS\\0x409"),
    DisplayName("mbr_lmd_read_backup_group_count"): Amended]
class XeSqlPkg_mbr_lmd_read_backup_group_count: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_lmd_read_backup_group_count: XeSqlPkg_mbr_lmd_read_backup_group_count
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read] uint32 field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Leading Meta Data read of Group BackupSet Guid"): Amended,
    Guid("{9487F70F-306F-43fa-9338-56665C9441C7}"), locale("MS\\0x409"),
    DisplayName("mbr_lmd_read_group_backupset_guid"): Amended]
class XeSqlPkg_mbr_lmd_read_group_backupset_guid: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_lmd_read_group_backupset_guid: XeSqlPkg_mbr_lmd_read_group_backupset_guid
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read, Extension("Guid")] guid field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Leading Meta Data read of Primary File Group Flags"): Amended,
    Guid("{010B5CD7-0A18-4043-BF88-3FEDF03837D8}"), locale("MS\\0x409"),
    DisplayName("mbr_lmd_read_primary_file_group_flags"): Amended]
class XeSqlPkg_mbr_lmd_read_primary_file_group_flags: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_lmd_read_primary_file_group_flags: XeSqlPkg_mbr_lmd_read_primary_file_group_flags
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read] uint32 field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Matrix Backup/Restore Trailing Meta Data read of Common Restore AGE"): Amended,
    Guid("{DB95320C-39D5-4986-A119-CFF8B1A04B55}"), locale("MS\\0x409"),
    DisplayName("mbr_tmd_read_common_restore_age"): Amended]
class XeSqlPkg_mbr_tmd_read_common_restore_age: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_tmd_read_common_restore_age: XeSqlPkg_mbr_tmd_read_common_restore_age
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 field_offset;
	[WmiDataId(6), read] uint32 field_size;
	[WmiDataId(7), read] uint64 field_value;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string field_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string archive_file_name;
};
		
[dynamic: ToInstance, Description("Occurs when an in-doubt transaction is resolved during matrix restore recovery."): Amended,
    Guid("{C601EE9A-D417-490f-9EBE-507D37528D0D}"), locale("MS\\0x409"),
    DisplayName("mbr_outcome_resolution"): Amended]
class XeSqlPkg_mbr_outcome_resolution: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_outcome_resolution: XeSqlPkg_mbr_outcome_resolution
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 federated_xact_id;
	[WmiDataId(6), read] uint32 federated_xact_node_id;
	[WmiDataId(7), read] sint32 federated_xact_node_local_id;
	[WmiDataId(8), read] sint8  is_committed;
	[WmiDataId(9), read] sint64 age_value;
};
		
[dynamic: ToInstance, Description("Occurs when matrix restore recovery has completed. It may not occur if there are no in-doubt transactions with commit outcomes to be processed during matrix restore recovery."): Amended,
    Guid("{339D0774-F237-4331-847C-772366B785B2}"), locale("MS\\0x409"),
    DisplayName("mbr_resolution_counts"): Amended]
class XeSqlPkg_mbr_resolution_counts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class mbr_resolution_counts: XeSqlPkg_mbr_resolution_counts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 resolved_commit_count;
	[WmiDataId(6), read] uint32 resolved_rollback_count;
};
		
[dynamic: ToInstance, Description("Occurs when a backup restore operation recorded the startLSN"): Amended,
    Guid("{C47F5A38-E94D-496C-9029-A696740DE2E6}"), locale("MS\\0x409"),
    DisplayName("backup_restore_startlsn_recorded"): Amended]
class XeSqlPkg_backup_restore_startlsn_recorded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_startlsn_recorded: XeSqlPkg_backup_restore_startlsn_recorded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string startlsn;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string serepllsn;
};
		
[dynamic: ToInstance, Description("Occurs just before the file stream backup starts."): Amended,
    Guid("{E8B4A4BF-CAF1-4BCC-9493-9A0208B886CD}"), locale("MS\\0x409"),
    DisplayName("backup_restore_before_filestream"): Amended]
class XeSqlPkg_backup_restore_before_filestream: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class backup_restore_before_filestream: XeSqlPkg_backup_restore_before_filestream
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata create local temporary object"): Amended,
    Guid("{D671B7C7-EB71-4546-8E87-A5C524AF8DC7}"), locale("MS\\0x409"),
    DisplayName("metadata_create_local_temp_object"): Amended]
class XeSqlPkg_metadata_create_local_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_create_local_temp_object: XeSqlPkg_metadata_create_local_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata delete local temporary object"): Amended,
    Guid("{74BD8C4B-CFE4-47B3-8784-2F150FEC41BA}"), locale("MS\\0x409"),
    DisplayName("metadata_delete_local_temp_object"): Amended]
class XeSqlPkg_metadata_delete_local_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_delete_local_temp_object: XeSqlPkg_metadata_delete_local_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata create global temporary object"): Amended,
    Guid("{72B1A544-51A1-49D1-B96C-9C31427658BD}"), locale("MS\\0x409"),
    DisplayName("metadata_create_global_temp_object"): Amended]
class XeSqlPkg_metadata_create_global_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_create_global_temp_object: XeSqlPkg_metadata_create_global_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Metadata delete global temporary object"): Amended,
    Guid("{C71F9950-8D72-40E9-8AA0-EF1313019A07}"), locale("MS\\0x409"),
    DisplayName("metadata_delete_global_temp_object"): Amended]
class XeSqlPkg_metadata_delete_global_temp_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_delete_global_temp_object: XeSqlPkg_metadata_delete_global_temp_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] uint32 session_id;
	[WmiDataId(7), read] uint32 object_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Query Driver received the activation message"): Amended,
    Guid("{5a623c10-41c8-40d0-a23c-29e3f2046e07}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_activation"): Amended]
class XeSqlPkg_query_driver_received_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_activation: XeSqlPkg_query_driver_received_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver received the activation message but not fully populated yet"): Amended,
    Guid("{052aa1af-139c-4560-ab8c-bf1858d7c5d0}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_activation_not_fully_populated"): Amended]
class XeSqlPkg_query_driver_received_activation_not_fully_populated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_activation_not_fully_populated: XeSqlPkg_query_driver_received_activation_not_fully_populated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query Driver sending the activation message"): Amended,
    Guid("{8e393031-784b-43cd-b6ce-568e82674333}"), locale("MS\\0x409"),
    DisplayName("query_driver_sending_activation"): Amended]
class XeSqlPkg_query_driver_sending_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sending_activation: XeSqlPkg_query_driver_sending_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the activation message"): Amended,
    Guid("{40a4607b-0df1-46c7-a28f-d7917d8fd2b2}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_activation"): Amended]
class XeSqlPkg_query_driver_sent_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_activation: XeSqlPkg_query_driver_sent_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the statistics profile message"): Amended,
    Guid("{446fd1ce-a8fb-4a68-bd9e-080ec7b6c65a}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_statistics_profile"): Amended]
class XeSqlPkg_query_driver_sent_statistics_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_statistics_profile: XeSqlPkg_query_driver_sent_statistics_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver received the statistics profile message"): Amended,
    Guid("{d55b46e5-bd7b-4da2-9ad2-de413a9cf48c}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_statistics_profile"): Amended]
class XeSqlPkg_query_driver_received_statistics_profile: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_statistics_profile: XeSqlPkg_query_driver_received_statistics_profile
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query Driver sent the rows affected message"): Amended,
    Guid("{e886d9be-faec-4f58-a042-2e585c586ec9}"), locale("MS\\0x409"),
    DisplayName("query_driver_sent_rows_affected"): Amended]
class XeSqlPkg_query_driver_sent_rows_affected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_sent_rows_affected: XeSqlPkg_query_driver_sent_rows_affected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read] uint64 rows_affected;
};
		
[dynamic: ToInstance, Description("Query Driver received the rows affected message"): Amended,
    Guid("{1aeaa700-87fd-45df-bb46-94adab76d8c0}"), locale("MS\\0x409"),
    DisplayName("query_driver_received_rows_affected"): Amended]
class XeSqlPkg_query_driver_received_rows_affected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_received_rows_affected: XeSqlPkg_query_driver_received_rows_affected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] uint16 thread_id;
	[WmiDataId(7), read] uint32 brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read] uint64 rows_affected;
};
		
[dynamic: ToInstance, Description("Query compilation is initialized"): Amended,
    Guid("{bd42246d-8eb2-49cc-b9ae-c81df829dd26}"), locale("MS\\0x409"),
    DisplayName("query_compile_initialized"): Amended]
class XeSqlPkg_query_compile_initialized: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compile_initialized: XeSqlPkg_query_compile_initialized
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query tree is compiled"): Amended,
    Guid("{6989067e-3574-4353-8f8d-ee45984e1b5b}"), locale("MS\\0x409"),
    DisplayName("query_compiled"): Amended]
class XeSqlPkg_query_compiled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compiled: XeSqlPkg_query_compiled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
	[WmiDataId(6), read] sint32 parent_id;
	[WmiDataId(7), read, 
				XEMapId(53),
				ValueMap { 
					"53", 
					"2", 
					"0", 
					"65", 
					"1", 
					"57", 
					"58", 
					"56", 
					"64", 
					"63", 
					"52", 
					"62", 
					"61", 
					"60", 
					"59", 
					"55", 
					"54", 
					"10", 
					"46", 
					"39", 
					"47", 
					"19", 
					"5", 
					"17", 
					"34", 
					"23", 
					"18", 
					"9", 
					"4", 
					"43", 
					"45", 
					"31", 
					"48", 
					"6", 
					"50", 
					"11", 
					"44", 
					"29", 
					"8", 
					"37", 
					"27", 
					"26", 
					"25", 
					"28", 
					"24", 
					"30", 
					"33", 
					"40", 
					"21", 
					"20", 
					"32", 
					"3", 
					"16", 
					"15", 
					"49", 
					"13", 
					"7", 
					"12", 
					"38", 
					"42", 
					"41", 
					"14", 
					"22", 
					"51", 
					"35", 
					"36" },
				Values { 
					"ColList", 
					"Executable", 
					"Invalid", 
					"Max", 
					"Min", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"RowEl", 
					"RowList", 
					"Scalar", 
					"ScalarEl", 
					"ScalarList", 
					"SetEl", 
					"SetList", 
					"SortEl", 
					"SortList", 
					"XAssert", 
					"XBatchSort", 
					"XBitmap", 
					"XBlockScrollLock", 
					"XCollapse", 
					"XConcat", 
					"XConstScan", 
					"XDebug", 
					"XDelay", 
					"XExchange", 
					"XFilter", 
					"XHashMatch", 
					"XIndex", 
					"XIndexSort", 
					"XLogRowScan", 
					"XMergeInterval", 
					"XMergeJoin", 
					"XMergeStat", 
					"XNLJoin", 
					"XOnlineIndex", 
					"XParameterTableScan", 
					"XProject", 
					"XRangePrefetch", 
					"XRmtFetch", 
					"XRmtModify", 
					"XRmtQuery", 
					"XRmtRange", 
					"XRmtScan", 
					"XRowCountSpool", 
					"XScalarInsert", 
					"XSegment", 
					"XSeqProject", 
					"XSequence", 
					"XSimpleUpdate", 
					"XSort", 
					"XSplit", 
					"XSpool", 
					"XStatAgg", 
					"XStreamAggregate", 
					"XTableScan", 
					"XTop", 
					"XTopNSort", 
					"XTVF", 
					"XUDX", 
					"XUpdate", 
					"XVersionScan", 
					"XWindow", 
					"XXchngFilter", 
					"XXchngSort" }
			] sint32 qte_type;
	[WmiDataId(8), read, 
				XEMapId(51),
				ValueMap { 
					"24", 
					"15", 
					"3", 
					"82", 
					"75", 
					"65", 
					"26", 
					"28", 
					"1", 
					"2", 
					"4", 
					"64", 
					"49", 
					"29", 
					"52", 
					"42", 
					"45", 
					"12", 
					"6", 
					"9", 
					"11", 
					"5", 
					"8", 
					"13", 
					"7", 
					"10", 
					"0", 
					"80", 
					"14", 
					"53", 
					"58", 
					"55", 
					"48", 
					"30", 
					"84", 
					"46", 
					"60", 
					"56", 
					"59", 
					"78", 
					"16", 
					"50", 
					"19", 
					"74", 
					"43", 
					"79", 
					"31", 
					"54", 
					"17", 
					"66", 
					"67", 
					"68", 
					"18", 
					"32", 
					"33", 
					"77", 
					"81", 
					"27", 
					"62", 
					"57", 
					"61", 
					"38", 
					"36", 
					"35", 
					"39", 
					"40", 
					"34", 
					"37", 
					"69", 
					"20", 
					"22", 
					"21", 
					"41", 
					"23", 
					"73", 
					"71", 
					"83", 
					"25", 
					"51", 
					"44", 
					"72", 
					"70", 
					"63", 
					"47", 
					"76" },
				Values { 
					"Aggregation", 
					"Assert", 
					"AsyncConcat", 
					"AsyncPop", 
					"BatchHashTableBuild", 
					"Bitmap", 
					"ClusteredIndexScan", 
					"ClusteredIndexSeek", 
					"Collapse", 
					"Concat", 
					"ConstScan", 
					"CrossJoin", 
					"Delete", 
					"DeletedScan", 
					"Distinct", 
					"DistinctSort", 
					"EagerSpool", 
					"ExchangePartitionBranch", 
					"ExchangePartitionRoot", 
					"ExchangePartitionSegment", 
					"ExchangeStartBranch", 
					"ExchangeStartRoot", 
					"ExchangeStartSegment", 
					"ExchangeStopBranch", 
					"ExchangeStopRoot", 
					"ExchangeStopSegment", 
					"Fetch", 
					"FetchQuery", 
					"Filter", 
					"FlowDistinct", 
					"FullOuterJoin", 
					"InnerJoin", 
					"Insert", 
					"InsertedScan", 
					"Invalid", 
					"LazySpool", 
					"LeftAntiSemiJoin", 
					"LeftOuterJoin", 
					"LeftSemiJoin", 
					"LockCC", 
					"LogRowScan", 
					"Merge", 
					"MergeInterval", 
					"MergeStat", 
					"NonDistinctSort", 
					"OptCC", 
					"ParameterTableScan", 
					"PartAgg", 
					"Print", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"Project", 
					"RangeScan", 
					"RangeSeek", 
					"ReadOnly", 
					"RefreshQuery", 
					"RidLookup", 
					"RightAntiSemiJoin", 
					"RightOuterJoin", 
					"RightSemiJoin", 
					"RmtDelete", 
					"RmtInsert", 
					"RmtQuery", 
					"RmtRangeScan", 
					"RmtRangeSeek", 
					"RmtScan", 
					"RmtUpdate", 
					"Scalar", 
					"Segment", 
					"SeqProject", 
					"Sequence", 
					"SimpleUpdate", 
					"Split", 
					"StatAgg", 
					"Switch", 
					"SyncPop", 
					"TableScan", 
					"Top", 
					"TopNSort", 
					"TVF", 
					"Udx", 
					"Union", 
					"Update", 
					"Window" }
			] sint32 logical_operator;
	[WmiDataId(9), read, 
				XEMapId(52),
				ValueMap { 
					"6", 
					"66", 
					"57", 
					"53", 
					"23", 
					"25", 
					"52", 
					"54", 
					"51", 
					"1", 
					"2", 
					"3", 
					"73", 
					"72", 
					"74", 
					"26", 
					"69", 
					"4", 
					"0", 
					"5", 
					"71", 
					"7", 
					"9", 
					"8", 
					"50", 
					"49", 
					"43", 
					"48", 
					"27", 
					"75", 
					"68", 
					"28", 
					"10", 
					"15", 
					"11", 
					"12", 
					"65", 
					"29", 
					"13", 
					"58", 
					"59", 
					"60", 
					"14", 
					"30", 
					"31", 
					"24", 
					"39", 
					"32", 
					"37", 
					"36", 
					"33", 
					"34", 
					"35", 
					"38", 
					"16", 
					"61", 
					"17", 
					"19", 
					"18", 
					"40", 
					"70", 
					"41", 
					"20", 
					"42", 
					"21", 
					"63", 
					"46", 
					"45", 
					"47", 
					"22", 
					"44", 
					"56", 
					"64", 
					"62", 
					"67", 
					"55" },
				Values { 
					"Assert", 
					"BatchHashTableBuild", 
					"Bitmap", 
					"ClusteredDelete", 
					"ClusteredIndexScan", 
					"ClusteredIndexSeek", 
					"ClusteredInsert", 
					"ClusteredMerge", 
					"ClusteredUpdate", 
					"Collapse", 
					"Concat", 
					"ConstScan", 
					"CrsFetch", 
					"CrsPopulate", 
					"CrsRefresh", 
					"DeletedScan", 
					"Dynamic", 
					"Exchange", 
					"Fetch", 
					"Filter", 
					"ForwardOnlyNoRefresh", 
					"HashMatch", 
					"HashMatchRoot", 
					"HashMatchTeam", 
					"IndexDelete", 
					"IndexInsert", 
					"IndexSpool", 
					"IndexUpdate", 
					"InsertedScan", 
					"Invalid", 
					"Keyset", 
					"Locate", 
					"LogRowScan", 
					"MergeInterval", 
					"MergeJoin", 
					"NLJoin", 
					"OnlineIndexInsert", 
					"ParameterTableScan", 
					"Print", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"Project", 
					"RangeScan", 
					"RangeSeek", 
					"RidLookup", 
					"RmtDelete", 
					"RmtFetch", 
					"RmtInsert", 
					"RmtQuery", 
					"RmtRangeScan", 
					"RmtRangeSeek", 
					"RmtScan", 
					"RmtUpdate", 
					"RowCountSpool", 
					"Scalar", 
					"Segment", 
					"SeqProject", 
					"Sequence", 
					"SimpleUpdate", 
					"Snapshot", 
					"Sort", 
					"Split", 
					"Spool", 
					"StreamAggregate", 
					"Switch", 
					"TableDelete", 
					"TableInsert", 
					"TableMerge", 
					"TableScan", 
					"TableUpdate", 
					"Top", 
					"TVF", 
					"Udx", 
					"Window", 
					"WorkfileScan" }
			] sint32 physical_operator;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string dynamic_attributes;
};
		
[dynamic: ToInstance, Description("Query compilation is prepared"): Amended,
    Guid("{06c94f7b-689f-4c5d-9724-e890b8a2931f}"), locale("MS\\0x409"),
    DisplayName("query_compile_prepared"): Amended]
class XeSqlPkg_query_compile_prepared: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_compile_prepared: XeSqlPkg_query_compile_prepared
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Degree of Parallelism (DOP) calculation begins"): Amended,
    Guid("{81d5eb0b-acbd-4b23-9abe-bc93d6e3d0f4}"), locale("MS\\0x409"),
    DisplayName("calculate_dop_begin"): Amended]
class XeSqlPkg_calculate_dop_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class calculate_dop_begin: XeSqlPkg_calculate_dop_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 configured_maxdop;
	[WmiDataId(6), read] uint32 max_concurrent_branches;
	[WmiDataId(7), read] uint32 parallel_segments;
	[WmiDataId(8), read] uint32 schedulers;
};
		
[dynamic: ToInstance, Description("Degree of Parallelism (DOP) calculation"): Amended,
    Guid("{27a60fec-418b-4cc9-8904-a8321b8533b8}"), locale("MS\\0x409"),
    DisplayName("calculate_dop"): Amended]
class XeSqlPkg_calculate_dop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class calculate_dop: XeSqlPkg_calculate_dop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(10),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"SetMaxDOP", 
					"SetTraceflag", 
					"CalculateBasedOnAvailableThreads", 
					"PostCalculate" }
			] uint32 stage;
	[WmiDataId(6), read] uint32 dop;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string stage_info;
};
		
[dynamic: ToInstance, Description("Runtime query iterator is cached"): Amended,
    Guid("{daed8c56-bc4d-48c5-9558-65c310e17b1a}"), locale("MS\\0x409"),
    DisplayName("query_scan_cache"): Amended]
class XeSqlPkg_query_scan_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_cache: XeSqlPkg_query_scan_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime query iterator is uncached.  This indicates that a previously cached version of the query runtime is being used.  This can be correlated with the query_scan_cache event"): Amended,
    Guid("{e1e95733-0422-4e25-a97f-f573ac6344de}"), locale("MS\\0x409"),
    DisplayName("query_scan_uncache"): Amended]
class XeSqlPkg_query_scan_uncache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_uncache: XeSqlPkg_query_scan_uncache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime remote query instance is cached"): Amended,
    Guid("{D08A78CF-DFD7-4724-A53E-5512FC2F9BC5}"), locale("MS\\0x409"),
    DisplayName("query_instance_cache_remote_insert"): Amended]
class XeSqlPkg_query_instance_cache_remote_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_instance_cache_remote_insert: XeSqlPkg_query_instance_cache_remote_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Runtime remote query instance is uncached.  This indicates that a previously cached version of the query instance runtime is being used.  This can be correlated with the query_instance_cache_remote_insert event"): Amended,
    Guid("{3D0D3AC9-DDC1-4719-8C1D-1BC05EB5D97F}"), locale("MS\\0x409"),
    DisplayName("query_instance_cache_remote_remove"): Amended]
class XeSqlPkg_query_instance_cache_remote_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_instance_cache_remote_remove: XeSqlPkg_query_instance_cache_remote_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query memory pre-grant"): Amended,
    Guid("{73ebeff7-1300-42d1-aa39-ce871b412785}"), locale("MS\\0x409"),
    DisplayName("query_memory_pre_grant"): Amended]
class XeSqlPkg_query_memory_pre_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_pre_grant: XeSqlPkg_query_memory_pre_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
	[WmiDataId(6), read] sint8  first_acquire;
	[WmiDataId(7), read] uint32 max_dop;
	[WmiDataId(8), read] sint64 required_memory_serial;
	[WmiDataId(9), read] sint64 exchange_memory;
	[WmiDataId(10), read] sint64 memory_max_useful_serial;
	[WmiDataId(11), read] sint64 desired_memory;
	[WmiDataId(12), read] sint64 max_memory;
	[WmiDataId(13), read] sint64 available_memory;
	[WmiDataId(14), read] sint64 timeout;
};
		
[dynamic: ToInstance, Description("Query memory post-grant"): Amended,
    Guid("{1cc0229e-c4ab-4d9a-8843-1d3a20fb784e}"), locale("MS\\0x409"),
    DisplayName("query_memory_post_grant"): Amended]
class XeSqlPkg_query_memory_post_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_post_grant: XeSqlPkg_query_memory_post_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
	[WmiDataId(6), read] sint8  is_first_acquire;
	[WmiDataId(7), read] uint32 final_dop;
	[WmiDataId(8), read] sint64 actual_memory_grant;
	[WmiDataId(9), read] sint64 extra_memory_grant;
	[WmiDataId(10), read] sint64 total_required_memory;
	[WmiDataId(11), read] sint64 exchange_required_memory;
	[WmiDataId(12), read] sint8  is_small_query;
};
		
[dynamic: ToInstance, Description("Query memory return grant"): Amended,
    Guid("{8a71f4d8-8ade-42ed-97c6-cf3690a33829}"), locale("MS\\0x409"),
    DisplayName("query_memory_return_grant"): Amended]
class XeSqlPkg_query_memory_return_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_return_grant: XeSqlPkg_query_memory_return_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
	[WmiDataId(6), read] sint64 actual_memory_grant;
	[WmiDataId(7), read] sint64 exchange_required_memory;
	[WmiDataId(8), read] sint64 max_query_memory_used;
	[WmiDataId(9), read] sint64 max_exchange_memory_used;
	[WmiDataId(10), read] sint64 max_misc_memory_used;
	[WmiDataId(11), read] sint32 max_misc_grants;
};
		
[dynamic: ToInstance, Description("Query memory request calculation for memory consuming iterators"): Amended,
    Guid("{dd1840e4-8adc-4443-aa8f-2ce6aa7757c0}"), locale("MS\\0x409"),
    DisplayName("iterator_memory_request_calculation"): Amended]
class XeSqlPkg_iterator_memory_request_calculation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iterator_memory_request_calculation: XeSqlPkg_iterator_memory_request_calculation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(53),
				ValueMap { 
					"53", 
					"2", 
					"0", 
					"65", 
					"1", 
					"57", 
					"58", 
					"56", 
					"64", 
					"63", 
					"52", 
					"62", 
					"61", 
					"60", 
					"59", 
					"55", 
					"54", 
					"10", 
					"46", 
					"39", 
					"47", 
					"19", 
					"5", 
					"17", 
					"34", 
					"23", 
					"18", 
					"9", 
					"4", 
					"43", 
					"45", 
					"31", 
					"48", 
					"6", 
					"50", 
					"11", 
					"44", 
					"29", 
					"8", 
					"37", 
					"27", 
					"26", 
					"25", 
					"28", 
					"24", 
					"30", 
					"33", 
					"40", 
					"21", 
					"20", 
					"32", 
					"3", 
					"16", 
					"15", 
					"49", 
					"13", 
					"7", 
					"12", 
					"38", 
					"42", 
					"41", 
					"14", 
					"22", 
					"51", 
					"35", 
					"36" },
				Values { 
					"ColList", 
					"Executable", 
					"Invalid", 
					"Max", 
					"Min", 
					"PrjEl", 
					"PrjElVector", 
					"PrjList", 
					"RowEl", 
					"RowList", 
					"Scalar", 
					"ScalarEl", 
					"ScalarList", 
					"SetEl", 
					"SetList", 
					"SortEl", 
					"SortList", 
					"XAssert", 
					"XBatchSort", 
					"XBitmap", 
					"XBlockScrollLock", 
					"XCollapse", 
					"XConcat", 
					"XConstScan", 
					"XDebug", 
					"XDelay", 
					"XExchange", 
					"XFilter", 
					"XHashMatch", 
					"XIndex", 
					"XIndexSort", 
					"XLogRowScan", 
					"XMergeInterval", 
					"XMergeJoin", 
					"XMergeStat", 
					"XNLJoin", 
					"XOnlineIndex", 
					"XParameterTableScan", 
					"XProject", 
					"XRangePrefetch", 
					"XRmtFetch", 
					"XRmtModify", 
					"XRmtQuery", 
					"XRmtRange", 
					"XRmtScan", 
					"XRowCountSpool", 
					"XScalarInsert", 
					"XSegment", 
					"XSeqProject", 
					"XSequence", 
					"XSimpleUpdate", 
					"XSort", 
					"XSplit", 
					"XSpool", 
					"XStatAgg", 
					"XStreamAggregate", 
					"XTableScan", 
					"XTop", 
					"XTopNSort", 
					"XTVF", 
					"XUDX", 
					"XUpdate", 
					"XVersionScan", 
					"XWindow", 
					"XXchngFilter", 
					"XXchngSort" }
			] sint32 iterator_type;
	[WmiDataId(6), read] sint64 input_required;
	[WmiDataId(7), read] sint64 input_additional;
	[WmiDataId(8), read] sint64 output_required;
	[WmiDataId(9), read] sint64 output_additional;
	[WmiDataId(10), read] sint64 bitmap_preferred;
};
		
[dynamic: ToInstance, Description("Query attempt to request memory grant"): Amended,
    Guid("{4d213497-0b04-4897-8976-16c5f20603f5}"), locale("MS\\0x409"),
    DisplayName("query_memory_grant_requested"): Amended]
class XeSqlPkg_query_memory_grant_requested: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_grant_requested: XeSqlPkg_query_memory_grant_requested
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 requested_memory;
	[WmiDataId(6), read] sint64 available_memory;
	[WmiDataId(7), read] sint64 needed_memory;
};
		
[dynamic: ToInstance, Description("Query reserve buffer pool memory"): Amended,
    Guid("{71af0bc6-d57e-4e72-9cb7-5accad62a972}"), locale("MS\\0x409"),
    DisplayName("query_memory_buffer_pool_reserve"): Amended]
class XeSqlPkg_query_memory_buffer_pool_reserve: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_memory_buffer_pool_reserve: XeSqlPkg_query_memory_buffer_pool_reserve
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 reserve;
	[WmiDataId(6), read] sint8  release;
	[WmiDataId(7), read] sint8  result;
};
		
[dynamic: ToInstance, Description("Runtime query is shutdown"): Amended,
    Guid("{e68520b3-f0fb-4733-9152-b46c437ba335}"), locale("MS\\0x409"),
    DisplayName("query_scan_shutdown"): Amended]
class XeSqlPkg_query_scan_shutdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_shutdown: XeSqlPkg_query_scan_shutdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(14),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"Normal", 
					"OnException", 
					"Parallel" }
			] sint32 state;
};
		
[dynamic: ToInstance, Description("Runtime query is setup"): Amended,
    Guid("{298b5bda-5f96-4361-b551-348d0826aab5}"), locale("MS\\0x409"),
    DisplayName("query_scan_setup"): Amended]
class XeSqlPkg_query_scan_setup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_setup: XeSqlPkg_query_scan_setup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Query topology"): Amended,
    Guid("{7bc67ae8-263f-42ab-ad1e-42a4f5bcae60}"), locale("MS\\0x409"),
    DisplayName("query_driver_topology"): Amended]
class XeSqlPkg_query_driver_topology: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_topology: XeSqlPkg_query_driver_topology
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string topology;
};
		
[dynamic: ToInstance, Description("Occurs when a query driver is removed from the cache."): Amended,
    Guid("{b8842b87-55bb-4476-9880-04d12d87f9ae}"), locale("MS\\0x409"),
    DisplayName("query_driver_cache_remove"): Amended]
class XeSqlPkg_query_driver_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_driver_cache_remove: XeSqlPkg_query_driver_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 connect_brick_id;
	[WmiDataId(6), read] uint64 query_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string topology;
};
		
[dynamic: ToInstance, Description("Bitmap data is finalized"): Amended,
    Guid("{9fca0bfa-2c75-4348-a964-9003e3914482}"), locale("MS\\0x409"),
    DisplayName("bitmap_data_finalize"): Amended]
class XeSqlPkg_bitmap_data_finalize: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_data_finalize: XeSqlPkg_bitmap_data_finalize
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 pages;
	[WmiDataId(6), read] uint64 rows;
	[WmiDataId(7), read] uint64 bits;
	[WmiDataId(8), read] uint32 numa_node_id;
	[WmiDataId(9), read] uint64 actual_density;
};
		
[dynamic: ToInstance, Description("Hash iterator's runtime actual memory"): Amended,
    Guid("{6204d13d-99d1-41c7-b82b-969be9e76960}"), locale("MS\\0x409"),
    DisplayName("iterator_hash_actual_memory"): Amended]
class XeSqlPkg_iterator_hash_actual_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class iterator_hash_actual_memory: XeSqlPkg_iterator_hash_actual_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 input;
	[WmiDataId(6), read] uint64 output;
	[WmiDataId(7), read] uint64 read_ahead;
};
		
[dynamic: ToInstance, Description("Parallel producer thread is started"): Amended,
    Guid("{3397e145-4376-4b79-83d3-d83dde797199}"), locale("MS\\0x409"),
    DisplayName("parallel_producer_open"): Amended]
class XeSqlPkg_parallel_producer_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_producer_open: XeSqlPkg_parallel_producer_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Used for nested loop join, occurs after producer receive correlated parameters"): Amended,
    Guid("{DE929B8B-A204-46b1-A05B-964A7ABE2508}"), locale("MS\\0x409"),
    DisplayName("producer_receive_correlated_params"): Amended]
class XeSqlPkg_producer_receive_correlated_params: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class producer_receive_correlated_params: XeSqlPkg_producer_receive_correlated_params
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Used for nested loop join, occurs after consumer send correlated parameters"): Amended,
    Guid("{FE892B3F-8722-4e45-92DA-FF51787E7F3C}"), locale("MS\\0x409"),
    DisplayName("consumer_send_correlated_params"): Amended]
class XeSqlPkg_consumer_send_correlated_params: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class consumer_send_correlated_params: XeSqlPkg_consumer_send_correlated_params
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is compiled. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{e3a29837-db87-4dd5-9eb2-4f8c7302f333}"), locale("MS\\0x409"),
    DisplayName("query_post_compilation_showplan"): Amended]
class XeSqlPkg_query_post_compilation_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_compilation_showplan: XeSqlPkg_query_post_compilation_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(63),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"20036", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"20549", 
					"20037", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBEVTNOT", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 cpu_time;
	[WmiDataId(13), read] uint64 recompile_count;
	[WmiDataId(14), read] sint32 begin_offset;
	[WmiDataId(15), read] sint32 end_offset;
	[WmiDataId(16), read, Extension("Variant")] object plan_handle;
	[WmiDataId(17), read, Extension("Variant")] object sql_handle;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is compiled. This event returns an XML representation of the estimated query plan that is generated when the query is optimized. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{46c873d9-77a2-4621-b05c-7fee8b8c4d89}"), locale("MS\\0x409"),
    DisplayName("query_pre_execution_showplan"): Amended]
class XeSqlPkg_query_pre_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_pre_execution_showplan: XeSqlPkg_query_pre_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(63),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"20036", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"20549", 
					"20037", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBEVTNOT", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] sint32 estimated_rows;
	[WmiDataId(10), read] sint32 estimated_cost;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs after a SQL statement is executed. This event returns an XML representation of the actual query plan. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{7bd6d19a-adb3-436b-bb29-cd2ee4d2468c}"), locale("MS\\0x409"),
    DisplayName("query_post_execution_showplan"): Amended]
class XeSqlPkg_query_post_execution_showplan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_post_execution_showplan: XeSqlPkg_query_post_execution_showplan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_database_id;
	[WmiDataId(6), read, 
				XEMapId(63),
				ValueMap { 
					"20801", 
					"17985", 
					"19521", 
					"21825", 
					"2", 
					"1", 
					"20545", 
					"21057", 
					"21313", 
					"19265", 
					"8257", 
					"18241", 
					"20034", 
					"21059", 
					"19523", 
					"21827", 
					"8259", 
					"21571", 
					"17475", 
					"20547", 
					"16964", 
					"21828", 
					"16708", 
					"20036", 
					"21572", 
					"17732", 
					"8260", 
					"19268", 
					"20549", 
					"20037", 
					"8262", 
					"21318", 
					"21574", 
					"17222", 
					"19526", 
					"20038", 
					"21831", 
					"22601", 
					"17993", 
					"21321", 
					"21577", 
					"0", 
					"65536", 
					"22604", 
					"19277", 
					"21581", 
					"4", 
					"20047", 
					"19283", 
					"16975", 
					"18000", 
					"20816", 
					"21072", 
					"19280", 
					"8272", 
					"17232", 
					"20550", 
					"21328", 
					"131072", 
					"18002", 
					"18258", 
					"19538", 
					"21586", 
					"8274", 
					"17235", 
					"20307", 
					"21075", 
					"22099", 
					"19539", 
					"21843", 
					"16723", 
					"20291", 
					"17491", 
					"18259", 
					"8276", 
					"17747", 
					"21587", 
					"20819", 
					"20051", 
					"8275", 
					"18004", 
					"16724", 
					"21076", 
					"22868", 
					"20821", 
					"21333", 
					"8277", 
					"8278", 
					"18263", 
					"19543", 
					"21847", 
					"22611", 
					"8280", 
					"21080" },
				Values { 
					"ADHOC", 
					"AGG", 
					"AKEYLOGIN", 
					"AKEYUSER", 
					"ALL", 
					"ANY", 
					"APP", 
					"APPROLE", 
					"ASM", 
					"ASYMKEY", 
					"AUDIT", 
					"AVAILABILITYGROUP", 
					"BINDING", 
					"CERT", 
					"CERTLOGIN", 
					"CERTUSER", 
					"CHECK", 
					"CONTRACT", 
					"CREDENTIAL", 
					"CRYPTOPROVIDER", 
					"DATABASE", 
					"DBAUDIT", 
					"DBAUDITSPEC", 
					"DBEVTNOT", 
					"DBTRIG", 
					"DBXESES", 
					"DEFAULT", 
					"DEK", 
					"ENDPOINT", 
					"EVTNOTIF", 
					"FKEY", 
					"FNSCLASM", 
					"FNTABASM", 
					"FTCAT", 
					"FTSTPLIST", 
					"FUNCTION", 
					"GROUPUSER", 
					"INDEX", 
					"INLFUNC", 
					"INLSCLFN", 
					"INTLTAB", 
					"INVALID", 
					"LOCAL", 
					"LOGIN", 
					"MASTERKEY", 
					"MSGTYPE", 
					"NOTADHOC", 
					"OBEVTNOT", 
					"OBFKEY", 
					"OBJ", 
					"PFUN", 
					"PREPARED", 
					"PRIORITY", 
					"PRKEY", 
					"PROC", 
					"PROCASM", 
					"PROPERTYLIST", 
					"PSCHEME", 
					"REMOTE", 
					"REPLPROC", 
					"RG", 
					"ROLE", 
					"ROUTE", 
					"RULE", 
					"SCHEMA", 
					"SEQUENCE", 
					"SERVER", 
					"SERVICE", 
					"SQLLOGIN", 
					"SQLUSER", 
					"SRVAUDITSPEC", 
					"SRVCONFIG", 
					"SRVEVTNOT", 
					"SRVROLE", 
					"SRVTRIG", 
					"SRVXESES", 
					"STATISTICS", 
					"SVCQ", 
					"SYNONYM", 
					"SYSTAB", 
					"TABFUNC", 
					"TRIGASM", 
					"TRIGGER", 
					"TYPE", 
					"UQKEY", 
					"USER", 
					"USRTAB", 
					"VIEW", 
					"WINGROUP", 
					"WINLOGIN", 
					"WINUSER", 
					"XMLSCHEMA", 
					"XPROC", 
					"XREL" }
			] uint16 object_type;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint16 nest_level;
	[WmiDataId(9), read] uint64 cpu_time;
	[WmiDataId(10), read] uint64 duration;
	[WmiDataId(11), read] sint32 estimated_rows;
	[WmiDataId(12), read] sint32 estimated_cost;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string showplan_xml;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Query execution trace (internal testing only)"): Amended,
    Guid("{4673ec11-35fc-4a2f-8cb2-68a223404ba2}"), locale("MS\\0x409"),
    DisplayName("query_execution_generic_trace"): Amended]
class XeSqlPkg_query_execution_generic_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_generic_trace: XeSqlPkg_query_execution_generic_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated")] string buffer;
};
		
[dynamic: ToInstance, Description("Occurs before allowing memory consuming remote exchange operator to be executed on other bricks in Matrix."): Amended,
    Guid("{4861aae2-0478-4179-b2aa-f447751bf30e}"), locale("MS\\0x409"),
    DisplayName("query_remote_memory_pre_grant"): Amended]
class XeSqlPkg_query_remote_memory_pre_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_remote_memory_pre_grant: XeSqlPkg_query_remote_memory_pre_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 required_remote_memory_pages;
	[WmiDataId(6), read] sint64 additional_remote_memory_pages_preferred;
	[WmiDataId(7), read] sint64 additional_remote_memory_pages_actual;
	[WmiDataId(8), read] sint64 granted_local_memory_pages;
	[WmiDataId(9), read] sint64 max_memory_pages_for_one_query_fragment;
	[WmiDataId(10), read] uint32 max_total_wait_timeout;
	[WmiDataId(11), read] uint32 local_waited_duration;
	[WmiDataId(12), read] uint32 remote_wait_time_limit;
	[WmiDataId(13), read] sint64 total_remote_memory_target_pages;
	[WmiDataId(14), read] sint64 total_remote_memory_granted_pages;
};
		
[dynamic: ToInstance, Description("Occurs on classifying current memory consuming remote exchange operator consumes relative small amount of memory, then will allow executing immediately without asking resource permission."): Amended,
    Guid("{17599191-0c13-421c-a237-4d4019f58048}"), locale("MS\\0x409"),
    DisplayName("query_remote_memory_skip_small_grant"): Amended]
class XeSqlPkg_query_remote_memory_skip_small_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_remote_memory_skip_small_grant: XeSqlPkg_query_remote_memory_skip_small_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 required_remote_memory_pages;
	[WmiDataId(6), read] sint64 additional_remote_memory_pages;
	[WmiDataId(7), read] sint64 total_remote_memory_target_pages;
	[WmiDataId(8), read] sint64 total_remote_memory_granted_pages;
};
		
[dynamic: ToInstance, Description("Occurs before allowing memory consuming remote exchange operator to be executed on other bricks in Matrix."): Amended,
    Guid("{c9283197-f80c-4485-846b-fa71aeceb968}"), locale("MS\\0x409"),
    DisplayName("query_remote_memory_post_grant"): Amended]
class XeSqlPkg_query_remote_memory_post_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_remote_memory_post_grant: XeSqlPkg_query_remote_memory_post_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
	[WmiDataId(6), read] sint8  first_try_success;
	[WmiDataId(7), read] sint64 actual_remote_memory_pages;
	[WmiDataId(8), read] sint64 total_remote_memory_target_pages;
	[WmiDataId(9), read] sint64 total_remote_memory_granted_pages;
};
		
[dynamic: ToInstance, Description("Occurs after all memory consuming remote exchange operators are executed in Matrix."): Amended,
    Guid("{8404f0cf-270d-441d-8db1-bf9df31cb79e}"), locale("MS\\0x409"),
    DisplayName("query_remote_memory_return_grant"): Amended]
class XeSqlPkg_query_remote_memory_return_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_remote_memory_return_grant: XeSqlPkg_query_remote_memory_return_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 returned_remote_memory_pages;
	[WmiDataId(6), read] sint64 total_remote_memory_target_pages;
	[WmiDataId(7), read] sint64 total_remote_memory_granted_pages;
};
		
[dynamic: ToInstance, Description("RX about to allocate row buffers"): Amended,
    Guid("{a3bf79dc-bade-4f7a-9aea-bd2e1001883f}"), locale("MS\\0x409"),
    DisplayName("query_rx_allocating_buffers"): Amended]
class XeSqlPkg_query_rx_allocating_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_allocating_buffers: XeSqlPkg_query_rx_allocating_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX allocates row buffers"): Amended,
    Guid("{cd46f697-cf16-4e5e-908b-10aaa482d9a3}"), locale("MS\\0x409"),
    DisplayName("query_rx_allocate_buffers"): Amended]
class XeSqlPkg_query_rx_allocate_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_allocate_buffers: XeSqlPkg_query_rx_allocate_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX releases row buffers"): Amended,
    Guid("{da9d59d5-101b-4bbe-8c4d-81a83873cf30}"), locale("MS\\0x409"),
    DisplayName("query_rx_release_buffers"): Amended]
class XeSqlPkg_query_rx_release_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_release_buffers: XeSqlPkg_query_rx_release_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX about to send row buffers"): Amended,
    Guid("{6462c046-f901-480f-8826-ed0c3061c266}"), locale("MS\\0x409"),
    DisplayName("query_rx_sending_buffers"): Amended]
class XeSqlPkg_query_rx_sending_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_sending_buffers: XeSqlPkg_query_rx_sending_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX sends row buffers"): Amended,
    Guid("{3bc014fc-947e-4eb8-be70-dab84683ce7f}"), locale("MS\\0x409"),
    DisplayName("query_rx_send_buffers"): Amended]
class XeSqlPkg_query_rx_send_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_send_buffers: XeSqlPkg_query_rx_send_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX receives row buffers"): Amended,
    Guid("{d8eaf6fe-367c-4c56-a397-b50bfbd117c1}"), locale("MS\\0x409"),
    DisplayName("query_rx_receive_buffers"): Amended]
class XeSqlPkg_query_rx_receive_buffers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_receive_buffers: XeSqlPkg_query_rx_receive_buffers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] sint8  is_eos;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 eos_count;
	[WmiDataId(11), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX about to send an activate message"): Amended,
    Guid("{228f5902-bd1d-4115-bf01-8ba9f203b616}"), locale("MS\\0x409"),
    DisplayName("query_rx_sending_activation"): Amended]
class XeSqlPkg_query_rx_sending_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_sending_activation: XeSqlPkg_query_rx_sending_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("RX sends an activation message"): Amended,
    Guid("{7ecfbc34-2eee-4b1b-b88f-f8047c677a61}"), locale("MS\\0x409"),
    DisplayName("query_rx_send_activation"): Amended]
class XeSqlPkg_query_rx_send_activation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rx_send_activation: XeSqlPkg_query_rx_send_activation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_id;
	[WmiDataId(6), read] uint32 brick_id;
	[WmiDataId(7), read] uint32 query_operation_node_id;
	[WmiDataId(8), read] uint64 query_id;
};
		
[dynamic: ToInstance, Description("Query is starting up"): Amended,
    Guid("{60fec024-9b6a-433c-82b0-7f9326e4100b}"), locale("MS\\0x409"),
    DisplayName("query_scan_startup"): Amended]
class XeSqlPkg_query_scan_startup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_scan_startup: XeSqlPkg_query_scan_startup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(25),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Standalone", 
					"RX Plan", 
					"RPC Plan", 
					"Mixed Plan" }
			] uint8 plan_type;
};
		
[dynamic: ToInstance, Description("Creating RPC column accessor."): Amended,
    Guid("{b7cdabbb-77c4-4462-8657-59972e1c8454}"), locale("MS\\0x409"),
    DisplayName("query_rpc_create_accessor"): Amended]
class XeSqlPkg_query_rpc_create_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_create_accessor: XeSqlPkg_query_rpc_create_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Creating RPC column accessor."): Amended,
    Guid("{bf52bf5e-0b2a-40bb-9d40-8f94e00a5657}"), locale("MS\\0x409"),
    DisplayName("query_rpc_create_col_accessor"): Amended]
class XeSqlPkg_query_rpc_create_col_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_create_col_accessor: XeSqlPkg_query_rpc_create_col_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Releasing RPC column accessor."): Amended,
    Guid("{3718798c-6827-4372-8d16-74ac63f76207}"), locale("MS\\0x409"),
    DisplayName("query_rpc_release_accessor"): Amended]
class XeSqlPkg_query_rpc_release_accessor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_release_accessor: XeSqlPkg_query_rpc_release_accessor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Closing RPC rowset."): Amended,
    Guid("{28e17571-1a94-43f5-a2eb-9261a0d5d128}"), locale("MS\\0x409"),
    DisplayName("query_rpc_close"): Amended]
class XeSqlPkg_query_rpc_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_close: XeSqlPkg_query_rpc_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Waking up RPC rowset."): Amended,
    Guid("{e878bdd1-5135-43dc-883b-80676e58f4d2}"), locale("MS\\0x409"),
    DisplayName("query_rpc_wake_up"): Amended]
class XeSqlPkg_query_rpc_wake_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_wake_up: XeSqlPkg_query_rpc_wake_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  in_clone_loop;
	[WmiDataId(6), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting RPC rowset to dormant state."): Amended,
    Guid("{603f4daa-5788-449f-a0a9-7ac37b6f4449}"), locale("MS\\0x409"),
    DisplayName("query_rpc_go_dormant"): Amended]
class XeSqlPkg_query_rpc_go_dormant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_go_dormant: XeSqlPkg_query_rpc_go_dormant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  in_clone_loop;
	[WmiDataId(6), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting range for RPC rowset."): Amended,
    Guid("{4c03fc96-29e3-4b81-a5d9-1f26c5a74f06}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_range"): Amended]
class XeSqlPkg_query_rpc_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_range: XeSqlPkg_query_rpc_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read, 
				XEMapId(125),
				BitMap { 
					"4", 
					"2", 
					"1", 
					"0", 
					"16", 
					"8" },
				BitValues { 
					"DBRANGE_EXCLUDENULLS", 
					"DBRANGE_EXCLUSIVEEND", 
					"DBRANGE_EXCLUSIVESTART", 
					"DBRANGE_INCLUSIVEEND", 
					"DBRANGE_MATCH", 
					"DBRANGE_PREFIX" }
			] uint64 range_options;
	[WmiDataId(9), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Fetching next row from RPC rowset."): Amended,
    Guid("{d069a386-e816-4077-b5a2-2864d3042afc}"), locale("MS\\0x409"),
    DisplayName("query_rpc_fetch_next_row"): Amended]
class XeSqlPkg_query_rpc_fetch_next_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_fetch_next_row: XeSqlPkg_query_rpc_fetch_next_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Getting data from RPC rowset."): Amended,
    Guid("{e736a7d3-4e25-42e7-83dd-9935353b0dd0}"), locale("MS\\0x409"),
    DisplayName("query_rpc_get_data"): Amended]
class XeSqlPkg_query_rpc_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_get_data: XeSqlPkg_query_rpc_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
	[WmiDataId(9), read] sint8  after_update;
};
		
[dynamic: ToInstance, Description("Setting data in RPC rowset."): Amended,
    Guid("{81da2979-794e-4328-a0c9-151a91cef534}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_data"): Amended]
class XeSqlPkg_query_rpc_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_data: XeSqlPkg_query_rpc_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Inserting row in RPC rowset."): Amended,
    Guid("{c9ce5fb9-700e-4222-b106-821db8e8babf}"), locale("MS\\0x409"),
    DisplayName("query_rpc_insert_row"): Amended]
class XeSqlPkg_query_rpc_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_insert_row: XeSqlPkg_query_rpc_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Deleting rows from RPC rowset."): Amended,
    Guid("{18f0e3cc-f352-4174-8e8f-c12c1cc1fb45}"), locale("MS\\0x409"),
    DisplayName("query_rpc_delete_rows"): Amended]
class XeSqlPkg_query_rpc_delete_rows: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_delete_rows: XeSqlPkg_query_rpc_delete_rows
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
	[WmiDataId(6), read] sint8  row_deleted;
};
		
[dynamic: ToInstance, Description("Fetching row by key value from RPC rowset."): Amended,
    Guid("{c264916a-bfa9-4529-bc4f-9006706e3c43}"), locale("MS\\0x409"),
    DisplayName("query_rpc_fetch_row_by_key_value"): Amended]
class XeSqlPkg_query_rpc_fetch_row_by_key_value: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_fetch_row_by_key_value: XeSqlPkg_query_rpc_fetch_row_by_key_value
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 key_accessor;
	[WmiDataId(6), read] uint64 key_accessor_bindings;
	[WmiDataId(7), read] uint32 key_accessor_buffer_size;
	[WmiDataId(8), read] uint64 data_accessor;
	[WmiDataId(9), read] uint64 data_accessor_bindings;
	[WmiDataId(10), read] uint32 data_accessor_buffer_size;
	[WmiDataId(11), read] sint8  cache_keys;
	[WmiDataId(12), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Inserting index row in RPC rowset."): Amended,
    Guid("{17bbc16d-1515-46d8-8402-f6c5211af541}"), locale("MS\\0x409"),
    DisplayName("query_rpc_insert_index_row"): Amended]
class XeSqlPkg_query_rpc_insert_index_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_insert_index_row: XeSqlPkg_query_rpc_insert_index_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Ending update in RPC rowset."): Amended,
    Guid("{c430fedd-925b-45c4-a59b-f07d8d5c5cca}"), locale("MS\\0x409"),
    DisplayName("query_rpc_end_update"): Amended]
class XeSqlPkg_query_rpc_end_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_end_update: XeSqlPkg_query_rpc_end_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Setting cardinality in RPC rowset."): Amended,
    Guid("{0021027c-2f3b-4b5d-b34d-22f41144f596}"), locale("MS\\0x409"),
    DisplayName("query_rpc_set_cardinality"): Amended]
class XeSqlPkg_query_rpc_set_cardinality: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_set_cardinality: XeSqlPkg_query_rpc_set_cardinality
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Preparing to delete in RPC rowset."): Amended,
    Guid("{df6e9271-0220-4366-b1b0-87ddf66e6e26}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_to_delete: XeSqlPkg_query_rpc_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating and deleting row in RPC rowset."): Amended,
    Guid("{16b13fa5-2905-443d-8742-3afbd2ef965b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_and_delete_row"): Amended]
class XeSqlPkg_query_rpc_locate_and_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_and_delete_row: XeSqlPkg_query_rpc_locate_and_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating and updating row in RPC rowset."): Amended,
    Guid("{25ee094f-a526-41e8-97f6-eff37105c90f}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_and_update_row"): Amended]
class XeSqlPkg_query_rpc_locate_and_update_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_and_update_row: XeSqlPkg_query_rpc_locate_and_update_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 key_accessor;
	[WmiDataId(6), read] uint64 key_accessor_bindings;
	[WmiDataId(7), read] uint32 key_accessor_buffer_size;
	[WmiDataId(8), read] uint64 data_accessor;
	[WmiDataId(9), read] uint64 data_accessor_bindings;
	[WmiDataId(10), read] uint32 data_accessor_buffer_size;
	[WmiDataId(11), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Locating or inserting row in RPC rowset."): Amended,
    Guid("{44ce9c5a-6f09-4fad-a074-072113f339ff}"), locale("MS\\0x409"),
    DisplayName("query_rpc_locate_or_insert_row"): Amended]
class XeSqlPkg_query_rpc_locate_or_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_locate_or_insert_row: XeSqlPkg_query_rpc_locate_or_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Switching partition in RPC rowset."): Amended,
    Guid("{32b35a93-b240-422e-bdc5-506d88112dc5}"), locale("MS\\0x409"),
    DisplayName("query_rpc_switch_partition"): Amended]
class XeSqlPkg_query_rpc_switch_partition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_switch_partition: XeSqlPkg_query_rpc_switch_partition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  use_local_rowset;
};
		
[dynamic: ToInstance, Description("Processing SetRange RPC command."): Amended,
    Guid("{092c758d-fda0-4d10-8ba8-0edc43b44c94}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_range"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_range: XeSqlPkg_query_rpc_process_cmd_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing GetData RPC command."): Amended,
    Guid("{c4b7ffb4-fbdc-4893-a5f6-63435ea724b2}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_get_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_get_data: XeSqlPkg_query_rpc_process_cmd_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
};
		
[dynamic: ToInstance, Description("Processing FetchData RPC command."): Amended,
    Guid("{5d918401-8da3-4995-b43b-6511cad5048b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_fetch_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_fetch_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_fetch_data: XeSqlPkg_query_rpc_process_cmd_fetch_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
};
		
[dynamic: ToInstance, Description("Processing SetData RPC command."): Amended,
    Guid("{d4abb1d4-64e0-43fb-881b-3f36912e0c75}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_data"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_data: XeSqlPkg_query_rpc_process_cmd_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing InsertRow RPC command."): Amended,
    Guid("{bef90015-2cd7-43b5-9657-7935e9402183}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_insert_row"): Amended]
class XeSqlPkg_query_rpc_process_cmd_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_insert_row: XeSqlPkg_query_rpc_process_cmd_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing DeleteRow RPC command."): Amended,
    Guid("{4e840bf0-5864-4417-83ee-c456dc9c0ab4}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_delete_row"): Amended]
class XeSqlPkg_query_rpc_process_cmd_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_delete_row: XeSqlPkg_query_rpc_process_cmd_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing PrepareToDelete RPC command."): Amended,
    Guid("{e494446f-2f63-4d95-990b-d2e4d0eb0a5d}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_process_cmd_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_prepare_to_delete: XeSqlPkg_query_rpc_process_cmd_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 row;
};
		
[dynamic: ToInstance, Description("Processing SetMarker RPC command."): Amended,
    Guid("{67249e46-2e71-4dd7-9e07-d6b80d7b01cb}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_set_marker"): Amended]
class XeSqlPkg_query_rpc_process_cmd_set_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_set_marker: XeSqlPkg_query_rpc_process_cmd_set_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing GotoMarker RPC command."): Amended,
    Guid("{7646fe7c-2bd9-41ee-97ed-5df6f36aba32}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_goto_marker"): Amended]
class XeSqlPkg_query_rpc_process_cmd_goto_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_goto_marker: XeSqlPkg_query_rpc_process_cmd_goto_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Processing LobAction RPC command."): Amended,
    Guid("{9de85962-44bf-45ec-923d-c6c8a8a4bf7b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_process_cmd_lob_action"): Amended]
class XeSqlPkg_query_rpc_process_cmd_lob_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_process_cmd_lob_action: XeSqlPkg_query_rpc_process_cmd_lob_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing WakeUp RPC command."): Amended,
    Guid("{de7a8a86-927a-46b3-9cf3-75c14c7b936e}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_wake_up"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_wake_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_wake_up: XeSqlPkg_query_rpc_prepare_cmd_wake_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
};
		
[dynamic: ToInstance, Description("Preparing FetchData RPC command."): Amended,
    Guid("{d6680279-21ff-4279-96c2-9eb5817ebe97}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_fetch_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_fetch_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_fetch_data: XeSqlPkg_query_rpc_prepare_cmd_fetch_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing GetData RPC command."): Amended,
    Guid("{6a85382d-1716-45d4-b600-a65e365e193c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_get_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_get_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_get_data: XeSqlPkg_query_rpc_prepare_cmd_get_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing SetRange RPC command."): Amended,
    Guid("{285ec2c5-92b0-4419-a6ae-387e50b1cbc6}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_range"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_range: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_range: XeSqlPkg_query_rpc_prepare_cmd_set_range
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  one_row;
};
		
[dynamic: ToInstance, Description("Preparing SetRange RPC command with cached keys."): Amended,
    Guid("{6cc2a9c4-5e2e-4ca1-a34f-63c39f5a2833}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_range_with_cached_keys"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_range_with_cached_keys: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_range_with_cached_keys: XeSqlPkg_query_rpc_prepare_cmd_set_range_with_cached_keys
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  one_row;
};
		
[dynamic: ToInstance, Description("Preparing SetData RPC command."): Amended,
    Guid("{de48e949-ddb2-45f4-9625-7ec19a5014f0}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_data"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_data: XeSqlPkg_query_rpc_prepare_cmd_set_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
};
		
[dynamic: ToInstance, Description("Preparing InsertRow RPC command."): Amended,
    Guid("{e424068d-d6af-4c4a-9b22-f4dd03ed5c8c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_insert_row"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_insert_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_insert_row: XeSqlPkg_query_rpc_prepare_cmd_insert_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 accessor;
	[WmiDataId(6), read] uint64 accessor_bindings;
	[WmiDataId(7), read] uint32 accessor_buffer_size;
	[WmiDataId(8), read] sint8  use_locate_or_insert;
};
		
[dynamic: ToInstance, Description("Preparing PrepareToDelete RPC command."): Amended,
    Guid("{af81d07f-3456-4242-a8d3-84f1a29b8dea}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_prepare_to_delete"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_prepare_to_delete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_prepare_to_delete: XeSqlPkg_query_rpc_prepare_cmd_prepare_to_delete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing DeleteRow RPC command."): Amended,
    Guid("{dcfe2350-b865-4a65-96a6-8a701cae7aa4}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_delete_row"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_delete_row: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_delete_row: XeSqlPkg_query_rpc_prepare_cmd_delete_row
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing SetMarker RPC command."): Amended,
    Guid("{8a48c514-5499-4a1b-a83b-bf35dc69c12c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_set_marker"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_set_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_set_marker: XeSqlPkg_query_rpc_prepare_cmd_set_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Preparing GotoMarker RPC command."): Amended,
    Guid("{4809c149-0d22-4aac-ae77-075ff11c801f}"), locale("MS\\0x409"),
    DisplayName("query_rpc_prepare_cmd_goto_marker"): Amended]
class XeSqlPkg_query_rpc_prepare_cmd_goto_marker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_prepare_cmd_goto_marker: XeSqlPkg_query_rpc_prepare_cmd_goto_marker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when each batch processing operator get a new batch of data from child operators."): Amended,
    Guid("{a8405c41-76e4-44b3-bc2b-ad1bf95dad17}"), locale("MS\\0x409"),
    DisplayName("query_execution_get_batch_vector"): Amended]
class XeSqlPkg_query_execution_get_batch_vector: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_get_batch_vector: XeSqlPkg_query_execution_get_batch_vector
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
	[WmiDataId(7), read] sint8  is_const_vector;
	[WmiDataId(8), read] uint32 row_count;
	[WmiDataId(9), read] sint32 normalized_data_count;
	[WmiDataId(10), read] sint32 unnormalized_data_count;
	[WmiDataId(11), read] sint32 null_data_count;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string column_name;
};
		
[dynamic: ToInstance, Description("Occurs when hash table is built in batch processing."): Amended,
    Guid("{d92515a0-313f-4e44-97c1-b69f15f84993}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_processing_hash_table_build"): Amended]
class XeSqlPkg_query_execution_batch_processing_hash_table_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_processing_hash_table_build: XeSqlPkg_query_execution_batch_processing_hash_table_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
	[WmiDataId(7), read] sint32 hash_table_slice_count;
	[WmiDataId(8), read] uint64 bucket_count_per_hash_table_slice;
	[WmiDataId(9), read] uint64 bucket_size_bytes;
	[WmiDataId(10), read] uint64 overflow_pages_count;
	[WmiDataId(11), read] sint32 hash_table_slices_built;
	[WmiDataId(12), read] sint8  is_small_hash_table;
};
		
[dynamic: ToInstance, Description("Occurs when bitmap is built in batch processing."): Amended,
    Guid("{7cf368c3-9219-4de3-b988-5d19813f8c18}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_processing_bitmap_build"): Amended]
class XeSqlPkg_query_execution_batch_processing_bitmap_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_processing_bitmap_build: XeSqlPkg_query_execution_batch_processing_bitmap_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint64 bytes;
	[WmiDataId(8), read] sint8  is_fast_bitmap;
};
		
[dynamic: ToInstance, Description("Occurs when range elimination map is built in batch processing."): Amended,
    Guid("{eb0468db-7d6f-465e-bed3-318b93e83f64}"), locale("MS\\0x409"),
    DisplayName("query_execution_range_elimination_map_build"): Amended]
class XeSqlPkg_query_execution_range_elimination_map_build: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_range_elimination_map_build: XeSqlPkg_query_execution_range_elimination_map_build
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] uint64 ranges_count;
	[WmiDataId(7), read] uint64 bucket_size;
};
		
[dynamic: ToInstance, Description("RPC runtime collection cache hit, with cache key in request."): Amended,
    Guid("{0e0eef27-de0f-4ee3-b1e2-fec1397e502c}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_cache_hit"): Amended]
class XeSqlPkg_query_rpc_server_collection_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_cache_hit: XeSqlPkg_query_rpc_server_collection_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("RPC runtime collection cache hit, using request type instead of cache key."): Amended,
    Guid("{b7e6c749-20b8-49fd-9ceb-4252a08451e5}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_cache_hit_no_key"): Amended]
class XeSqlPkg_query_rpc_server_collection_cache_hit_no_key: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_cache_hit_no_key: XeSqlPkg_query_rpc_server_collection_cache_hit_no_key
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("RPC runtime collection cache miss."): Amended,
    Guid("{b4a68f00-f8d7-4258-a69e-8c1d08f844b1}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_cache_miss"): Amended]
class XeSqlPkg_query_rpc_server_collection_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_cache_miss: XeSqlPkg_query_rpc_server_collection_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Inserting RPC runtime collection into cache."): Amended,
    Guid("{1cbb55b9-fd92-49d3-a480-097e9057e096}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_cache_insert"): Amended]
class XeSqlPkg_query_rpc_server_collection_cache_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_cache_insert: XeSqlPkg_query_rpc_server_collection_cache_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Removing RPC runtime collection from cache."): Amended,
    Guid("{9352b6a6-c4e0-4433-822d-27f3026be7ce}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_cache_remove"): Amended]
class XeSqlPkg_query_rpc_server_collection_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_cache_remove: XeSqlPkg_query_rpc_server_collection_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Flushing RPC runtime collection cache."): Amended,
    Guid("{2f383850-846d-4f00-955b-81c9f6fcd417}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_cache_flush"): Amended]
class XeSqlPkg_query_rpc_server_cache_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_cache_flush: XeSqlPkg_query_rpc_server_cache_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Creating RPC runtime collection."): Amended,
    Guid("{5cc8246b-e265-476d-ae17-b7f3c17507cb}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_collection_create"): Amended]
class XeSqlPkg_query_rpc_server_collection_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_collection_create: XeSqlPkg_query_rpc_server_collection_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] uint64 cache_descriptor;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Initializing RPC runtime."): Amended,
    Guid("{cb8338ef-eb9b-48e2-adfc-9326317d836e}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_init"): Amended]
class XeSqlPkg_query_rpc_server_runtime_init: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_init: XeSqlPkg_query_rpc_server_runtime_init
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
};
		
[dynamic: ToInstance, Description("Waking up RPC runtime."): Amended,
    Guid("{87ff3b0a-6aa2-45ea-b8d5-349dcc5270c4}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_wake_up"): Amended]
class XeSqlPkg_query_rpc_server_runtime_wake_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_wake_up: XeSqlPkg_query_rpc_server_runtime_wake_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string table_name;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string schema_name;
};
		
[dynamic: ToInstance, Description("RPC runtime cache hit."): Amended,
    Guid("{2faccbee-f861-46e4-a5ba-87ea9eb81188}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_cache_hit"): Amended]
class XeSqlPkg_query_rpc_server_runtime_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_cache_hit: XeSqlPkg_query_rpc_server_runtime_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("RPC runtime cache miss."): Amended,
    Guid("{9c96456a-eb60-42c1-9e13-9413b4f2d3ba}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_cache_miss"): Amended]
class XeSqlPkg_query_rpc_server_runtime_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_cache_miss: XeSqlPkg_query_rpc_server_runtime_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Inserting RPC runtime into cache."): Amended,
    Guid("{6262d6f3-abc8-4ef9-8af0-887bcf1af425}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_cache_insert"): Amended]
class XeSqlPkg_query_rpc_server_runtime_cache_insert: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_cache_insert: XeSqlPkg_query_rpc_server_runtime_cache_insert
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read] sint8  inserted;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Removing RPC runtime from cache."): Amended,
    Guid("{41012423-6ad4-425f-b83d-f160e55c4669}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_cache_remove"): Amended]
class XeSqlPkg_query_rpc_server_runtime_cache_remove: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_cache_remove: XeSqlPkg_query_rpc_server_runtime_cache_remove
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Creating RPC runtime."): Amended,
    Guid("{d29869db-0325-438b-bdfe-89201c95aeff}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_runtime_create"): Amended]
class XeSqlPkg_query_rpc_server_runtime_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_runtime_create: XeSqlPkg_query_rpc_server_runtime_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(6), read] uint32 db_id;
	[WmiDataId(7), read] uint32 table_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 hash_value;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string cache_unique_id;
};
		
[dynamic: ToInstance, Description("Sending RPC request."): Amended,
    Guid("{9c78f76c-ac5e-47d0-a317-f4c36e64f1f9}"), locale("MS\\0x409"),
    DisplayName("query_rpc_sendrequest"): Amended]
class XeSqlPkg_query_rpc_sendrequest: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_sendrequest: XeSqlPkg_query_rpc_sendrequest
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 destination_brick_id;
	[WmiDataId(6), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(7), read] uint32 hash_value;
	[WmiDataId(8), read] sint8  use_cache;
};
		
[dynamic: ToInstance, Description("Receiving RPC request."): Amended,
    Guid("{ab3c1ef1-75b9-4f53-b6c7-bdefc303c96b}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_recvrequest"): Amended]
class XeSqlPkg_query_rpc_server_recvrequest: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_recvrequest: XeSqlPkg_query_rpc_server_recvrequest
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 source_brick_id;
	[WmiDataId(6), read, 
				XEMapId(110),
				ValueMap { 
					"12", 
					"1", 
					"2", 
					"3", 
					"4", 
					"6", 
					"5", 
					"7", 
					"16", 
					"18", 
					"17", 
					"19", 
					"20", 
					"13", 
					"14", 
					"15", 
					"21", 
					"0", 
					"10", 
					"11", 
					"8", 
					"9" },
				Values { 
					"Delete", 
					"FetchNextRow", 
					"FetchNextRowWithSetRange", 
					"FetchRowByKeyValue", 
					"InsertRow", 
					"InsertRowMarker", 
					"InsertRowSpecial", 
					"InsertRowSpecialMarker", 
					"LobAction", 
					"LobActionByKey", 
					"LobActionByMarker", 
					"LobFetchSpecial", 
					"LobFetchSpecialByKey", 
					"LocateAndDeleteRow", 
					"LocateAndUpdateRow", 
					"LocateOrInsertRow", 
					"max", 
					"Nil", 
					"PrepareToDelete", 
					"PrepareToDeleteOpt", 
					"SetData", 
					"SetDataSpecial" }
			] uint32 request_type;
	[WmiDataId(7), read] uint32 hash_value;
	[WmiDataId(8), read] sint8  use_cache;
};
		
[dynamic: ToInstance, Description("Preparing LobAction RPC command."): Amended,
    Guid("{30c4da29-cb44-4a4d-9d93-530e804afbcc}"), locale("MS\\0x409"),
    DisplayName("query_rpc_lob_action"): Amended]
class XeSqlPkg_query_rpc_lob_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_lob_action: XeSqlPkg_query_rpc_lob_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(111),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0" },
				Values { 
					"GETSTATUS", 
					"READAT", 
					"REPLACEAT", 
					"STAT" }
			] uint32 lob_action;
	[WmiDataId(6), read] uint64 column_id;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint64 length;
	[WmiDataId(9), read] uint32 size;
};
		
[dynamic: ToInstance, Description("Executing RPC lob action."): Amended,
    Guid("{936c6965-2930-4cd1-b767-2eef8bb74d30}"), locale("MS\\0x409"),
    DisplayName("query_rpc_server_lob_action"): Amended]
class XeSqlPkg_query_rpc_server_lob_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_rpc_server_lob_action: XeSqlPkg_query_rpc_server_lob_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(111),
				ValueMap { 
					"3", 
					"2", 
					"1", 
					"0" },
				Values { 
					"GETSTATUS", 
					"READAT", 
					"REPLACEAT", 
					"STAT" }
			] uint32 lob_action;
	[WmiDataId(6), read] uint64 column_id;
	[WmiDataId(7), read] uint64 offset;
	[WmiDataId(8), read] uint64 length;
	[WmiDataId(9), read] uint32 size;
};
		
[dynamic: ToInstance, Description("No CQSCAN cache due to memory limitation."): Amended,
    Guid("{D71F7902-6A78-4fd2-94E9-33CB73D10AE6}"), locale("MS\\0x409"),
    DisplayName("query_no_cqscan_cache_due_to_memory_limitation"): Amended]
class XeSqlPkg_query_no_cqscan_cache_due_to_memory_limitation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_no_cqscan_cache_due_to_memory_limitation: XeSqlPkg_query_no_cqscan_cache_due_to_memory_limitation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_threshold_kb;
	[WmiDataId(6), read] uint64 requested_memory_kb;
};
		
[dynamic: ToInstance, Description("Occurs when column store scan get one batch in batch processing."): Amended,
    Guid("{7ef7e15d-35aa-4049-b2d9-8f9925f8d88f}"), locale("MS\\0x409"),
    DisplayName("query_execution_get_batch_from_column_store"): Amended]
class XeSqlPkg_query_execution_get_batch_from_column_store: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_get_batch_from_column_store: XeSqlPkg_query_execution_get_batch_from_column_store
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store scan does switch partition in batch processing."): Amended,
    Guid("{6753e24d-1db0-4f37-b2c7-398db758bf90}"), locale("MS\\0x409"),
    DisplayName("query_execution_switch_partition"): Amended]
class XeSqlPkg_query_execution_switch_partition: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_switch_partition: XeSqlPkg_query_execution_switch_partition
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 query_thread_id;
};
		
[dynamic: ToInstance, Description("Occurs when partition elimination info is built."): Amended,
    Guid("{d1066366-778e-442f-b60f-00e0c6d6bf63}"), locale("MS\\0x409"),
    DisplayName("query_execution_print_partition_elimination_info"): Amended]
class XeSqlPkg_query_execution_print_partition_elimination_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_print_partition_elimination_info: XeSqlPkg_query_execution_print_partition_elimination_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string partition_elimination_info;
};
		
[dynamic: ToInstance, Description("Remote DMV stream client side open call is made"): Amended,
    Guid("{6F21AFBF-AD4E-4e17-BA4B-3401540556BE}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_open_client"): Amended]
class XeSqlPkg_remote_dmv_stream_open_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_open_client: XeSqlPkg_remote_dmv_stream_open_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream is open call is serviced"): Amended,
    Guid("{9748888C-3898-4d04-95A1-60F1DB3F6AED}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_open_server"): Amended]
class XeSqlPkg_remote_dmv_stream_open_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_open_server: XeSqlPkg_remote_dmv_stream_open_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream get_row client side call is made"): Amended,
    Guid("{2EA3354C-748D-4aec-9656-157F84994C1A}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_get_rows_client"): Amended]
class XeSqlPkg_remote_dmv_stream_get_rows_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_get_rows_client: XeSqlPkg_remote_dmv_stream_get_rows_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream get_row call is serviced"): Amended,
    Guid("{58945AC1-FDFD-4f70-BB35-9AF55E39D620}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_get_rows_server"): Amended]
class XeSqlPkg_remote_dmv_stream_get_rows_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_get_rows_server: XeSqlPkg_remote_dmv_stream_get_rows_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream release resources call is made"): Amended,
    Guid("{73648C0C-5F42-4e67-A388-51AB9041D38D}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_release_resources_client"): Amended]
class XeSqlPkg_remote_dmv_stream_release_resources_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_release_resources_client: XeSqlPkg_remote_dmv_stream_release_resources_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream release resources call is serviced"): Amended,
    Guid("{56C2FE1B-D6A7-4928-BAB5-7581872D8E1A}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_release_resources_server"): Amended]
class XeSqlPkg_remote_dmv_stream_release_resources_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_release_resources_server: XeSqlPkg_remote_dmv_stream_release_resources_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache entry added"): Amended,
    Guid("{8B7E7280-13AA-4eee-AA7E-6925779FBD03}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_added"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_added: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_added: XeSqlPkg_remote_dmv_stream_runtime_cache_added
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache hit"): Amended,
    Guid("{A1FB33C8-2DFA-4fe0-AAC5-F1592F8D1D27}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_hit"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_hit: XeSqlPkg_remote_dmv_stream_runtime_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream cache miss"): Amended,
    Guid("{CCE05E1A-0B4D-448e-8EE3-AF98C4570D32}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_runtime_cache_miss"): Amended]
class XeSqlPkg_remote_dmv_stream_runtime_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_runtime_cache_miss: XeSqlPkg_remote_dmv_stream_runtime_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
};
		
[dynamic: ToInstance, Description("Remote DMV stream blob fetch call is serviced"): Amended,
    Guid("{8DD88129-2377-4b20-87AD-DE217DFA1663}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_blob_fetch_server"): Amended]
class XeSqlPkg_remote_dmv_stream_blob_fetch_server: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_blob_fetch_server: XeSqlPkg_remote_dmv_stream_blob_fetch_server
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Client call is made to fetch blob data from a remote DMV stream"): Amended,
    Guid("{13885262-E93F-4640-8C22-825489ED6DDB}"), locale("MS\\0x409"),
    DisplayName("remote_dmv_stream_blob_fetch_client"): Amended]
class XeSqlPkg_remote_dmv_stream_blob_fetch_client: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remote_dmv_stream_blob_fetch_client: XeSqlPkg_remote_dmv_stream_blob_fetch_client
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 internal_stvf_id;
	[WmiDataId(6), read] uint32 client_brick_id;
	[WmiDataId(7), read] uint32 client_stream_id;
	[WmiDataId(8), read] uint32 server_brick_id;
	[WmiDataId(9), read] uint32 server_session_id;
};
		
[dynamic: ToInstance, Description("Metadata cache entry hit"): Amended,
    Guid("{b1cb28f2-1761-48d7-bcb4-97f705a2fbb2}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_hit"): Amended]
class XeSqlPkg_metadata_cache_hit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_hit: XeSqlPkg_metadata_cache_hit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata cache entry miss"): Amended,
    Guid("{7328a411-69fd-49f4-9667-b683b03794f6}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_miss"): Amended]
class XeSqlPkg_metadata_cache_miss: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_miss: XeSqlPkg_metadata_cache_miss
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
};
		
[dynamic: ToInstance, Description("Event which fires when we're acquiring new messages"): Amended,
    Guid("{B71AE8B9-57CA-49D6-BB7E-0BE0662D0D22}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_get_message"): Amended]
class XeSqlPkg_hadr_transport_get_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_get_message: XeSqlPkg_hadr_transport_get_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Use this event to trace HADR transport messages throughout the system."): Amended,
    Guid("{66D52E25-D8C2-46E4-8CB3-BDEBB1329B9F}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_message"): Amended]
class XeSqlPkg_hadr_transport_dump_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_message: XeSqlPkg_hadr_transport_dump_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(69),
				ValueMap { 
					"2", 
					"1", 
					"0", 
					"3" },
				Values { 
					"Drop", 
					"Recv", 
					"Send", 
					"TypeCount" }
			] uint32 operation;
	[WmiDataId(6), read, 
				XEMapId(70),
				ValueMap { 
					"26", 
					"5", 
					"40", 
					"16", 
					"41", 
					"19", 
					"10", 
					"39", 
					"14", 
					"23", 
					"34", 
					"9", 
					"8", 
					"38", 
					"20", 
					"7", 
					"15", 
					"27", 
					"21", 
					"42", 
					"37", 
					"36", 
					"11", 
					"0", 
					"17", 
					"18", 
					"6", 
					"4", 
					"25", 
					"24", 
					"1", 
					"3", 
					"29", 
					"12", 
					"2", 
					"22", 
					"13", 
					"30", 
					"28", 
					"32", 
					"31", 
					"35", 
					"33" },
				Values { 
					"AckForUnsentMessage", 
					"ArriveAtCaptureApplyLayer", 
					"DuplicatePrimaryConfigMessage", 
					"FailedPartnerCreate", 
					"FailedToProcessPrimaryConfigMsg", 
					"InvalidConfigDbr", 
					"InvalidConfigStateChange", 
					"InvalidDatabaseCopyOperation", 
					"InvalidDbr", 
					"InvalidMessageFormat", 
					"InvalidMessageFormatPartner", 
					"InvalidMessageType", 
					"InvalidReplicaObject", 
					"InvalidReplicaStateForProcessingPrimaryConfigMsg", 
					"InvalidSynSeqNo", 
					"InvalidTransportObject", 
					"InvalidTransportPartnerCreate", 
					"InvalidUnmarshallCall", 
					"MemoryAllocationFailure", 
					"MessageLogReasonCount", 
					"MismatchedLocalArId", 
					"MismatchedPrimaryGeneration", 
					"MismatchedSessionId", 
					"NoReasonSpecified", 
					"NoSessionAvailable", 
					"NullSessionGuid", 
					"PingReceived", 
					"QueuedToPartner", 
					"ReplicaCannotReceiveMessages", 
					"ReplicaDestructing", 
					"ResendDueToUCSSendFailure", 
					"RoutableMessage", 
					"ScanVersionMismatch", 
					"SeqNoOutOfOrder", 
					"SuccessfullyUnmarshalled", 
					"TaskSchedulingFailure", 
					"TraceFlagRandomDrop", 
					"UcsSendFailure", 
					"UnableToAllocate", 
					"UnableToRouteFsMsg", 
					"UnableToRouteLogMsg", 
					"UnsupportedMessageVersion", 
					"UnsupportedPartnerMsgType" }
			] uint32 operation_reason;
	[WmiDataId(7), read] uint64 sequence_number;
	[WmiDataId(8), read] uint64 acknowledgment_number;
	[WmiDataId(9), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(14), read, Extension("Guid")] guid connection_session_id;
	[WmiDataId(15), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Use this event to help trace HADR configuration messages."): Amended,
    Guid("{9E77198D-6F7E-49CA-8F22-D48FF62FA7D5}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_dump_config_message"): Amended]
class XeSqlPkg_hadr_transport_dump_config_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_dump_config_message: XeSqlPkg_hadr_transport_dump_config_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint64 min_version;
	[WmiDataId(7), read] uint64 max_version;
	[WmiDataId(8), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Event which fires when we're processing an incoming message"): Amended,
    Guid("{e5ccfb86-8cc7-412d-ae82-09a6341bf36a}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_route_message"): Amended]
class XeSqlPkg_hadr_transport_route_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_route_message: XeSqlPkg_hadr_transport_route_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("This event occurs when a HADR transport session changes states."): Amended,
    Guid("{20a57777-6ae9-4cf2-871b-c3ca8564c31f}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_session_state"): Amended]
class XeSqlPkg_hadr_transport_session_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_session_state: XeSqlPkg_hadr_transport_session_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(72),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(72),
				ValueMap { 
					"1", 
					"5", 
					"7", 
					"6", 
					"4", 
					"3", 
					"2", 
					"0" },
				Values { 
					"Configuring", 
					"Connected", 
					"Count", 
					"Destructing", 
					"Failure", 
					"FailurePendingSend", 
					"Timeout", 
					"Uninitialized" }
			] uint32 target_state;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates session state changes"): Amended,
    Guid("{e0ff8815-9ae8-4a9a-a05d-bac6a404a697}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_configuration_state"): Amended]
class XeSqlPkg_hadr_transport_configuration_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_configuration_state: XeSqlPkg_hadr_transport_configuration_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(73),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"8" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(73),
				ValueMap { 
					"1", 
					"6", 
					"7", 
					"3", 
					"5", 
					"4", 
					"0", 
					"2", 
					"8" },
				Values { 
					"ConfigRequest", 
					"Configured", 
					"Failure", 
					"LastInitState", 
					"LastRecvState", 
					"ReceivedSyn", 
					"Unconfigured", 
					"WaitingSynAck", 
					"e_stateCount" }
			] uint32 target_state;
};
		
[dynamic: ToInstance, Description("Occurs when the ucs connection id associated with the hadron transport replica is registered or changes."): Amended,
    Guid("{7078acb9-78dd-46fe-920e-c466ff1c2cd9}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_ucs_connection_info"): Amended]
class XeSqlPkg_hadr_transport_ucs_connection_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_ucs_connection_info: XeSqlPkg_hadr_transport_ucs_connection_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid target_availability_replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ucs_connection_id;
};
		
[dynamic: ToInstance, Description("Indicates that a flow control action has occured for a particular replica."): Amended,
    Guid("{6A63DDD1-080C-41F7-9009-E354B4DD165D}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_flow_control_action"): Amended]
class XeSqlPkg_hadr_transport_flow_control_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_flow_control_action: XeSqlPkg_hadr_transport_flow_control_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(75),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Cleared", 
					"Set" }
			] uint32 control_action;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid target_availability_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates the moment before the loop of sending primary replica info."): Amended,
    Guid("{FF504B64-F8F0-4E22-8C8C-E7D4E0C3D9A9}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_sending_primary_info"): Amended]
class XeSqlPkg_hadr_transport_replica_before_sending_primary_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_sending_primary_info: XeSqlPkg_hadr_transport_replica_before_sending_primary_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 work_id;
};
		
[dynamic: ToInstance, Description("Indicates that the correponding work has been cancelled."): Amended,
    Guid("{03249DFA-5B1C-45F5-9858-907036AEB8C3}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_send_primary_info_cancelled"): Amended]
class XeSqlPkg_hadr_transport_replica_send_primary_info_cancelled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_send_primary_info_cancelled: XeSqlPkg_hadr_transport_replica_send_primary_info_cancelled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 work_id;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber is about to send build replica message to secondary replica."): Amended,
    Guid("{fdc38bed-3db4-40c2-949f-9c5137f64560}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_sending_build_replica_message_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_before_sending_build_replica_message_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_sending_build_replica_message_on_primary: XeSqlPkg_hadr_transport_replica_before_sending_build_replica_message_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid partition_id;
	[WmiDataId(6), read, Extension("Guid")] guid replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid db_guid;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber sent build replica message and waiting for response from the secondary replica."): Amended,
    Guid("{a5f703ff-dced-4162-bd44-45f5c2dab9c2}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_after_sending_build_replica_message_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_after_sending_build_replica_message_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_after_sending_build_replica_message_on_primary: XeSqlPkg_hadr_transport_replica_after_sending_build_replica_message_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid partition_id;
	[WmiDataId(6), read, Extension("Guid")] guid replica_id;
	[WmiDataId(7), read, Extension("Guid")] guid db_guid;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Fabric DBR Subscriber on primary is about to process build replica message response from secondary replica."): Amended,
    Guid("{0b8a83c9-bd6a-4860-a8bd-9f3b8fcdc764}"), locale("MS\\0x409"),
    DisplayName("hadr_transport_replica_before_build_replica_response_processing_on_primary"): Amended]
class XeSqlPkg_hadr_transport_replica_before_build_replica_response_processing_on_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_transport_replica_before_build_replica_response_processing_on_primary: XeSqlPkg_hadr_transport_replica_before_build_replica_response_processing_on_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 result_of_build_replica_operation;
	[WmiDataId(6), read, Extension("Guid")] guid partition_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid db_guid;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("Indicates that a flow control action has occured for a particular dbr/replica."): Amended,
    Guid("{7E82C899-BADA-4F90-A61F-8595636ADF08}"), locale("MS\\0x409"),
    DisplayName("hadr_database_flow_control_action"): Amended]
class XeSqlPkg_hadr_database_flow_control_action: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_database_flow_control_action: XeSqlPkg_hadr_database_flow_control_action
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(75),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Cleared", 
					"Set" }
			] uint32 control_action;
	[WmiDataId(6), read] uint64 duration;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid local_availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Indicates db_manager state changes."): Amended,
    Guid("{40E2DF52-E197-4182-8E41-836AAFD66E05}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_state"): Amended]
class XeSqlPkg_hadr_db_manager_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_state: XeSqlPkg_hadr_db_manager_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(81),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(81),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 proposed_state;
	[WmiDataId(8), read, 
				XEMapId(81),
				ValueMap { 
					"0", 
					"6", 
					"3", 
					"1", 
					"5", 
					"4", 
					"2" },
				Values { 
					"Created", 
					"Invalid", 
					"Started", 
					"Starting", 
					"Stopped", 
					"Stopping", 
					"Undo" }
			] uint32 target_state;
	[WmiDataId(9), read, 
				XEMapId(82),
				ValueMap { 
					"0", 
					"5", 
					"4", 
					"6", 
					"2", 
					"1", 
					"3" },
				Values { 
					"DbMgr", 
					"Filestream", 
					"FullText", 
					"Invalid", 
					"Redo", 
					"Scans", 
					"Users" }
			] uint32 dbmgr_object_type;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Indicates db_manager api calls."): Amended,
    Guid("{8E165799-A703-4e95-A66D-9E1B05ADD38E}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_api"): Amended]
class XeSqlPkg_hadr_db_manager_api: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_api: XeSqlPkg_hadr_db_manager_api
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(85),
				ValueMap { 
					"1", 
					"0" },
				Values { 
					"Entry", 
					"Exit" }
			] uint32 entry_exit;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(10), read, StringTermination("NullTerminated")] string api_function;
};
		
[dynamic: ToInstance, Description("LSN Sync message."): Amended,
    Guid("{7F013499-A0D4-47cf-9870-EE40B5EB4D24}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_lsn_sync_msg"): Amended]
class XeSqlPkg_hadr_db_manager_lsn_sync_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_lsn_sync_msg: XeSqlPkg_hadr_db_manager_lsn_sync_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string flushed_log;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string end_of_log;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string redo_point;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_truncation_block;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string hadr_truncation_block;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string recovery_point;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string sync_hardened_point;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string minimum_skip_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_skip_lsn;
};
		
[dynamic: ToInstance, Description("Establish DB message."): Amended,
    Guid("{3CACAB94-DCA2-4339-959E-ABA20799A2B4}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_establish_db_msg"): Amended]
class XeSqlPkg_hadr_db_manager_establish_db_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_establish_db_msg: XeSqlPkg_hadr_db_manager_establish_db_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(83),
				ValueMap { 
					"4", 
					"3", 
					"1", 
					"0", 
					"2" },
				Values { 
					"COUNT", 
					"INVALID", 
					"PRIMARY", 
					"RESOLVING", 
					"SECONDARY" }
			] uint32 msg_source;
	[WmiDataId(6), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string flushed_log;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string end_of_log;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string recovery_point;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string log_truncation_block;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string hadr_truncation_block;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string log_backup_lsn;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string minimum_skip_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string redo_point;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string redo_time;
};
		
[dynamic: ToInstance, Description("DBReplicaStatusChange message."): Amended,
    Guid("{D2185D4C-BEC7-4E9E-9CCD-E8D643126C19}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_status_change"): Amended]
class XeSqlPkg_hadr_db_manager_status_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_status_change: XeSqlPkg_hadr_db_manager_status_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(74),
				ValueMap { 
					"0", 
					"1", 
					"7", 
					"2", 
					"4", 
					"3", 
					"5", 
					"6" },
				Values { 
					"Remove_for_Disjoin", 
					"Remove_for_JoinError", 
					"Resume_Replica", 
					"Start_Replica", 
					"Start_Scan", 
					"Stop_Replica", 
					"Stop_Scan", 
					"Suspend_Replica" }
			] uint32 reason;
	[WmiDataId(6), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Redo processing on secondary."): Amended,
    Guid("{6A38107C-BDE7-4fbd-BE73-DAFB83452CDB}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_redo"): Amended]
class XeSqlPkg_hadr_db_manager_redo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_redo: XeSqlPkg_hadr_db_manager_redo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read] uint64 log_truncation_block;
	[WmiDataId(9), read] uint64 hadr_truncation_block;
	[WmiDataId(10), read] uint64 redo_point;
	[WmiDataId(11), read, Extension("Guid")] guid group_id;
	[WmiDataId(12), read, Extension("Guid")] guid replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Undo processing on secondary."): Amended,
    Guid("{FC1E0CD0-B22B-413e-9B0E-F429AD709A73}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_undo"): Amended]
class XeSqlPkg_hadr_db_manager_undo: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_undo: XeSqlPkg_hadr_db_manager_undo
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read] uint64 log_truncation_block;
	[WmiDataId(9), read] uint64 hadr_truncation_block;
	[WmiDataId(10), read] uint64 recovery_point;
	[WmiDataId(11), read] uint64 undo_scan;
	[WmiDataId(12), read] uint64 undo_safe_block;
	[WmiDataId(13), read] uint64 undo_pageid;
	[WmiDataId(14), read, 
				XEMapId(89),
				ValueMap { 
					"0", 
					"3", 
					"1", 
					"2" },
				Values { 
					"Entry", 
					"Exit", 
					"Scanning", 
					"Snip_Log" }
			] uint32 undo_phase;
	[WmiDataId(15), read, Extension("Guid")] guid group_id;
	[WmiDataId(16), read, Extension("Guid")] guid replica_id;
	[WmiDataId(17), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Queue restart hadron datadabase."): Amended,
    Guid("{0E32F844-4211-4d2c-8FA8-77A4B599A0EB}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_queue_restart"): Amended]
class XeSqlPkg_hadr_db_manager_db_queue_restart: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_queue_restart: XeSqlPkg_hadr_db_manager_db_queue_restart
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, 
				XEMapId(86),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 log_accept;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Start hadron database."): Amended,
    Guid("{CB74D4F8-AE16-428e-A991-6F5177A80797}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_startdb"): Amended]
class XeSqlPkg_hadr_db_manager_db_startdb: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_startdb: XeSqlPkg_hadr_db_manager_db_startdb
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(86),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 log_accept;
	[WmiDataId(7), read, Extension("Guid")] guid group_id;
	[WmiDataId(8), read, Extension("Guid")] guid replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Shutdown hadron datadabase."): Amended,
    Guid("{1C67AACE-C013-4e22-9C41-DCB71E431B88}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_shutdown"): Amended]
class XeSqlPkg_hadr_db_manager_db_shutdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_shutdown: XeSqlPkg_hadr_db_manager_db_shutdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change user status for a hadron controlled database."): Amended,
    Guid("{0DAA8493-6904-4ae3-93AC-A4DAFAFD793D}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_user_control"): Amended]
class XeSqlPkg_hadr_db_manager_user_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_user_control: XeSqlPkg_hadr_db_manager_user_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(86),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 users_status;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change log scan status for a hadron controlled database."): Amended,
    Guid("{97A9CD48-8F3B-4430-8D77-BF043C329122}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_redo_control"): Amended]
class XeSqlPkg_hadr_db_manager_redo_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_redo_control: XeSqlPkg_hadr_db_manager_redo_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(86),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 redo_status;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string stopat;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change log scan status for a hadron controlled database."): Amended,
    Guid("{D72645CD-A9EC-448e-82F9-835D66575378}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_scan_control"): Amended]
class XeSqlPkg_hadr_db_manager_scan_control: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_scan_control: XeSqlPkg_hadr_db_manager_scan_control
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(86),
				ValueMap { 
					"0", 
					"2", 
					"1" },
				Values { 
					"Disable", 
					"Enable", 
					"Suspend" }
			] uint32 scan_status;
	[WmiDataId(7), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 shutdown_type;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Change suspend/resume status for a hadron controlled database."): Amended,
    Guid("{1114F3DB-74D9-4135-9B8F-DAB68E0AD61F}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_suspend_resume"): Amended]
class XeSqlPkg_hadr_db_manager_suspend_resume: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_suspend_resume: XeSqlPkg_hadr_db_manager_suspend_resume
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(87),
				ValueMap { 
					"1", 
					"0", 
					"2", 
					"3" },
				Values { 
					"RESUMED", 
					"SUSPEND_NULL", 
					"SUSPENDED", 
					"SUSPENDED_INVALID" }
			] uint32 suspend_status;
	[WmiDataId(7), read, 
				XEMapId(88),
				ValueMap { 
					"4", 
					"3", 
					"9", 
					"-1", 
					"1", 
					"2", 
					"5", 
					"7", 
					"6", 
					"0", 
					"8" },
				Values { 
					"APPLY", 
					"CAPTURE", 
					"Count", 
					"NULL", 
					"PARTNER", 
					"REDO", 
					"RESTART", 
					"REVALIDATION", 
					"UNDO", 
					"USER", 
					"XRF_UPDATE" }
			] uint32 suspend_source;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Restart hadron database."): Amended,
    Guid("{D2A159B7-0673-4c47-B59F-F8BFFE6A6475}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_db_restart"): Amended]
class XeSqlPkg_hadr_db_manager_db_restart: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_db_restart: XeSqlPkg_hadr_db_manager_db_restart
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 flushed_log;
	[WmiDataId(7), read] uint64 end_of_log;
	[WmiDataId(8), read, 
				XEMapId(84),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Clean", 
					"Immediate" }
			] uint32 clean_shutdown;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Before scheduling a task into worker pool."): Amended,
    Guid("{73a8224d-95ac-4194-aaff-c1e5e390cb40}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_before_schedule_task"): Amended]
class XeSqlPkg_hadr_worker_pool_before_schedule_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_before_schedule_task: XeSqlPkg_hadr_worker_pool_before_schedule_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  task_id;
};
		
[dynamic: ToInstance, Description("HADRON worker pool thread actions."): Amended,
    Guid("{82D56312-9EE3-4829-89F2-99AE924FE224}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_thread"): Amended]
class XeSqlPkg_hadr_worker_pool_thread: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_thread: XeSqlPkg_hadr_worker_pool_thread
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_id;
	[WmiDataId(6), read] uint32 status;
	[WmiDataId(7), read, 
				XEMapId(91),
				ValueMap { 
					"7", 
					"8", 
					"0", 
					"6", 
					"1", 
					"4", 
					"5", 
					"3", 
					"2" },
				Values { 
					"Aborted", 
					"Completed", 
					"Created", 
					"Executing", 
					"Initialized", 
					"OnDispatcherQueue", 
					"OnRedundantQueue", 
					"OnResourceQueue", 
					"OnTimerQueue" }
			] uint32 action;
};
		
[dynamic: ToInstance, Description("HADRON worker pool task actions."): Amended,
    Guid("{8FAA8A13-B7AD-494e-A4BC-944C7C743019}"), locale("MS\\0x409"),
    DisplayName("hadr_worker_pool_task"): Amended]
class XeSqlPkg_hadr_worker_pool_task: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_worker_pool_task: XeSqlPkg_hadr_worker_pool_task
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  task_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read] uint32 wait_time;
	[WmiDataId(9), read, 
				XEMapId(90),
				ValueMap { 
					"8", 
					"10", 
					"31", 
					"21", 
					"20", 
					"26", 
					"24", 
					"23", 
					"29", 
					"22", 
					"28", 
					"30", 
					"27", 
					"25", 
					"0", 
					"4", 
					"3", 
					"17", 
					"2", 
					"13", 
					"12", 
					"7", 
					"14", 
					"19", 
					"15", 
					"32", 
					"16", 
					"11", 
					"18", 
					"6", 
					"5", 
					"1", 
					"9" },
				Values { 
					"ArMgrDbOp", 
					"ArMgrDbSerializedAccess", 
					"AsyncOpAbort", 
					"AsyncOpAdminNotifyWorker", 
					"AsyncOpAdminSimpleWorker", 
					"AsyncOpBuildSecondary", 
					"AsyncOpChangeRole", 
					"AsyncOpClose", 
					"AsyncOpGetBeginEndLsns", 
					"AsyncOpOpen", 
					"AsyncOpQuorumCatchUp", 
					"AsyncOpRemoveReplica", 
					"AsyncOpUpdateConfiguration", 
					"AsyncOpUpdateEpoch", 
					"Base", 
					"BuildMsgAndSend", 
					"Conversation", 
					"DbCopyMsg", 
					"DbMsg", 
					"DbRedo", 
					"DbRestart", 
					"EndpointChange", 
					"EvalReadonlyRoutingInfo", 
					"FirstFabricTaskType", 
					"LogPoolTrunc", 
					"MaxTask", 
					"NewLogReady", 
					"SyncProgress", 
					"Test", 
					"Timer", 
					"TransportNotification", 
					"TransportRouting", 
					"TransportVersioned" }
			] uint32 task_type;
	[WmiDataId(10), read, 
				XEMapId(91),
				ValueMap { 
					"7", 
					"8", 
					"0", 
					"6", 
					"1", 
					"4", 
					"5", 
					"3", 
					"2" },
				Values { 
					"Aborted", 
					"Completed", 
					"Created", 
					"Executing", 
					"Initialized", 
					"OnDispatcherQueue", 
					"OnRedundantQueue", 
					"OnResourceQueue", 
					"OnTimerQueue" }
			] uint32 task_state;
};
		
[dynamic: ToInstance, Description("HADRON thread pool worker thread start actions."): Amended,
    Guid("{3df30504-9242-49d4-ad38-0d7c729436a3}"), locale("MS\\0x409"),
    DisplayName("hadr_thread_pool_worker_start"): Amended]
class XeSqlPkg_hadr_thread_pool_worker_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_thread_pool_worker_start: XeSqlPkg_hadr_thread_pool_worker_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 worker_limit;
	[WmiDataId(6), read] uint32 idle_workers;
	[WmiDataId(7), read] uint32 active_workers;
	[WmiDataId(8), read] sint8  worker_start_success;
};
		
[dynamic: ToInstance, Description("Page Request/Response between servers."): Amended,
    Guid("{DF3348E0-CB85-4c1b-8AB9-FB6ABD9B2589}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_page_request"): Amended]
class XeSqlPkg_hadr_db_manager_page_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_page_request: XeSqlPkg_hadr_db_manager_page_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read] uint32 status;
	[WmiDataId(9), read] uint32 read_ahead_count;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string minimum_lsn;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string page_lsn;
};
		
[dynamic: ToInstance, Description("Update the hardened LSN for a HADR database."): Amended,
    Guid("{1A81638F-8C50-4335-B45F-930276CC96FF}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_update_harden"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_update_harden: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_update_harden: XeSqlPkg_hadr_db_commit_mgr_update_harden
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read] uint32 delay;
	[WmiDataId(8), read] uint64 prior_hardened_log_block;
	[WmiDataId(9), read] uint64 new_hardened_log_block;
	[WmiDataId(10), read, 
				XEMapId(93),
				ValueMap { 
					"3", 
					"2", 
					"0", 
					"1" },
				Values { 
					"MaxHardenStatus", 
					"MinSyncCommitFailure", 
					"NoCommitFailure", 
					"QuorumCommitFailure" }
			] uint32 harden_status;
	[WmiDataId(11), read, Extension("Guid")] guid group_id;
	[WmiDataId(12), read, Extension("Guid")] guid replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit harden still waiting for Hadron Commit management."): Amended,
    Guid("{E1F05761-6181-4fef-974D-3F606CD6EC82}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_harden_still_waiting"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_harden_still_waiting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_harden_still_waiting: XeSqlPkg_hadr_db_commit_mgr_harden_still_waiting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 wait_time;
	[WmiDataId(7), read] uint64 wait_log_block;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit harden result from Hadron Commit management."): Amended,
    Guid("{E34A2983-49EF-4ef8-B38C-392D7767F58F}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_harden"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_harden: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_harden: XeSqlPkg_hadr_db_commit_mgr_harden
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read] uint32 delay;
	[WmiDataId(8), read] uint64 time_to_commit;
	[WmiDataId(9), read] uint32 result;
	[WmiDataId(10), read] uint32 valid_lease;
	[WmiDataId(11), read] uint64 wait_log_block;
	[WmiDataId(12), read] uint64 hardened_log_block;
	[WmiDataId(13), read, Extension("Guid")] guid group_id;
	[WmiDataId(14), read, Extension("Guid")] guid replica_id;
	[WmiDataId(15), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Transaction Commit manager policy update."): Amended,
    Guid("{5D0B76DC-D138-4818-9AEA-809AF0EB8C05}"), locale("MS\\0x409"),
    DisplayName("hadr_db_commit_mgr_set_policy"): Amended]
class XeSqlPkg_hadr_db_commit_mgr_set_policy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_commit_mgr_set_policy: XeSqlPkg_hadr_db_commit_mgr_set_policy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read] uint32 delay;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("HADR partner commit policy update."): Amended,
    Guid("{0504B9FF-A4FA-4193-BF93-F4EAE312B6CD}"), locale("MS\\0x409"),
    DisplayName("hadr_db_partner_set_policy"): Amended]
class XeSqlPkg_hadr_db_partner_set_policy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_partner_set_policy: XeSqlPkg_hadr_db_partner_set_policy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy_target;
	[WmiDataId(8), read] uint32 delay;
	[WmiDataId(9), read, Extension("Guid")] guid group_id;
	[WmiDataId(10), read, Extension("Guid")] guid replica_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("HADR partner sync state change."): Amended,
    Guid("{38625C7B-1DB9-4fb3-B637-3E5FA24FB6C3}"), locale("MS\\0x409"),
    DisplayName("hadr_db_partner_set_sync_state"): Amended]
class XeSqlPkg_hadr_db_partner_set_sync_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_partner_set_sync_state: XeSqlPkg_hadr_db_partner_set_sync_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy;
	[WmiDataId(7), read, 
				XEMapId(92),
				ValueMap { 
					"4", 
					"1", 
					"0", 
					"3", 
					"2" },
				Values { 
					"ArrayLast", 
					"Delay", 
					"DoNothing", 
					"KillAll", 
					"WaitForHarden" }
			] uint32 commit_policy_target;
	[WmiDataId(8), read, 
				XEMapId(94),
				ValueMap { 
					"128", 
					"12", 
					"4", 
					"1", 
					"0", 
					"8", 
					"2" },
				Values { 
					"INVALID", 
					"LAST", 
					"LOG", 
					"NOT", 
					"NOT_JOINED", 
					"REDO", 
					"SUSPENDED" }
			] uint32 sync_state;
	[WmiDataId(9), read] uint64 sync_log_block;
	[WmiDataId(10), read, Extension("Guid")] guid group_id;
	[WmiDataId(11), read, Extension("Guid")] guid replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Db Mgr."): Amended,
    Guid("{38755635-1EEC-4fa7-9BA2-B75449033691}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_test_point"): Amended]
class XeSqlPkg_hadr_db_manager_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_test_point: XeSqlPkg_hadr_db_manager_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(98),
				ValueMap { 
					"13", 
					"6", 
					"5", 
					"1", 
					"2", 
					"3", 
					"4", 
					"10", 
					"9", 
					"7", 
					"8", 
					"12", 
					"11", 
					"25", 
					"0", 
					"24", 
					"23", 
					"14", 
					"18", 
					"17", 
					"20", 
					"19", 
					"22", 
					"21", 
					"16", 
					"15" },
				Values { 
					"Test_Point_DisJoin_BackupLSNs", 
					"Test_Point_EstablishDB_Recv", 
					"Test_Point_EstablishDB_Send", 
					"Test_Point_File_Header_Update", 
					"Test_Point_File_Header_Update_FileStream", 
					"Test_Point_File_Header_Update_FullText", 
					"Test_Point_File_Header_Update_FullText_Metadata_In_Master", 
					"Test_Point_Join_Boot_Page_Update_After", 
					"Test_Point_Join_Boot_Page_Update_Before", 
					"Test_Point_Join_File_Header_Update", 
					"Test_Point_Join_File_Header_Update_FileStream", 
					"Test_Point_Join_MD_Commit_After", 
					"Test_Point_Join_MD_Commit_Before", 
					"Test_Point_Last", 
					"Test_Point_NULL", 
					"Test_Point_Persist_AG_Config_After", 
					"Test_Point_Persist_AG_Config_Before", 
					"Test_Point_Undo_ProcessPage", 
					"Test_Point_Update_AG_DB_After", 
					"Test_Point_Update_AG_DB_Before", 
					"Test_Point_Update_AG_DB_Replica_After", 
					"Test_Point_Update_AG_DB_Replica_Before", 
					"Test_Point_Update_AG_DB_Replica_No_Commit_After", 
					"Test_Point_Update_AG_DB_Replica_No_Commit_Before", 
					"Test_Point_Update_Suspend_Resume_After", 
					"Test_Point_Update_Suspend_Resume_Before" }
			] uint32 test_point;
	[WmiDataId(6), read] uint64 test_value1;
	[WmiDataId(7), read] uint64 test_value2;
	[WmiDataId(8), read, Extension("Guid")] guid group_id;
	[WmiDataId(9), read, Extension("Guid")] guid replica_id;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Undo Mgr."): Amended,
    Guid("{1FE3D275-585D-454C-A195-9427B681C3C5}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_manager_test_point"): Amended]
class XeSqlPkg_hadr_undo_manager_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_manager_test_point: XeSqlPkg_hadr_undo_manager_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(99),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"9", 
					"8", 
					"1", 
					"2", 
					"4", 
					"10", 
					"0", 
					"7" },
				Values { 
					"Test_Point_After_Laying_Down_VLF_Header", 
					"Test_Point_After_Physical_File_Create", 
					"Test_Point_After_Physical_File_Grow", 
					"Test_Point_After_Recreating_Log_File", 
					"Test_Point_After_Syncing_Logs", 
					"Test_Point_After_Undo_LSN_Set", 
					"Test_Point_Before_DBInfo_Update", 
					"Test_Point_Before_Physical_File_Shrink", 
					"Test_Point_Last", 
					"Test_Point_NULL", 
					"Test_Point_Scan_Passed_Failover_LSN" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Backup On Secondary."): Amended,
    Guid("{FFC5AC26-43E5-4C18-AE11-FEDAC6183244}"), locale("MS\\0x409"),
    DisplayName("hadr_backup_on_sec_test_point"): Amended]
class XeSqlPkg_hadr_backup_on_sec_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_backup_on_sec_test_point: XeSqlPkg_hadr_backup_on_sec_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(100),
				ValueMap { 
					"4", 
					"5", 
					"6", 
					"2", 
					"8", 
					"1", 
					"3", 
					"0", 
					"7" },
				Values { 
					"Test_Point_Backup_File_Closed", 
					"Test_Point_Before_Commit_On_Primary", 
					"Test_Point_Before_Lock_Release", 
					"Test_Point_Init_Info_Sent_From_Primary", 
					"Test_Point_Last", 
					"Test_Point_Lock_Taken_On_Primary", 
					"Test_Point_Lock_Taken_On_Secondary", 
					"Test_Point_NULL", 
					"Test_Point_Within_Data_Backup" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Test point for failure injection in Hadr Auto Page Repair."): Amended,
    Guid("{9A40000D-52E5-46FC-B028-580C47512820}"), locale("MS\\0x409"),
    DisplayName("hadr_auto_page_repair_test_point"): Amended]
class XeSqlPkg_hadr_auto_page_repair_test_point: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_auto_page_repair_test_point: XeSqlPkg_hadr_auto_page_repair_test_point
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(107),
				ValueMap { 
					"7", 
					"3", 
					"2", 
					"1", 
					"5", 
					"8", 
					"4", 
					"6", 
					"9", 
					"10", 
					"0" },
				Values { 
					"Test_Point_Before_Clearing_Suspect_Entry", 
					"Test_Point_Before_Fixing_Page", 
					"Test_Point_Before_Page_Recorded", 
					"Test_Point_Before_Request_Sent", 
					"Test_Point_Before_Restarting_DB", 
					"Test_Point_Before_Restore_Pending_Reset", 
					"Test_Point_Before_Sending_Page_Back", 
					"Test_Point_Before_Suspending_DB", 
					"Test_Point_In_Getting_Corrupted_Page", 
					"Test_Point_Last", 
					"Test_Point_NULL" }
			] uint32 test_point;
	[WmiDataId(6), read, Extension("Guid")] guid group_id;
	[WmiDataId(7), read, Extension("Guid")] guid replica_id;
	[WmiDataId(8), read, Extension("Guid")] guid ag_database_id;
};
		
[dynamic: ToInstance, Description("Amount of log scanned in Undo of Redo and Total log need to be scanned."): Amended,
    Guid("{64AD24E9-255E-4B28-B74F-5C374FA41A1C}"), locale("MS\\0x409"),
    DisplayName("hadr_undo_of_redo_log_scan"): Amended]
class XeSqlPkg_hadr_undo_of_redo_log_scan: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_undo_of_redo_log_scan: XeSqlPkg_hadr_undo_of_redo_log_scan
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 Log_Remaining;
	[WmiDataId(6), read] uint64 Total_Log;
};
		
[dynamic: ToInstance, Description("File Metadata Request/Response between servers."): Amended,
    Guid("{0512DF7C-023C-4c8d-94E7-275053726787}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_filemetadata_request"): Amended]
class XeSqlPkg_hadr_db_manager_filemetadata_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_filemetadata_request: XeSqlPkg_hadr_db_manager_filemetadata_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read, 
				XEMapId(95),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Data", 
					"Log" }
			] uint32 file_type;
	[WmiDataId(8), read] uint32 status;
	[WmiDataId(9), read] uint32 file_count;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Hit/miss ratio for the compressed log block cache."): Amended,
    Guid("{0A9F6D4F-FDB0-451F-B642-F55F7B51FEE9}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_compressed_log_cache"): Amended]
class XeSqlPkg_hadr_capture_compressed_log_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_compressed_log_cache: XeSqlPkg_hadr_capture_compressed_log_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 hits;
	[WmiDataId(7), read] uint32 misses;
	[WmiDataId(8), read] uint32 insert_misses;
};
		
[dynamic: ToInstance, Description("Backup Sync message."): Amended,
    Guid("{5CEDCF0A-8430-4148-9009-E8B183DE4A04}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_backup_sync_msg"): Amended]
class XeSqlPkg_hadr_db_manager_backup_sync_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_backup_sync_msg: XeSqlPkg_hadr_db_manager_backup_sync_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 message_sub_type;
	[WmiDataId(7), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Backup Info message."): Amended,
    Guid("{C7E933BF-A40E-4ED4-9527-D2D5C80E0054}"), locale("MS\\0x409"),
    DisplayName("hadr_db_manager_backup_info_msg"): Amended]
class XeSqlPkg_hadr_db_manager_backup_info_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_db_manager_backup_info_msg: XeSqlPkg_hadr_db_manager_backup_info_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(71),
				ValueMap { 
					"31", 
					"32", 
					"25", 
					"24", 
					"3", 
					"4", 
					"1", 
					"2", 
					"34", 
					"19", 
					"8", 
					"28", 
					"27", 
					"16", 
					"15", 
					"20", 
					"21", 
					"23", 
					"22", 
					"0", 
					"9", 
					"18", 
					"17", 
					"11", 
					"14", 
					"13", 
					"6", 
					"30", 
					"12", 
					"29", 
					"7", 
					"5", 
					"26", 
					"33", 
					"10" },
				Values { 
					"HadrMsgTypeAutoSeedingDataMsg", 
					"HadrMsgTypeAutoSeedingProgressMsg", 
					"HadrMsgTypeBackupInfoMsg", 
					"HadrMsgTypeBackupSyncMsg", 
					"HadrMsgTypeConfigAck", 
					"HadrMsgTypeConfigFail", 
					"HadrMsgTypeConfigSyn", 
					"HadrMsgTypeConfigSynAck", 
					"HadrMsgTypeCount", 
					"HadrMsgTypeDBReplicaStatusChange", 
					"HadrMsgTypeEstablishDB", 
					"HadrMsgTypeExtendedRecoveryForksMsg", 
					"HadrMsgTypeExtendedRecoveryForksRequestMsg", 
					"HadrMsgTypeFileMetadataMsg", 
					"HadrMsgTypeFileMetadataRequestMsg", 
					"HadrMsgTypeFsBlockEndMsg", 
					"HadrMsgTypeFsDirCreateMsg", 
					"HadrMsgTypeFsFileDataMsg", 
					"HadrMsgTypeFsFileRequestMsg", 
					"HadrMsgTypeInvalid", 
					"HadrMsgTypeLogBlockMsg", 
					"HadrMsgTypeLogFileMetadataMsg", 
					"HadrMsgTypeLogFileMetadataRequestMsg", 
					"HadrMsgTypeLogProgressMsg", 
					"HadrMsgTypePageCopyMsg", 
					"HadrMsgTypePageRequestMsg", 
					"HadrMsgTypePing", 
					"HadrMsgTypePreConfigMsg", 
					"HadrMsgTypePrimaryProgressMsg", 
					"HadrMsgTypePrimaryReplicaInfoMsg", 
					"HadrMsgTypePrimarySync", 
					"HadrMsgTypeReset", 
					"HadrMsgTypeSyncLogProgressMsg", 
					"HadrMsgTypeTestConfigMsg", 
					"HadrMsgTypeVLFHeaderMsg" }
			] uint32 message_type;
	[WmiDataId(6), read] uint32 message_sub_type;
	[WmiDataId(7), read] uint32 status;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string backup_lsn;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string oldest_xact_lsn;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string min_skip_lsn;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport opens a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06500}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_open"): Amended]
class XeSqlPkg_hadr_filestream_file_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_open: XeSqlPkg_hadr_filestream_file_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(96),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport closes a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06501}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_close"): Amended]
class XeSqlPkg_hadr_filestream_file_close: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_close: XeSqlPkg_hadr_filestream_file_close
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(96),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport finds relevant log records when interpreting log."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06502}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_log_interpreter"): Amended]
class XeSqlPkg_hadr_filestream_log_interpreter: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_log_interpreter: XeSqlPkg_hadr_filestream_log_interpreter
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 total_records;
	[WmiDataId(7), read] uint32 filestream_chunk_records;
	[WmiDataId(8), read] uint32 transaction_abort_records;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport has completed processing a log block."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06503}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_processed_block"): Amended]
class XeSqlPkg_hadr_filestream_processed_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_processed_block: XeSqlPkg_hadr_filestream_processed_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport creates a directory."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06504}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_directory_create"): Amended]
class XeSqlPkg_hadr_filestream_directory_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_directory_create: XeSqlPkg_hadr_filestream_directory_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string directory_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport detects message corruption."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06505}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_corrupt_message"): Amended]
class XeSqlPkg_hadr_filestream_corrupt_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_corrupt_message: XeSqlPkg_hadr_filestream_corrupt_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string error_message;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a block end message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06506}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_block_end"): Amended]
class XeSqlPkg_hadr_filestream_message_block_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_block_end: XeSqlPkg_hadr_filestream_message_block_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read, 
				XEMapId(97),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"MODE_INVALID", 
					"MODE_READ", 
					"MODE_WRITE" }
			] uint32 transfer_type;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a directory create message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06507}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_dir_create"): Amended]
class XeSqlPkg_hadr_filestream_message_dir_create: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_dir_create: XeSqlPkg_hadr_filestream_message_dir_create
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string directory_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a file write message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06508}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_file_write"): Amended]
class XeSqlPkg_hadr_filestream_message_file_write: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_file_write: XeSqlPkg_hadr_filestream_message_file_write
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read] uint64 data_offset;
	[WmiDataId(10), read] uint64 data_size;
	[WmiDataId(11), read] uint16 data_flags;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport flushes a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA06509}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_flush"): Amended]
class XeSqlPkg_hadr_filestream_file_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_flush: XeSqlPkg_hadr_filestream_file_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read, 
				XEMapId(96),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"INVALID", 
					"READ", 
					"WRITE" }
			] uint32 open_mode;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport sets end of a file."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650A}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_file_set_eof"): Amended]
class XeSqlPkg_hadr_filestream_file_set_eof: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_file_set_eof: XeSqlPkg_hadr_filestream_file_set_eof
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
	[WmiDataId(6), read] uint64 file_size;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport detects inplace update to undo."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650B}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_undo_inplace_update"): Amended]
class XeSqlPkg_hadr_filestream_undo_inplace_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_undo_inplace_update: XeSqlPkg_hadr_filestream_undo_inplace_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 root_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string transaction_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs when HADR FileStream transport traces a file write message."): Amended,
    Guid("{3620FA1D-853A-475a-BC37-BCF48EA0650C}"), locale("MS\\0x409"),
    DisplayName("hadr_filestream_message_file_request"): Amended]
class XeSqlPkg_hadr_filestream_message_file_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_filestream_message_file_request: XeSqlPkg_hadr_filestream_message_file_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 sequence_number;
	[WmiDataId(6), read] uint64 scan_generation;
	[WmiDataId(7), read] uint32 message_size;
	[WmiDataId(8), read] sint32 root_id;
	[WmiDataId(9), read] sint8  eol_requested;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier status."): Amended,
    Guid("{b20e673e-abef-4c6c-a1ab-02a34c48529e}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_status"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_status: XeSqlPkg_hadr_wsfc_change_notifier_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(27),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"Starting", 
					"WaitingForClusterAvailability", 
					"WaitingForNodeAvailability", 
					"WaitingForNodeOnline", 
					"Running", 
					"WaitingForEvent", 
					"Stopping", 
					"Stopped" }
			] uint32 current_status;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier starts receiving Availability Group specific notifications."): Amended,
    Guid("{dc686069-1cd1-4671-aaeb-4685eb4898c0}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_start_ag_specific_notifications"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_start_ag_specific_notifications: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_start_ag_specific_notifications: XeSqlPkg_hadr_wsfc_change_notifier_start_ag_specific_notifications
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 notification_key;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier encountered a severe error and will terminate."): Amended,
    Guid("{8f162c44-d6fd-4207-b29e-528dca92a499}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_severe_error"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_severe_error: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_severe_error: XeSqlPkg_hadr_wsfc_change_notifier_severe_error
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 error_number;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier received a cluster notification."): Amended,
    Guid("{d191468f-2130-4b65-81bc-421b3435e08c}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_event_received"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_event_received: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_event_received: XeSqlPkg_hadr_wsfc_change_notifier_event_received
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 notify_type;
	[WmiDataId(6), read] uint64 notify_key;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering will bring an availability group listener resource online."): Amended,
    Guid("{B1EA6391-1AF3-4B7C-8D5F-6C2A5F35E77F}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_bring_ag_listener_online"): Amended]
class XeSqlPkg_hadr_wsfc_bring_ag_listener_online: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_bring_ag_listener_online: XeSqlPkg_hadr_wsfc_bring_ag_listener_online
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("HADR is about to rollback availability group listener WSFC resource changes."): Amended,
    Guid("{6AC02B3B-A78B-4908-8BE0-4DB6C72BE9EC}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_rollback_ag_listener_change"): Amended]
class XeSqlPkg_hadr_wsfc_rollback_ag_listener_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_rollback_ag_listener_change: XeSqlPkg_hadr_wsfc_rollback_ag_listener_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("HADR set the WSFC dependency between an availability group and its listener resource object."): Amended,
    Guid("{51FD536D-F3A4-4F50-8A77-95DEF5D7EE6F}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_update_ag_listener_dependency"): Amended]
class XeSqlPkg_hadr_wsfc_update_ag_listener_dependency: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_update_ag_listener_dependency: XeSqlPkg_hadr_wsfc_update_ag_listener_dependency
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string dependency_expression;
};
		
[dynamic: ToInstance, Description("Could not create a hadron availability group listener."): Amended,
    Guid("{10EEB60A-1F45-4E04-A723-277DE2C3CCD8}"), locale("MS\\0x409"),
    DisplayName("hadr_cannot_create_listener"): Amended]
class XeSqlPkg_hadr_cannot_create_listener: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_cannot_create_listener: XeSqlPkg_hadr_cannot_create_listener
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("The availability group listener TCP/IP port number was modified."): Amended,
    Guid("{52F56F8E-FB9B-4E82-AC6E-51A6890817AF}"), locale("MS\\0x409"),
    DisplayName("hadr_modify_listener_port"): Amended]
class XeSqlPkg_hadr_modify_listener_port: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_modify_listener_port: XeSqlPkg_hadr_modify_listener_port
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 old_port_number;
	[WmiDataId(6), read] uint16 new_port_number;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("Hadron Tds Listener Synchronizer skipped a listener payload because there were no changes since the previous payload."): Amended,
    Guid("{A5B309EC-1C42-4D33-884B-DB74108E6B85}"), locale("MS\\0x409"),
    DisplayName("hadr_tds_synchronizer_payload_skip"): Amended]
class XeSqlPkg_hadr_tds_synchronizer_payload_skip: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_tds_synchronizer_payload_skip: XeSqlPkg_hadr_tds_synchronizer_payload_skip
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string listener_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string dns_name;
};
		
[dynamic: ToInstance, Description("End of API that creates/opens SQL Server instance name to cluster node name map key in the cluster store (registry)."): Amended,
    Guid("{c9de348f-7082-4734-b4a6-e6354438e8c8}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_key_created_opened"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_key_created_opened: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_key_created_opened: XeSqlPkg_hadr_sql_instance_to_node_map_key_created_opened
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_created;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string map_key_name;
};
		
[dynamic: ToInstance, Description("End of API that creates/updates a SQL Server instance to cluster node map entry."): Amended,
    Guid("{00af2579-fce5-4578-855f-e7ef793ef5ce}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_entry_created_updated"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_entry_created_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_entry_created_updated: XeSqlPkg_hadr_sql_instance_to_node_map_entry_created_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string sql_instance_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string cluster_node_name;
};
		
[dynamic: ToInstance, Description("End of API that deletes a SQL Server instance to cluster node map entry."): Amended,
    Guid("{e3a2ea58-bde7-4059-b862-321168fe74ca}"), locale("MS\\0x409"),
    DisplayName("hadr_sql_instance_to_node_map_entry_deleted"): Amended]
class XeSqlPkg_hadr_sql_instance_to_node_map_entry_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_sql_instance_to_node_map_entry_deleted: XeSqlPkg_hadr_sql_instance_to_node_map_entry_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string sql_instance_name;
};
		
[dynamic: ToInstance, Description("HADR Windows Server Failover Clustering change notifier detected that the local cluster node is not online.  Change notifier will terminate."): Amended,
    Guid("{1b540cef-ab57-4aff-88a7-4df6e958ca02}"), locale("MS\\0x409"),
    DisplayName("hadr_wsfc_change_notifier_node_not_online"): Amended]
class XeSqlPkg_hadr_wsfc_change_notifier_node_not_online: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_wsfc_change_notifier_node_not_online: XeSqlPkg_hadr_wsfc_change_notifier_node_not_online
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(78),
				ValueMap { 
					"1", 
					"3", 
					"2", 
					"-1", 
					"0" },
				Values { 
					"ClusterNodeDown", 
					"ClusterNodeJoining", 
					"ClusterNodePaused", 
					"ClusterNodeStateUnknown", 
					"ClusterNodeUp" }
			] sint32 local_node_state;
};
		
[dynamic: ToInstance, Description("First attempt to bring a HADR Availability Group resource online failed.  SQL Server will retry the operation at regular intervals."): Amended,
    Guid("{d9a16085-d896-4c82-808c-639d0a329dc1}"), locale("MS\\0x409"),
    DisplayName("hadr_online_availability_group_first_attempt_failure"): Amended]
class XeSqlPkg_hadr_online_availability_group_first_attempt_failure: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_online_availability_group_first_attempt_failure: XeSqlPkg_hadr_online_availability_group_first_attempt_failure
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_interval_ms;
	[WmiDataId(6), read] uint32 max_retry_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("SQL Server has either exhausted all retry attempts, or Windows Server Failover Cluster has accepted the command to bring a HADR Availability Group resource online."): Amended,
    Guid("{a70bb3b4-0e54-4b8c-a2b8-054b4a072ad1}"), locale("MS\\0x409"),
    DisplayName("hadr_online_availability_group_retry_end"): Amended]
class XeSqlPkg_hadr_online_availability_group_retry_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_online_availability_group_retry_end: XeSqlPkg_hadr_online_availability_group_retry_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 retry_interval_ms;
	[WmiDataId(6), read] uint32 retry_count;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Availability replica API call."): Amended,
    Guid("{314b25c1-e79e-4d72-ba23-6431ddb2266c}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_api_call"): Amended]
class XeSqlPkg_hadr_ar_api_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_api_call: XeSqlPkg_hadr_ar_api_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string api_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Availability Group replica manager is starting."): Amended,
    Guid("{25252fc4-cb11-4405-b480-3eafb5f657b1}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_manager_starting"): Amended]
class XeSqlPkg_hadr_ar_manager_starting: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_manager_starting: XeSqlPkg_hadr_ar_manager_starting
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
};
		
[dynamic: ToInstance, Description("Occurs when the Availability Replica is starting or shutting down."): Amended,
    Guid("{E0C1C073-03E0-4de5-AF91-F0F5E7A9D065}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state"): Amended]
class XeSqlPkg_availability_replica_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_state: XeSqlPkg_availability_replica_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(30),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Starting", 
					"Stopping" }
			] uint32 current_state;
	[WmiDataId(6), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(8), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("HADR Availability Group state in Wsfc."): Amended,
    Guid("{c6dd8a9e-9385-4031-a3c2-8180e35a9306}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_wsfc_resource_state"): Amended]
class XeSqlPkg_hadr_ag_wsfc_resource_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_wsfc_resource_state: XeSqlPkg_hadr_ag_wsfc_resource_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(77),
				ValueMap { 
					"4", 
					"0", 
					"1", 
					"3", 
					"130", 
					"2", 
					"129", 
					"128", 
					"-1" },
				Values { 
					"ClusterResourceFailed", 
					"ClusterResourceInherited", 
					"ClusterResourceInitializing", 
					"ClusterResourceOffline", 
					"ClusterResourceOfflinePending", 
					"ClusterResourceOnline", 
					"ClusterResourceOnlinePending", 
					"ClusterResourcePending", 
					"ClusterResourceStateUnknown" }
			] sint32 resource_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica has changed."): Amended,
    Guid("{b989b90e-a2eb-4176-9c07-c7f56045539f}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state_change"): Amended]
class XeSqlPkg_availability_replica_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_state_change: XeSqlPkg_availability_replica_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(79),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 previous_state;
	[WmiDataId(6), read, 
				XEMapId(79),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 current_state;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica has changed."): Amended,
    Guid("{b989b90e-a2eb-4176-9c07-c7f56045539f}"), locale("MS\\0x409"),
    DisplayName("availability_replica_state_change"): Amended]
class XeSqlPkg_availability_replica_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class availability_replica_state_change: XeSqlPkg_availability_replica_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(79),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 previous_state;
	[WmiDataId(6), read, 
				XEMapId(79),
				ValueMap { 
					"6", 
					"5", 
					"3", 
					"2", 
					"0", 
					"1", 
					"4" },
				Values { 
					"COUNT", 
					"NOT_AVAILABLE", 
					"PRIMARY_NORMAL", 
					"PRIMARY_PENDING", 
					"RESOLVING_NORMAL", 
					"RESOLVING_PENDING_FAILOVER", 
					"SECONDARY_NORMAL" }
			] sint32 current_state;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string availability_replica_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of the Availability Replica Manager has changed."): Amended,
    Guid("{e29669fb-38f7-456f-bdd5-340ac42a541e}"), locale("MS\\0x409"),
    DisplayName("availability_replica_manager_state_change"): Amended]
class XeSqlPkg_availability_replica_manager_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_manager_state_change: XeSqlPkg_availability_replica_manager_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(80),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"OFFLINE", 
					"ONLINE", 
					"PENDING_WSFC_COMMUNICATION" }
			] sint32 current_state;
};
		
[dynamic: ToInstance, Description("HADR Availability Group database replica API call."): Amended,
    Guid("{297535eb-0f97-4ef7-9f67-49e7884dcdde}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_database_api_call"): Amended]
class XeSqlPkg_hadr_ag_database_api_call: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_database_api_call: XeSqlPkg_hadr_ag_database_api_call
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_entering;
	[WmiDataId(6), read, StringTermination("NullTerminated")] string api_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string ag_name;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string db_name;
};
		
[dynamic: ToInstance, Description("HADR Availability Group Lease Renewal."): Amended,
    Guid("{D17DBBC4-B1F2-4454-B6C6-A85604C193BA}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_lease_renewal"): Amended]
class XeSqlPkg_hadr_ag_lease_renewal: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_lease_renewal: XeSqlPkg_hadr_ag_lease_renewal
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 new_timeout;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("Occurs when there is a connectivity issue between the cluster and the Availability Group resulting in a failure to renew the lease"): Amended,
    Guid("{98D27D0D-4197-4707-B434-2C39A6CE8CC6}"), locale("MS\\0x409"),
    DisplayName("availability_group_lease_expired"): Amended]
class XeSqlPkg_availability_group_lease_expired: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_group_lease_expired: XeSqlPkg_availability_group_lease_expired
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
};
		
[dynamic: ToInstance, Description("HADR availability replica mutex acquisition state for synchronization of ar manager startup and shutdown operations."): Amended,
    Guid("{5d239fac-407a-4fb4-8257-77952f3fd29f}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_manager_mutex_acquisition_state"): Amended]
class XeSqlPkg_hadr_ar_manager_mutex_acquisition_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_manager_mutex_acquisition_state: XeSqlPkg_hadr_ar_manager_mutex_acquisition_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(28),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToAcquire", 
					"Acquired", 
					"Released" }
			] uint32 acquisition_state;
};
		
[dynamic: ToInstance, Description("HADR availability replica critical section entry state (point of interest for tracing/testing)."): Amended,
    Guid("{bac45d5d-f354-40f5-81c4-dacc7a49fd5f}"), locale("MS\\0x409"),
    DisplayName("hadr_ar_critical_section_entry_state"): Amended]
class XeSqlPkg_hadr_ar_critical_section_entry_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ar_critical_section_entry_state: XeSqlPkg_hadr_ar_critical_section_entry_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(29),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToEnter", 
					"Entered", 
					"Exit" }
			] uint32 entry_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR availability group mutex acquisition state (point of interest for tracing/testing) for accessing local availability group config data."): Amended,
    Guid("{2636b74d-18b4-4e23-b38e-ea4b5c36c102}"), locale("MS\\0x409"),
    DisplayName("hadr_ag_config_data_mutex_acquisition_state"): Amended]
class XeSqlPkg_hadr_ag_config_data_mutex_acquisition_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_ag_config_data_mutex_acquisition_state: XeSqlPkg_hadr_ag_config_data_mutex_acquisition_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(28),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"AttemptToAcquire", 
					"Acquired", 
					"Released" }
			] uint32 acquisition_state;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string id_or_name;
};
		
[dynamic: ToInstance, Description("HADR Database Replica has been fully unjoined from the Availability Group."): Amended,
    Guid("{89753de5-9e46-4653-8153-e02a5d10f834}"), locale("MS\\0x409"),
    DisplayName("hadr_database_replica_disjoin_completion"): Amended]
class XeSqlPkg_hadr_database_replica_disjoin_completion: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_database_replica_disjoin_completion: XeSqlPkg_hadr_database_replica_disjoin_completion
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when secondary is going to append a log block to logmgr."): Amended,
    Guid("{226B89D5-F431-4187-871B-6D00FD1C1722}"), locale("MS\\0x409"),
    DisplayName("hadr_apply_log_block"): Amended]
class XeSqlPkg_hadr_apply_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apply_log_block: XeSqlPkg_hadr_apply_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(8), read] uint16 mode;
	[WmiDataId(9), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs just prior to the update of the EOL LSN"): Amended,
    Guid("{5158EB8E-5991-4981-A699-55D176507D7F}"), locale("MS\\0x409"),
    DisplayName("before_redo_lsn_update"): Amended]
class XeSqlPkg_before_redo_lsn_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class before_redo_lsn_update: XeSqlPkg_before_redo_lsn_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block."): Amended,
    Guid("{06431D78-4587-411C-AF25-EFE0D599CDF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_log_block"): Amended]
class XeSqlPkg_hadr_capture_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_log_block: XeSqlPkg_hadr_capture_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint64 log_block_sequence;
	[WmiDataId(8), read] uint64 log_block_acknowledgment_sequence;
	[WmiDataId(9), read] uint32 queue_size;
	[WmiDataId(10), read] uint16 mode;
	[WmiDataId(11), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(12), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(13), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary has captured a log block which starts new virtual file."): Amended,
    Guid("{27DF1E5B-22DD-423B-8D02-56835EC9DAF1}"), locale("MS\\0x409"),
    DisplayName("hadr_capture_vlfheader"): Amended]
class XeSqlPkg_hadr_capture_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_capture_vlfheader: XeSqlPkg_hadr_capture_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(8), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(9), read, Extension("Guid")] guid database_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when secondary is going to apply a VLF header."): Amended,
    Guid("{A3E65B18-EC06-4546-9835-90B440EBC98F}"), locale("MS\\0x409"),
    DisplayName("hadr_apply_vlfheader"): Amended]
class XeSqlPkg_hadr_apply_vlfheader: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_apply_vlfheader: XeSqlPkg_hadr_apply_vlfheader
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read, Extension("Guid")] guid hadr_database_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary or secondary DBR is changing state"): Amended,
    Guid("{97AC5E41-3A6E-4B2A-96AC-A9EBA66D5BB7}"), locale("MS\\0x409"),
    DisplayName("hadr_scan_state"): Amended]
class XeSqlPkg_hadr_scan_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_scan_state: XeSqlPkg_hadr_scan_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  success;
	[WmiDataId(6), read, 
				XEMapId(76),
				ValueMap { 
					"6", 
					"7", 
					"5", 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"AcceptingLog", 
					"Count", 
					"SendingLog", 
					"SendWatermark", 
					"Uninitialized", 
					"WaitForRedo", 
					"WaitForUndo", 
					"WaitForWatermark" }
			] uint32 current_state;
	[WmiDataId(7), read, 
				XEMapId(76),
				ValueMap { 
					"6", 
					"7", 
					"5", 
					"2", 
					"0", 
					"4", 
					"3", 
					"1" },
				Values { 
					"AcceptingLog", 
					"Count", 
					"SendingLog", 
					"SendWatermark", 
					"Uninitialized", 
					"WaitForRedo", 
					"WaitForUndo", 
					"WaitForWatermark" }
			] uint32 target_state;
	[WmiDataId(8), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(9), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string availability_group_resource_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary send or secondary receives logblock message."): Amended,
    Guid("{BF35D86D-E5DB-4BD6-BFBB-A36955898DED}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_log_block"): Amended]
class XeSqlPkg_hadr_dump_log_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_log_block: XeSqlPkg_hadr_dump_log_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 log_block_size;
	[WmiDataId(7), read] uint32 log_buffer_size;
	[WmiDataId(8), read] uint64 fc_sequence;
	[WmiDataId(9), read] uint64 scan_generation;
	[WmiDataId(10), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(11), read, Extension("Variant")] object log_buffer;
};
		
[dynamic: ToInstance, Description("Occurs after a log block message has been sent. This event is only used for failpoints."): Amended,
    Guid("{ceb34131-40a8-44c1-a59e-e4f04305e78e}"), locale("MS\\0x409"),
    DisplayName("hadr_log_block_send_complete"): Amended]
class XeSqlPkg_hadr_log_block_send_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_log_block_send_complete: XeSqlPkg_hadr_log_block_send_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  has_been_sent;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 log_block_size;
	[WmiDataId(8), read] uint32 log_buffer_size;
};
		
[dynamic: ToInstance, Description("Occurs when primary send or secondary receives vlfheader message."): Amended,
    Guid("{E3DAAE1F-B29E-4433-A5CD-0C86832A1DA6}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_vlf_header"): Amended]
class XeSqlPkg_hadr_dump_vlf_header: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_vlf_header: XeSqlPkg_hadr_dump_vlf_header
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 vlf_status;
	[WmiDataId(7), read] uint16 vlf_fileid;
	[WmiDataId(8), read] uint64 scan_generation;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string vlf_physical_filename;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string vlf_logical_filename;
	[WmiDataId(11), read, Extension("Guid")] guid message_log_id;
	[WmiDataId(12), read, Extension("Variant")] object log_buffer;
};
		
[dynamic: ToInstance, Description("Occurs when secondary sends progress message."): Amended,
    Guid("{0755B10B-B355-4397-A1AB-8FE2D57953D2}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_log_progress"): Amended]
class XeSqlPkg_hadr_dump_log_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_log_progress: XeSqlPkg_hadr_dump_log_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 last_shipped_log_block_id;
	[WmiDataId(6), read] uint32 last_shipped_log_block_size;
	[WmiDataId(7), read] uint64 sequence_num;
	[WmiDataId(8), read] uint64 target_redo;
	[WmiDataId(9), read] uint64 redo_rate;
	[WmiDataId(10), read] uint64 redo_queue_size;
	[WmiDataId(11), read] uint64 scan_generation;
	[WmiDataId(12), read] sint8  is_send_watermark;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string last_redone_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(17), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when primary sends progress message."): Amended,
    Guid("{72A07A74-4C82-4331-B45C-EC7E92F9778D}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_primary_progress"): Amended]
class XeSqlPkg_hadr_dump_primary_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_primary_progress: XeSqlPkg_hadr_dump_primary_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 send_queue_size;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string common_redo_lsn;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(8), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when sync secondary sends a progress message"): Amended,
    Guid("{b46b150f-64e6-4c56-a005-0f8bf4302a4b}"), locale("MS\\0x409"),
    DisplayName("hadr_dump_sync_primary_progress"): Amended]
class XeSqlPkg_hadr_dump_sync_primary_progress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_dump_sync_primary_progress: XeSqlPkg_hadr_dump_sync_primary_progress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 hardened_log_block_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(7), read, Extension("Guid")] guid message_log_id;
};
		
[dynamic: ToInstance, Description("Occurs when we're crafting a message to send containing a new hardened LSN on a secondary.  Test only."): Amended,
    Guid("{bf5d5752-52bf-465c-9afd-7037b9cfbda6}"), locale("MS\\0x409"),
    DisplayName("hadr_send_harden_lsn_message"): Amended]
class XeSqlPkg_hadr_send_harden_lsn_message: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_send_harden_lsn_message: XeSqlPkg_hadr_send_harden_lsn_message
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(6), read, Extension("Guid")] guid hadr_database_id;
	[WmiDataId(7), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description(""): Amended,
    Guid("{e2a283af-23c0-40ad-a58d-740a8b71f1f1}"), locale("MS\\0x409"),
    DisplayName("hadr_partner_updated_lsns"): Amended]
class XeSqlPkg_hadr_partner_updated_lsns: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_partner_updated_lsns: XeSqlPkg_hadr_partner_updated_lsns
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 redo_target;
	[WmiDataId(6), read, Extension("WmiTime")] uint64 redone_time;
	[WmiDataId(7), read] uint64 redo_rate;
	[WmiDataId(8), read] uint64 redo_queue_size;
	[WmiDataId(9), read, Extension("WmiTime")] uint64 commit_time;
	[WmiDataId(10), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(11), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid database_replica_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string truncation_lsn;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string hardened_lsn;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string undo_lsn;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string oldest_xact_lsn;
	[WmiDataId(17), read, StringTermination("NullTerminated"), Format("w")] string start_of_log_lsn;
	[WmiDataId(18), read, StringTermination("NullTerminated"), Format("w")] string redo_lsn;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string end_of_log_lsn;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string commit_lsn;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string shipped_lsn;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string log_scan_lsn;
};
		
[dynamic: ToInstance, Description("Occurs when evaluating read-only routing information on a local primary DB replica."): Amended,
    Guid("{C1AA9158-5470-49E3-83D9-C73A7E2F7B99}"), locale("MS\\0x409"),
    DisplayName("hadr_evaluate_readonly_routing_info"): Amended]
class XeSqlPkg_hadr_evaluate_readonly_routing_info: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_evaluate_readonly_routing_info: XeSqlPkg_hadr_evaluate_readonly_routing_info
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  is_empty;
	[WmiDataId(6), read] sint8  is_primary;
	[WmiDataId(7), read] sint8  is_routing_replica_not_found;
	[WmiDataId(8), read] uint16 port;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(10), read, Extension("Guid")] guid ag_database_id;
	[WmiDataId(11), read, Extension("Guid")] guid ag_primary_replica_id;
	[WmiDataId(12), read, Extension("Guid")] guid ag_id;
};
		
[dynamic: ToInstance, Description("A read-only routing operation successfully completed."): Amended,
    Guid("{7DF7E9C2-5727-432D-8938-E8B1CB7C0E5A}"), locale("MS\\0x409"),
    DisplayName("read_only_route_complete"): Amended]
class XeSqlPkg_read_only_route_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class read_only_route_complete: XeSqlPkg_read_only_route_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 route_port;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string route_server_name;
};
		
[dynamic: ToInstance, Description("The read-only routing operation failed.  This is sent when the primary replica has a READ_ONLY_ROUTING_LIST configured and none of the replicas in the list are available for read-only routing."): Amended,
    Guid("{66E79EBD-B0C0-489C-892C-96E5B88A9F40}"), locale("MS\\0x409"),
    DisplayName("read_only_route_fail"): Amended]
class XeSqlPkg_read_only_route_fail: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class read_only_route_fail: XeSqlPkg_read_only_route_fail
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when AlwaysOn DDL is executed including CREATE, ALTER or DROP"): Amended,
    Guid("{29777CC6-8145-490d-AFF2-36E18D2785FC}"), locale("MS\\0x409"),
    DisplayName("alwayson_ddl_executed"): Amended]
class XeSqlPkg_alwayson_ddl_executed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class alwayson_ddl_executed: XeSqlPkg_alwayson_ddl_executed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(36),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"create", 
					"drop", 
					"alter" }
			] uint8 ddl_action;
	[WmiDataId(6), read, 
				XEMapId(37),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"begin", 
					"commit", 
					"rollback" }
			] uint8 ddl_phase;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
};
		
[dynamic: ToInstance, Description("Occurs when the failover validates the readiness of replica as a primary. For instance, the failover validation will return false when not all databases are synchronized or not joined"): Amended,
    Guid("{1DBAD0D7-5B6F-443c-B25B-58F48FA451BE}"), locale("MS\\0x409"),
    DisplayName("availability_replica_automatic_failover_validation"): Amended]
class XeSqlPkg_availability_replica_automatic_failover_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class availability_replica_automatic_failover_validation: XeSqlPkg_availability_replica_automatic_failover_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  forced_quorum;
	[WmiDataId(6), read] sint8  joined_and_synchronized;
	[WmiDataId(7), read] sint8  previous_primary_or_automatic_failover_target;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
};
		
[dynamic: ToInstance, Description("Occurs when the failover validates the readiness of replica as a primary. For instance, the failover validation will return false when not all databases are synchronized or not joined"): Amended,
    Guid("{1DBAD0D7-5B6F-443c-B25B-58F48FA451BE}"), locale("MS\\0x409"),
    DisplayName("availability_replica_automatic_failover_validation"): Amended]
class XeSqlPkg_availability_replica_automatic_failover_validation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class availability_replica_automatic_failover_validation: XeSqlPkg_availability_replica_automatic_failover_validation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  forced_quorum;
	[WmiDataId(6), read] sint8  joined_and_synchronized;
	[WmiDataId(7), read] sint8  previous_primary_or_automatic_failover_target;
	[WmiDataId(8), read, Extension("Guid")] guid availability_group_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string availability_group_name;
	[WmiDataId(10), read, Extension("Guid")] guid availability_replica_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string availability_replica_name;
};
		
[dynamic: ToInstance, Description("Metadata cache entry added"): Amended,
    Guid("{0811209e-b5e9-45ba-b29f-1da995a21bde}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_add"): Amended]
class XeSqlPkg_metadata_cache_add: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_add: XeSqlPkg_metadata_cache_add
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata cache entry flushed"): Amended,
    Guid("{3f8a3817-df15-4041-bb68-f6f8c4cda933}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_flush"): Amended]
class XeSqlPkg_metadata_cache_flush: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_flush: XeSqlPkg_metadata_cache_flush
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read] sint8  in_cache;
	[WmiDataId(9), read] sint8  aged_out;
};
		
[dynamic: ToInstance, Description("Metadata cache entry updated"): Amended,
    Guid("{69ba0f2f-c4e5-4389-aa32-f4fb2cd1e6a5}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_update"): Amended]
class XeSqlPkg_metadata_cache_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_update: XeSqlPkg_metadata_cache_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 update_type;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
	[WmiDataId(9), read, Extension("Variant")] object key;
};
		
[dynamic: ToInstance, Description("Metadata entry version updated"): Amended,
    Guid("{d7440919-ed32-415e-9e43-1ebd5eeff77f}"), locale("MS\\0x409"),
    DisplayName("metadata_version_update"): Amended]
class XeSqlPkg_metadata_version_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_version_update: XeSqlPkg_metadata_version_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 object_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint32 cache_type;
	[WmiDataId(8), read] uint64 version;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog inserted"): Amended,
    Guid("{d73f384b-0476-4077-a13a-877aa54acdf3}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_inserted"): Amended]
class XeSqlPkg_metadata_manager_catalog_inserted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_inserted: XeSqlPkg_metadata_manager_catalog_inserted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog updated"): Amended,
    Guid("{f6625f11-6f0e-4c1c-84c0-91853fd09431}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_updated"): Amended]
class XeSqlPkg_metadata_manager_catalog_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_updated: XeSqlPkg_metadata_manager_catalog_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata manager catalog deleted"): Amended,
    Guid("{67a4459d-e6dc-4fd2-a637-9f79155f01e6}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_catalog_deleted"): Amended]
class XeSqlPkg_metadata_manager_catalog_deleted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_catalog_deleted: XeSqlPkg_metadata_manager_catalog_deleted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 from_brick_id;
	[WmiDataId(8), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata agent catalog updated"): Amended,
    Guid("{8c5d28c3-c368-4fb6-8ce4-803c9fd73d1b}"), locale("MS\\0x409"),
    DisplayName("metadata_agent_catalog_updated"): Amended]
class XeSqlPkg_metadata_agent_catalog_updated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_agent_catalog_updated: XeSqlPkg_metadata_agent_catalog_updated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 update_type;
	[WmiDataId(8), read] uint32 from_brick_id;
	[WmiDataId(9), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata cache vlr posted"): Amended,
    Guid("{f0c59884-17c9-4bec-8113-94667095a7f4}"), locale("MS\\0x409"),
    DisplayName("metadata_cache_vlr_posted"): Amended]
class XeSqlPkg_metadata_cache_vlr_posted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_cache_vlr_posted: XeSqlPkg_metadata_cache_vlr_posted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read] uint32 cache_type;
};
		
[dynamic: ToInstance, Description("Metadata initiate lock object"): Amended,
    Guid("{1c5b1537-fd5d-4161-90ce-ba4e1f3cd4d5}"), locale("MS\\0x409"),
    DisplayName("metadata_initiate_lock_object"): Amended]
class XeSqlPkg_metadata_initiate_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_initiate_lock_object: XeSqlPkg_metadata_initiate_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata manager lock object"): Amended,
    Guid("{75b3d0af-8551-4a0c-8ede-ab3d5d21c8a0}"), locale("MS\\0x409"),
    DisplayName("metadata_manager_lock_object"): Amended]
class XeSqlPkg_metadata_manager_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_manager_lock_object: XeSqlPkg_metadata_manager_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata agent lock object"): Amended,
    Guid("{79f0bc46-a30f-4215-b393-666d320f9c96}"), locale("MS\\0x409"),
    DisplayName("metadata_agent_lock_object"): Amended]
class XeSqlPkg_metadata_agent_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_agent_lock_object: XeSqlPkg_metadata_agent_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata lock object"): Amended,
    Guid("{4898aca0-e2c4-11dd-baf7-0a7355d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_lock_object"): Amended]
class XeSqlPkg_metadata_lock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_lock_object: XeSqlPkg_metadata_lock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("Metadata initiate unlock object"): Amended,
    Guid("{7921adfe-e2c9-11dd-93e1-0a9555d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_initiate_unlock_object"): Amended]
class XeSqlPkg_metadata_initiate_unlock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_initiate_unlock_object: XeSqlPkg_metadata_initiate_unlock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata unlock object"): Amended,
    Guid("{84aa24b2-e2c9-11dd-94b5-539555d89593}"), locale("MS\\0x409"),
    DisplayName("metadata_unlock_object"): Amended]
class XeSqlPkg_metadata_unlock_object: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_unlock_object: XeSqlPkg_metadata_unlock_object
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 brick_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Metadata add the segmentid column into secondary indexes of matrixdb heaps"): Amended,
    Guid("{99d4d8d6-9b51-4ac3-82d9-2a280bd90ed1}"), locale("MS\\0x409"),
    DisplayName("metadata_add_segmentid"): Amended]
class XeSqlPkg_metadata_add_segmentid: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_add_segmentid: XeSqlPkg_metadata_add_segmentid
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string index_name;
};
		
[dynamic: ToInstance, Description("Attempting to lookup a metadata object by name"): Amended,
    Guid("{b6a74aac-e5af-4405-8292-46de646f664b}"), locale("MS\\0x409"),
    DisplayName("metadata_name_lookup_failed"): Amended]
class XeSqlPkg_metadata_name_lookup_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_name_lookup_failed: XeSqlPkg_metadata_name_lookup_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string object_name;
};
		
[dynamic: ToInstance, Description("Tracing RemoveFromCache callers"): Amended,
    Guid("{b5d4cb8e-273a-4543-ae57-f20298f3ce53}"), locale("MS\\0x409"),
    DisplayName("metadata_remove_from_cache_tracing"): Amended]
class XeSqlPkg_metadata_remove_from_cache_tracing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_remove_from_cache_tracing: XeSqlPkg_metadata_remove_from_cache_tracing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 primary_id;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string caller_function;
};
		
[dynamic: ToInstance, Description("Failed HRESULT"): Amended,
    Guid("{d9eec9e7-a0e9-4948-a077-a96404f60134}"), locale("MS\\0x409"),
    DisplayName("failed_hresult"): Amended]
class XeSqlPkg_failed_hresult: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failed_hresult: XeSqlPkg_failed_hresult
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
};
		
[dynamic: ToInstance, Description("Failed HRESULT"): Amended,
    Guid("{db4b8a86-ef93-409d-949e-d08be6b794f0}"), locale("MS\\0x409"),
    DisplayName("failed_hresult_msg"): Amended]
class XeSqlPkg_failed_hresult_msg: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class failed_hresult_msg: XeSqlPkg_failed_hresult_msg
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 hresult;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("Event used for LIKE tests only"): Amended,
    Guid("{0c8e4395-4192-46d6-a1ba-5ecb92acfcdc}"), locale("MS\\0x409"),
    DisplayName("like_unittest"): Amended]
class XeSqlPkg_like_unittest: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class like_unittest: XeSqlPkg_like_unittest
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, StringTermination("NullTerminated"), Format("w")] string text_w;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string text_w_st;
	[WmiDataId(7), read, StringTermination("NullTerminated")] string text_a;
	[WmiDataId(8), read, StringTermination("NullTerminated")] string text_a_st;
};
		
[dynamic: ToInstance, Description("Time taken to acquire a latch"): Amended,
    Guid("{3917182b-98d0-4452-b68f-a0fcff55fdeb}"), locale("MS\\0x409"),
    DisplayName("latch_acquire_time"): Amended]
class XeSqlPkg_latch_acquire_time: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class latch_acquire_time: XeSqlPkg_latch_acquire_time
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  latch_address;
	[WmiDataId(6), read] uint64 duration_cycles;
	[WmiDataId(7), read] uint32 sample_count;
	[WmiDataId(8), read] uint32 reference_count;
	[WmiDataId(9), read] uint64 total_duration_cycles;
	[WmiDataId(10), read] uint64 promotion_threshold_cycles;
	[WmiDataId(11), read] uint16 file_id;
	[WmiDataId(12), read] uint32 page_id;
	[WmiDataId(13), read, 
				XEMapId(122),
				BitMap { 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"128", 
					"134217728", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity started"): Amended,
    Guid("{69053859-FD32-5435-978F-5422390989AC}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_start"): Amended]
class XeSqlPkg_ioaff_scan_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_start: XeSqlPkg_ioaff_scan_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 dop;
	[WmiDataId(8), read] uint32 file_count;
	[WmiDataId(9), read] uint32 max_range_length;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity ended"): Amended,
    Guid("{985DFE3A-6890-6318-AF5F-789DFBC0154F}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_end"): Amended]
class XeSqlPkg_ioaff_scan_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_end: XeSqlPkg_ioaff_scan_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 ranges_total;
	[WmiDataId(8), read] uint64 pages_total;
	[WmiDataId(9), read] uint64 upper_level_pages_total;
	[WmiDataId(10), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan worker started processing"): Amended,
    Guid("{09F12383-F586-4F46-B853-6E1F135C6EF1}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_worker_start"): Amended]
class XeSqlPkg_ioaff_scan_worker_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_worker_start: XeSqlPkg_ioaff_scan_worker_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 worker_id;
	[WmiDataId(9), read] uint32 scheduler_id;
	[WmiDataId(10), read] uint32 node_id;
};
		
[dynamic: ToInstance, Description("Parallel scan worker finished processing"): Amended,
    Guid("{721F02D7-6AB8-482E-8EB2-104D724CF305}"), locale("MS\\0x409"),
    DisplayName("ioaff_scan_worker_end"): Amended]
class XeSqlPkg_ioaff_scan_worker_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_scan_worker_end: XeSqlPkg_ioaff_scan_worker_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 worker_id;
	[WmiDataId(8), read] sint64 total_pages_read;
	[WmiDataId(9), read] sint64 total_pages_processed;
	[WmiDataId(10), read] sint64 total_ranges_processed;
	[WmiDataId(11), read] sint64 total_ranges_generated_for_local;
	[WmiDataId(12), read] sint64 total_ranges_generated_for_remote;
	[WmiDataId(13), read] sint64 total_ranges_local_rebalanced_to_this;
	[WmiDataId(14), read] sint64 total_ranges_remote_rebalanced_to_this;
	[WmiDataId(15), read] sint64 total_pages_local_rebalanced_to_this;
	[WmiDataId(16), read] sint64 total_pages_remote_rebalanced_to_this;
	[WmiDataId(17), read] sint64 total_ranges_local_rebalanced_from_this;
	[WmiDataId(18), read] sint64 total_ranges_remote_rebalanced_from_this;
	[WmiDataId(19), read] sint64 total_pages_local_rebalanced_from_this;
	[WmiDataId(20), read] sint64 total_pages_remote_rebalanced_from_this;
	[WmiDataId(21), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan with IO affinity started"): Amended,
    Guid("{10B2E17B-3979-4E35-BC94-891FF7EDA40B}"), locale("MS\\0x409"),
    DisplayName("ioaff_node_summary"): Amended]
class XeSqlPkg_ioaff_node_summary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ioaff_node_summary: XeSqlPkg_ioaff_node_summary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 node_id;
	[WmiDataId(8), read] sint64 total_pages_read;
	[WmiDataId(9), read] sint64 total_pages_processed;
	[WmiDataId(10), read] sint64 total_ranges_processed;
	[WmiDataId(11), read] sint64 total_ranges_generated_for_local;
	[WmiDataId(12), read] sint64 total_ranges_generated_for_remote;
	[WmiDataId(13), read] sint64 total_ranges_local_rebalanced_to_this;
	[WmiDataId(14), read] sint64 total_ranges_remote_rebalanced_to_this;
	[WmiDataId(15), read] sint64 total_pages_local_rebalanced_to_this;
	[WmiDataId(16), read] sint64 total_pages_remote_rebalanced_to_this;
	[WmiDataId(17), read] sint64 total_ranges_local_rebalanced_from_this;
	[WmiDataId(18), read] sint64 total_ranges_remote_rebalanced_from_this;
	[WmiDataId(19), read] sint64 total_pages_local_rebalanced_from_this;
	[WmiDataId(20), read] sint64 total_pages_remote_rebalanced_from_this;
	[WmiDataId(21), read] uint64 total_time_ms;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{CCA9A859-861E-493E-9C2F-1CFFF12DF363}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_range_created"): Amended]
class XeSqlPkg_parallel_scan_range_created: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_range_created: XeSqlPkg_parallel_scan_range_created
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 range_id;
	[WmiDataId(14), read] uint32 original_worker_id;
	[WmiDataId(15), read] uint64 pages_in_range;
	[WmiDataId(16), read] uint64 pages_in_queue;
	[WmiDataId(17), read] sint64 outstanding_pages;
	[WmiDataId(18), read] uint32 ranges_in_queue;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string start_key;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string end_key;
};
		
[dynamic: ToInstance, Description("Parallel scan advances read ahead"): Amended,
    Guid("{6A166597-B079-4658-8604-61C9071FB608}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_readahead_advance"): Amended]
class XeSqlPkg_parallel_scan_readahead_advance: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_readahead_advance: XeSqlPkg_parallel_scan_readahead_advance
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read] uint32 scheduler_id;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 node_id;
	[WmiDataId(9), read] uint32 ranges_in_queue;
	[WmiDataId(10), read] uint64 pages_in_queue;
	[WmiDataId(11), read] sint64 read_ahead_distance;
	[WmiDataId(12), read] uint32 fixup_range_id;
	[WmiDataId(13), read] uint64 fixup_base_pos;
	[WmiDataId(14), read] uint32 range_id;
	[WmiDataId(15), read] uint16 start_file_id;
	[WmiDataId(16), read] uint16 end_file_id;
	[WmiDataId(17), read] uint32 start_page_id;
	[WmiDataId(18), read] uint32 end_page_id;
};
		
[dynamic: ToInstance, Description("Parallel scan read ahead position fixup"): Amended,
    Guid("{B0DE51B1-ECFB-49AE-94A5-572C79892995}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_readahead_fixup"): Amended]
class XeSqlPkg_parallel_scan_readahead_fixup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_readahead_fixup: XeSqlPkg_parallel_scan_readahead_fixup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read] uint32 scheduler_id;
	[WmiDataId(7), read, Pointer] object  worker;
	[WmiDataId(8), read] uint32 node_id;
	[WmiDataId(9), read] uint32 ranges_in_queue;
	[WmiDataId(10), read] uint64 pages_in_queue;
	[WmiDataId(11), read] sint64 read_ahead_distance;
	[WmiDataId(12), read] uint32 fixup_range_id;
	[WmiDataId(13), read] uint64 fixup_base_pos;
	[WmiDataId(14), read] uint32 range_id;
	[WmiDataId(15), read] uint32 range_worker_id;
	[WmiDataId(16), read] uint64 range_base_pos;
	[WmiDataId(17), read] sint64 adjusted_read_ahead_distance;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{949830BA-9D53-4F2B-AB10-74265E4D8FA7}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_range_returned"): Amended]
class XeSqlPkg_parallel_scan_range_returned: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_range_returned: XeSqlPkg_parallel_scan_range_returned
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 range_id;
	[WmiDataId(14), read] uint32 original_worker_id;
	[WmiDataId(15), read] uint64 pages_in_range;
	[WmiDataId(16), read] uint64 pages_in_queue;
	[WmiDataId(17), read] sint64 outstanding_pages;
	[WmiDataId(18), read] uint32 ranges_in_queue;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string start_key;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string end_key;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{2E23935F-7BBB-4919-91E8-DA9C759B5B63}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_upper_level_readahead"): Amended]
class XeSqlPkg_parallel_scan_upper_level_readahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_upper_level_readahead: XeSqlPkg_parallel_scan_upper_level_readahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint16 start_file_id;
	[WmiDataId(13), read] uint16 end_file_id;
	[WmiDataId(14), read] uint32 start_page_id;
	[WmiDataId(15), read] uint32 end_page_id;
	[WmiDataId(16), read] uint64 page_count;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{83F3FE72-0190-4171-BFA7-B7739E929601}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_wait_for_work"): Amended]
class XeSqlPkg_parallel_scan_wait_for_work: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_wait_for_work: XeSqlPkg_parallel_scan_wait_for_work
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{EEA3FE72-2190-4581-5467-B77FE4545431}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_stuck_read_ahead"): Amended]
class XeSqlPkg_parallel_scan_stuck_read_ahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_stuck_read_ahead: XeSqlPkg_parallel_scan_stuck_read_ahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
	[WmiDataId(13), read] uint32 stuck_worker_id;
	[WmiDataId(14), read] uint64 pages_in_queue;
	[WmiDataId(15), read] sint64 outstanding_pages;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{41E69BF2-87DE-4497-8E80-39ADB7EB42D5}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_resume_range_generation"): Amended]
class XeSqlPkg_parallel_scan_resume_range_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_resume_range_generation: XeSqlPkg_parallel_scan_resume_range_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("Parallel scan subrange information"): Amended,
    Guid("{05E2D70B-A124-4B17-A49B-63C94D4E7699}"), locale("MS\\0x409"),
    DisplayName("parallel_scan_pause_range_generation"): Amended]
class XeSqlPkg_parallel_scan_pause_range_generation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class parallel_scan_pause_range_generation: XeSqlPkg_parallel_scan_pause_range_generation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 timestamp0;
	[WmiDataId(6), read, Pointer] object  range_generator;
	[WmiDataId(7), read] uint32 scheduler_id;
	[WmiDataId(8), read, Pointer] object  worker;
	[WmiDataId(9), read] uint32 node_id;
	[WmiDataId(10), read] uint32 ranges_total;
	[WmiDataId(11), read] uint64 pages_total;
	[WmiDataId(12), read] uint32 worker_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager Startup/Shutdown operations"): Amended,
    Guid("{6caacdc7-a449-411f-9aaf-c6c5ea6a7f6f}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_factory"): Amended]
class XeSqlPkg_hobt_schema_mgr_factory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_factory: XeSqlPkg_hobt_schema_mgr_factory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read, Pointer] object  schema_mgr_addr;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt operations"): Amended,
    Guid("{143c2869-c3b1-40af-aa0d-3aee4f8464d1}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt: XeSqlPkg_hobt_schema_mgr_hobt
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(102),
				ValueMap { 
					"4", 
					"2", 
					"5", 
					"3", 
					"6", 
					"7", 
					"0", 
					"1" },
				Values { 
					"ADDCOLUMN", 
					"ALLOCUNIT", 
					"ALTERCOLUMN", 
					"AU_PAGE", 
					"DROPCOLUMN", 
					"LAST", 
					"NONE", 
					"ROWSETATTR" }
			] uint32 ddl_operation;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager column operations"): Amended,
    Guid("{d0b0035b-fb63-4f6f-80a2-d6e16adba647}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_column"): Amended]
class XeSqlPkg_hobt_schema_mgr_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_column: XeSqlPkg_hobt_schema_mgr_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(102),
				ValueMap { 
					"4", 
					"2", 
					"5", 
					"3", 
					"6", 
					"7", 
					"0", 
					"1" },
				Values { 
					"ADDCOLUMN", 
					"ALLOCUNIT", 
					"ALTERCOLUMN", 
					"AU_PAGE", 
					"DROPCOLUMN", 
					"LAST", 
					"NONE", 
					"ROWSETATTR" }
			] uint32 ddl_operation;
	[WmiDataId(10), read] uint32 column_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager allocation unit operations"): Amended,
    Guid("{a7fd3bae-483a-4321-afca-9538d2d44256}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_allocation_unit"): Amended]
class XeSqlPkg_hobt_schema_mgr_allocation_unit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_allocation_unit: XeSqlPkg_hobt_schema_mgr_allocation_unit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(103),
				ValueMap { 
					"1", 
					"4", 
					"3", 
					"0", 
					"2" },
				Values { 
					"DATA", 
					"LAST", 
					"LOB", 
					"NONE", 
					"SLOB" }
			] uint32 allocation_unit;
	[WmiDataId(10), read] uint16 au_fg_id;
	[WmiDataId(11), read] uint16 au_first_file_id;
	[WmiDataId(12), read] uint32 au_first_page_id;
	[WmiDataId(13), read] uint16 au_root_file_id;
	[WmiDataId(14), read] uint32 au_root_page_id;
	[WmiDataId(15), read] uint16 au_iam_file_id;
	[WmiDataId(16), read] uint32 au_iam_page_id;
	[WmiDataId(17), read] uint64 page_count_leaf;
	[WmiDataId(18), read] uint64 page_count_used;
	[WmiDataId(19), read] uint64 page_count_reserved;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt page operations"): Amended,
    Guid("{f1e2f446-a1c2-4734-b6b2-4627ade8d4fd}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt_page"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt_page: XeSqlPkg_hobt_schema_mgr_hobt_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, 
				XEMapId(103),
				ValueMap { 
					"1", 
					"4", 
					"3", 
					"0", 
					"2" },
				Values { 
					"DATA", 
					"LAST", 
					"LOB", 
					"NONE", 
					"SLOB" }
			] uint32 allocation_unit;
	[WmiDataId(10), read, 
				XEMapId(104),
				ValueMap { 
					"4", 
					"2", 
					"3", 
					"0", 
					"1" },
				Values { 
					"ALLOCUNIT_LAST", 
					"FIRST", 
					"IAM", 
					"NONE", 
					"ROOT" }
			] uint32 hobt_allocation_page;
	[WmiDataId(11), read] uint32 page_id;
	[WmiDataId(12), read] uint16 file_id;
};
		
[dynamic: ToInstance, Description("HoBt Schema Manager HoBt attributes operations"): Amended,
    Guid("{59a7c68d-3b94-417f-838b-c1355804ff24}"), locale("MS\\0x409"),
    DisplayName("hobt_schema_mgr_hobt_attributes"): Amended]
class XeSqlPkg_hobt_schema_mgr_hobt_attributes: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hobt_schema_mgr_hobt_attributes: XeSqlPkg_hobt_schema_mgr_hobt_attributes
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint32 version;
	[WmiDataId(7), read, 
				XEMapId(101),
				ValueMap { 
					"7", 
					"8", 
					"9", 
					"0", 
					"2", 
					"1", 
					"10", 
					"5", 
					"6", 
					"3", 
					"4" },
				Values { 
					"CSI_ROWGROUP_ADD", 
					"CSI_ROWGROUP_CHANGE", 
					"CSI_ROWGROUP_DELETE", 
					"ADD", 
					"ALTER", 
					"DROP", 
					"LAST", 
					"MARK_FOR_REFRESH", 
					"RECOVERY", 
					"SHARE", 
					"UNSHARE" }
			] uint32 operation;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 row_count;
	[WmiDataId(10), read] uint16 file_stream_file_group_id;
	[WmiDataId(11), read, 
				XEMapId(105),
				ValueMap { 
					"3", 
					"4", 
					"0", 
					"2", 
					"1" },
				Values { 
					"Columnstore", 
					"ColumnstoreArchive", 
					"None", 
					"Page", 
					"Row" }
			] uint32 compress_level;
	[WmiDataId(12), read, 
				XEMapId(106),
				ValueMap { 
					"2", 
					"1", 
					"0" },
				Values { 
					"Clean", 
					"Unclean", 
					"Unknown" }
			] uint32 lob_status;
	[WmiDataId(13), read] sint8  unique;
	[WmiDataId(14), read] sint8  replicated;
	[WmiDataId(15), read] sint8  log_off_rows_for_replication;
	[WmiDataId(16), read] sint8  column_store;
	[WmiDataId(17), read] sint8  se_replicated;
};
		
[dynamic: ToInstance, Description("Occurs when Storage Engine detects low memory condition and the rowgroup size is reduced."): Amended,
    Guid("{a75ceca2-fd67-4942-9e13-7f960966eebc}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_low_memory"): Amended]
class XeSqlPkg_column_store_index_build_low_memory: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_low_memory: XeSqlPkg_column_store_index_build_low_memory
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 schema_mgr_database_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint64 rowgroup_id;
	[WmiDataId(9), read] uint64 rows_per_colsegment;
};
		
[dynamic: ToInstance, Description("Shows the statistics of columnstore index build parallelism throttling"): Amended,
    Guid("{62026e8a-6dfe-4395-9060-fa6fadf3c70d}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_throttle"): Amended]
class XeSqlPkg_column_store_index_build_throttle: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_throttle: XeSqlPkg_column_store_index_build_throttle
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 segment_count;
	[WmiDataId(6), read] uint64 row_count;
	[WmiDataId(7), read] uint32 query_dop;
	[WmiDataId(8), read] uint32 effective_dop;
	[WmiDataId(9), read] uint32 max_effective_dop;
};
		
[dynamic: ToInstance, Description("Occurs when a segment is processed"): Amended,
    Guid("{3c40682e-9481-4c1e-a54e-8009b6c2ec5c}"), locale("MS\\0x409"),
    DisplayName("column_store_index_build_process_segment"): Amended]
class XeSqlPkg_column_store_index_build_process_segment: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_index_build_process_segment: XeSqlPkg_column_store_index_build_process_segment
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 hobtid;
	[WmiDataId(7), read] uint64 rowgroup_id;
	[WmiDataId(8), read] uint64 rowcount;
	[WmiDataId(9), read] uint64 trim_reason;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover starts compressing a deltastore."): Amended,
    Guid("{A81CCD79-F3DC-4060-816C-B1956DB61ECC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_begin_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_begin_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_begin_compress: XeSqlPkg_columnstore_tuple_mover_begin_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delta_store_id;
};
		
[dynamic: ToInstance, Description("Occurs when column store tuple mover is done compressing a deltastore."): Amended,
    Guid("{8538384F-E68D-4bd1-8BC5-71B5E3883EEC}"), locale("MS\\0x409"),
    DisplayName("columnstore_tuple_mover_end_compress"): Amended]
class XeSqlPkg_columnstore_tuple_mover_end_compress: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class columnstore_tuple_mover_end_compress: XeSqlPkg_columnstore_tuple_mover_end_compress
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint64 rowset_id;
	[WmiDataId(7), read] uint64 delta_store_id;
};
		
[dynamic: ToInstance, Description("Code coverage Xevent for columnstore code."): Amended,
    Guid("{015BC3DD-00C2-425E-A91F-FD302327C965}"), locale("MS\\0x409"),
    DisplayName("column_store_code_coverage"): Amended]
class XeSqlPkg_column_store_code_coverage: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_code_coverage: XeSqlPkg_column_store_code_coverage
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 code_point;
	[WmiDataId(6), read] real64 optional_value1;
	[WmiDataId(7), read] real64 optional_value2;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string description;
};
		
[dynamic: ToInstance, Description("Page is being looked up"): Amended,
    Guid("{e88032c5-2f9c-453a-8eb8-b7221bf8b056}"), locale("MS\\0x409"),
    DisplayName("page_reference_tracker"): Amended]
class XeSqlPkg_page_reference_tracker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class page_reference_tracker: XeSqlPkg_page_reference_tracker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 partition_id;
	[WmiDataId(6), read] uint32 caller_partition_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint32 object;
	[WmiDataId(10), read] uint32 buffer_id;
	[WmiDataId(11), read, 
				XEMapId(122),
				BitMap { 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"128", 
					"134217728", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
	[WmiDataId(12), read, 
				XEMapId(11),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Read", 
					"Write" }
			] uint8 RWmode;
	[WmiDataId(13), read, 
				XEMapId(54),
				ValueMap { 
					"6", 
					"0", 
					"1", 
					"3", 
					"5", 
					"2", 
					"4" },
				Values { 
					"CLASS_COUNT", 
					"DATA_PAGE", 
					"INDEX_PAGE", 
					"MAP_PAGE", 
					"OTHER_PAGE", 
					"QE_PAGE", 
					"TEXT_PAGE" }
			] uint32 class0;
	[WmiDataId(14), read, 
				XEMapId(12),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Memory", 
					"Disk" }
			] uint8 location;
};
		
[dynamic: ToInstance, Description("Page is being looked up"): Amended,
    Guid("{e88032c5-2f9c-453a-8eb8-b7221bf8b056}"), locale("MS\\0x409"),
    DisplayName("page_reference_tracker"): Amended]
class XeSqlPkg_page_reference_tracker: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class page_reference_tracker: XeSqlPkg_page_reference_tracker
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 partition_id;
	[WmiDataId(6), read] uint32 caller_partition_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] uint64 allocation_unit_id;
	[WmiDataId(10), read] uint64 buffer_id;
	[WmiDataId(11), read, 
				XEMapId(122),
				BitMap { 
					"16", 
					"1048576", 
					"256", 
					"131072", 
					"262144", 
					"8192", 
					"2", 
					"64", 
					"128", 
					"134217728", 
					"65536", 
					"32768", 
					"8", 
					"4", 
					"2048", 
					"4194304", 
					"8388608", 
					"33554432", 
					"16384", 
					"67108864", 
					"2097152", 
					"524288", 
					"32", 
					"1", 
					"16777216", 
					"3221225472", 
					"4096", 
					"1024", 
					"512" },
				BitValues { 
					"AUDITED", 
					"CHECKWRITE", 
					"CHKGEN", 
					"COPYONWRITE", 
					"COPYWRITTEN", 
					"DBREMOVED", 
					"DIRTY", 
					"DONT_IGNORE", 
					"EMERG", 
					"FAST_PROMOTE", 
					"FLUSHING", 
					"FORCE_FLUSH_OR_LOG", 
					"HASHED", 
					"IO", 
					"IOERR", 
					"L2BPOOL", 
					"L2DIRTY", 
					"L2EVACIO", 
					"LAZYIO", 
					"LOG_BUFWRITE", 
					"LOGFORMATFULL", 
					"MINLOGGED", 
					"ONFREELIST", 
					"ONLRU", 
					"PFPOOL", 
					"PROTECTION", 
					"PTD", 
					"READ", 
					"SIMULATED" }
			] uint32 status;
	[WmiDataId(12), read, 
				XEMapId(11),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Read", 
					"Write" }
			] uint8 access_mode;
	[WmiDataId(13), read, 
				XEMapId(54),
				ValueMap { 
					"6", 
					"0", 
					"1", 
					"3", 
					"5", 
					"2", 
					"4" },
				Values { 
					"CLASS_COUNT", 
					"DATA_PAGE", 
					"INDEX_PAGE", 
					"MAP_PAGE", 
					"OTHER_PAGE", 
					"QE_PAGE", 
					"TEXT_PAGE" }
			] uint32 class0;
	[WmiDataId(14), read, 
				XEMapId(12),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Memory", 
					"Disk" }
			] uint8 location;
};
		
[dynamic: ToInstance, Description("Writing a log block to the log cache"): Amended,
    Guid("{744500C6-F799-47EF-95BE-92E3B14CB162}"), locale("MS\\0x409"),
    DisplayName("log_cache_write_block"): Amended]
class XeSqlPkg_log_cache_write_block: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_cache_write_block: XeSqlPkg_log_cache_write_block
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Asynchronous log write start"): Amended,
    Guid("{79568cbb-e3a8-4135-9b31-38f0c4ff022d}"), locale("MS\\0x409"),
    DisplayName("log_flush_start"): Amended]
class XeSqlPkg_log_flush_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_start: XeSqlPkg_log_flush_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 rows;
	[WmiDataId(10), read] uint32 pending_writes;
	[WmiDataId(11), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Log write complete"): Amended,
    Guid("{3f0402ef-0a07-4803-b6da-68d58ec64cc1}"), locale("MS\\0x409"),
    DisplayName("log_flush_complete"): Amended]
class XeSqlPkg_log_flush_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_complete: XeSqlPkg_log_flush_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint64 duration;
	[WmiDataId(9), read] uint32 write_size;
	[WmiDataId(10), read] uint32 rows;
	[WmiDataId(11), read] uint32 pending_writes;
	[WmiDataId(12), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Log write had to retry"): Amended,
    Guid("{a78246b7-1c7d-4b3f-ab7e-6445ff6bdc5c}"), locale("MS\\0x409"),
    DisplayName("log_flush_retry"): Amended]
class XeSqlPkg_log_flush_retry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_flush_retry: XeSqlPkg_log_flush_retry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint64 log_block_id;
	[WmiDataId(8), read] uint32 write_size;
	[WmiDataId(9), read] uint32 error;
};
		
[dynamic: ToInstance, Description("Target block to redo through set"): Amended,
    Guid("{3b626063-288f-4424-8d77-4466f93f4a14}"), locale("MS\\0x409"),
    DisplayName("redo_target_set"): Amended]
class XeSqlPkg_redo_target_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_target_set: XeSqlPkg_redo_target_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 log_block_id;
	[WmiDataId(6), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo stop point set"): Amended,
    Guid("{f4d5d354-f796-4165-87e1-06e9db6ceabc}"), locale("MS\\0x409"),
    DisplayName("redo_stop_set"): Amended]
class XeSqlPkg_redo_stop_set: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_stop_set: XeSqlPkg_redo_stop_set
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string stop_mark;
};
		
[dynamic: ToInstance, Description("Redo stop point clear"): Amended,
    Guid("{5e436c18-9e2c-4ab2-8742-19ff95394f3f}"), locale("MS\\0x409"),
    DisplayName("redo_stop_clear"): Amended]
class XeSqlPkg_redo_stop_clear: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_stop_clear: XeSqlPkg_redo_stop_clear
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread done with work"): Amended,
    Guid("{931cc3f8-c999-417b-9fb3-8b86c0d04a17}"), locale("MS\\0x409"),
    DisplayName("redo_caught_up"): Amended]
class XeSqlPkg_redo_caught_up: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_caught_up: XeSqlPkg_redo_caught_up
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread has entered to poll for redo work"): Amended,
    Guid("{db64ce29-9679-4e4e-ab6b-6db65c687da2}"), locale("MS\\0x409"),
    DisplayName("redo_worker_entry"): Amended]
class XeSqlPkg_redo_worker_entry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_worker_entry: XeSqlPkg_redo_worker_entry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo thread is leaving"): Amended,
    Guid("{299a9f2c-6273-437d-832f-6726f215ee6a}"), locale("MS\\0x409"),
    DisplayName("redo_worker_exit"): Amended]
class XeSqlPkg_redo_worker_exit: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_worker_exit: XeSqlPkg_redo_worker_exit
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Redo on a log record"): Amended,
    Guid("{8b4dc6aa-c655-4f19-a699-0613709c31f4}"), locale("MS\\0x409"),
    DisplayName("redo_single_record"): Amended]
class XeSqlPkg_redo_single_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class redo_single_record: XeSqlPkg_redo_single_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 slot_id;
	[WmiDataId(8), read] uint32 log_op_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string log_op_name;
};
		
[dynamic: ToInstance, Description("Allow customizable failures in the redopass function"): Amended,
    Guid("{CA54758C-1538-4FBC-BFCD-DAE864B76A3F}"), locale("MS\\0x409"),
    DisplayName("recovery_redo_failpoint"): Amended]
class XeSqlPkg_recovery_redo_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class recovery_redo_failpoint: XeSqlPkg_recovery_redo_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Allow customizable failures in double flush optimization with minimal logging"): Amended,
    Guid("{CA54758C-1538-4FBC-BFCD-EAE664B76A3F}"), locale("MS\\0x409"),
    DisplayName("minlog_doubleflush_failpoint"): Amended]
class XeSqlPkg_minlog_doubleflush_failpoint: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class minlog_doubleflush_failpoint: XeSqlPkg_minlog_doubleflush_failpoint
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 fail_location;
};
		
[dynamic: ToInstance, Description("Generate a log record"): Amended,
    Guid("{97f8878f-4674-46d6-b9c3-57176b62453a}"), locale("MS\\0x409"),
    DisplayName("log_single_record"): Amended]
class XeSqlPkg_log_single_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_single_record: XeSqlPkg_log_single_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint32 slot_id;
	[WmiDataId(8), read] sint32 used_size;
	[WmiDataId(9), read] sint64 reservation_size;
	[WmiDataId(10), read] uint32 log_op_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string log_op_name;
};
		
[dynamic: ToInstance, Description("Fires before reserving space for a log record"): Amended,
    Guid("{b7743dc0-d9aa-42ee-91d4-d36c9926e45a}"), locale("MS\\0x409"),
    DisplayName("reserve_log_space"): Amended]
class XeSqlPkg_reserve_log_space: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class reserve_log_space: XeSqlPkg_reserve_log_space
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 reserve_size;
	[WmiDataId(7), read] uint32 log_size;
	[WmiDataId(8), read] uint64 frag_count;
	[WmiDataId(9), read, Pointer] object  error_code_pointer;
};
		
[dynamic: ToInstance, Description("Issues a write request to disk."): Amended,
    Guid("{cd7f27aa-2ce4-4b16-bf62-22a0a8fa08b1}"), locale("MS\\0x409"),
    DisplayName("disk_write_async"): Amended]
class XeSqlPkg_disk_write_async: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_write_async: XeSqlPkg_disk_write_async
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  error_code_pointer;
	[WmiDataId(6), read] sint8  is_log_record;
	[WmiDataId(7), read, Pointer] object  file_handle;
	[WmiDataId(8), read] uint64 offset;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] uint32 size;
};
		
[dynamic: ToInstance, Description("Fires after IO flush for log records is complete."): Amended,
    Guid("{1bde4944-a679-4d4f-a2e7-d31f0e67ec69}"), locale("MS\\0x409"),
    DisplayName("log_io_complete"): Amended]
class XeSqlPkg_log_io_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_io_complete: XeSqlPkg_log_io_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(1),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Contiguous", 
					"Scatter/Gather" }
			] uint32 mode;
	[WmiDataId(6), read] sint8  is_read;
	[WmiDataId(7), read] uint64 duration;
	[WmiDataId(8), read, Pointer] object  file_handle;
	[WmiDataId(9), read] uint64 offset;
	[WmiDataId(10), read] uint32 database_id;
	[WmiDataId(11), read] uint16 file_id;
	[WmiDataId(12), read] uint16 filegroup_id;
	[WmiDataId(13), read] uint64 size;
	[WmiDataId(14), read, Pointer] object  error_code_pointer;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string path;
};
		
[dynamic: ToInstance, Description("Log record generation stall for outstanding writes to complete"): Amended,
    Guid("{20c57a0c-df39-4def-b4f8-47162bcb0908}"), locale("MS\\0x409"),
    DisplayName("log_generate_stall"): Amended]
class XeSqlPkg_log_generate_stall: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_generate_stall: XeSqlPkg_log_generate_stall
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 pending_writes;
	[WmiDataId(7), read] uint32 pending_bytes;
};
		
[dynamic: ToInstance, Description("Occurs when a log block is cached into Log Pool."): Amended,
    Guid("{9ef74c4f-b72a-4df1-a584-166fcb901777}"), locale("MS\\0x409"),
    DisplayName("log_block_cache"): Amended]
class XeSqlPkg_log_block_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_cache: XeSqlPkg_log_block_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint16 log_block_size;
	[WmiDataId(8), read] sint8  from_disk;
	[WmiDataId(9), read] sint8  incomplete;
	[WmiDataId(10), read] sint8  is_read_ahead;
	[WmiDataId(11), read] uint64 private_consumer_id;
	[WmiDataId(12), read, Pointer] object  cache_buffer_pointer;
};
		
[dynamic: ToInstance, Description("Occurs when a log cache buffer is replaced or removed."): Amended,
    Guid("{fb0b7b3d-92a4-4c6b-85cd-9ab30b9b193b}"), locale("MS\\0x409"),
    DisplayName("log_blocks_uncache"): Amended]
class XeSqlPkg_log_blocks_uncache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_blocks_uncache: XeSqlPkg_log_blocks_uncache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] uint64 last_log_block_id;
	[WmiDataId(8), read] uint64 private_consumer_id;
	[WmiDataId(9), read] uint16 weight;
	[WmiDataId(10), read, Pointer] object  cache_buffer_pointer;
};
		
[dynamic: ToInstance, Description("Occurs when a log block is consumed by a LogConsumer."): Amended,
    Guid("{f2aae9c4-e781-453b-9093-89d51d52fa1a}"), locale("MS\\0x409"),
    DisplayName("log_block_consume"): Amended]
class XeSqlPkg_log_block_consume: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_consume: XeSqlPkg_log_block_consume
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint64 consumer_id;
	[WmiDataId(8), read] uint16 log_block_size;
};
		
[dynamic: ToInstance, Description("Occurs when the indicator on whether any LogConsumer is interested in new log to be generated changes."): Amended,
    Guid("{201a4a8c-9659-4d2f-b2d9-9da9ba25a151}"), locale("MS\\0x409"),
    DisplayName("new_log_interest_flip"): Amended]
class XeSqlPkg_new_log_interest_flip: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class new_log_interest_flip: XeSqlPkg_new_log_interest_flip
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint8  interest;
};
		
[dynamic: ToInstance, Description("Occurs along with a log consumer's log consumption activity during its life time."): Amended,
    Guid("{a64d14b3-fb3e-4cc9-bc79-a165a01a71e3}"), locale("MS\\0x409"),
    DisplayName("log_consumer_act"): Amended]
class XeSqlPkg_log_consumer_act: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_act: XeSqlPkg_log_consumer_act
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read, 
				XEMapId(109),
				ValueMap { 
					"8", 
					"0", 
					"9", 
					"7", 
					"4", 
					"5", 
					"12", 
					"13", 
					"3", 
					"1", 
					"11", 
					"2", 
					"10", 
					"6" },
				Values { 
					"ComputedNextLogBlock", 
					"Constructed", 
					"DerefedCurrentLogBlock", 
					"GotNextBlock", 
					"HasSetFutureInterest", 
					"LockedLogBlock", 
					"LogBlocksProcessed", 
					"LogConsumerClosed", 
					"LogConsumerEndedScan", 
					"LogConsumerInited", 
					"LogConsumerReadAhead", 
					"LogConsumerStartedScan", 
					"RefedCurrentLogBlock", 
					"UnlockedLogBlock" }
			] uint32 activity_id;
};
		
[dynamic: ToInstance, Description("Occurs along with the persistence status of a log block in a shared cache buffer being reset to persistent"): Amended,
    Guid("{d079b8e4-1fe9-4936-befb-9367393707d3}"), locale("MS\\0x409"),
    DisplayName("log_block_persistence_reset"): Amended]
class XeSqlPkg_log_block_persistence_reset: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_persistence_reset: XeSqlPkg_log_block_persistence_reset
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint64 consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs along with a log block in a shared cache buffer being moved within the replacement set"): Amended,
    Guid("{1345aea2-e395-411f-a2eb-1d8bfb1df199}"), locale("MS\\0x409"),
    DisplayName("log_block_move"): Amended]
class XeSqlPkg_log_block_move: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_block_move: XeSqlPkg_log_block_move
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 log_block_id;
	[WmiDataId(7), read] uint16 old_weight;
	[WmiDataId(8), read] uint16 new_weight;
	[WmiDataId(9), read] uint8 new_position;
};
		
[dynamic: ToInstance, Description("Occurs along with a cache buffer's reference counter being incremented or decremented."): Amended,
    Guid("{b025cdc4-3c5e-4bf5-a5ab-363b66b53954}"), locale("MS\\0x409"),
    DisplayName("log_cache_buffer_refcounter_change"): Amended]
class XeSqlPkg_log_cache_buffer_refcounter_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_cache_buffer_refcounter_change: XeSqlPkg_log_cache_buffer_refcounter_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] uint64 last_log_block_id;
	[WmiDataId(8), read] uint64 private_consumer_id;
	[WmiDataId(9), read] uint8 change_type;
};
		
[dynamic: ToInstance, Description("Occurs along with a log consumer's reading a log block ahead."): Amended,
    Guid("{8ac09995-2859-4f75-a870-e1987f289cd5}"), locale("MS\\0x409"),
    DisplayName("log_consumer_read_ahead"): Amended]
class XeSqlPkg_log_consumer_read_ahead: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_read_ahead: XeSqlPkg_log_consumer_read_ahead
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] uint64 log_block_id;
};
		
[dynamic: ToInstance, Description("Occurs when log pool receives a memory status notification."): Amended,
    Guid("{187d1700-c899-4d47-b217-ee360416ae2a}"), locale("MS\\0x409"),
    DisplayName("log_pool_memory_status"): Amended]
class XeSqlPkg_log_pool_memory_status: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_pool_memory_status: XeSqlPkg_log_pool_memory_status
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(108),
				ValueMap { 
					"4", 
					"1", 
					"2", 
					"8", 
					"0" },
				Values { 
					"RESOURCE_MEM_STEADY", 
					"RESOURCE_MEMPHYSICAL_HIGH", 
					"RESOURCE_MEMPHYSICAL_LOW", 
					"RESOURCE_MEMVIRTUAL_LOW", 
					"RESOURCE_NOINFO" }
			] uint32 memory_status;
	[WmiDataId(6), read] uint64 stamp;
};
		
[dynamic: ToInstance, Description("Occurs when a disk log read is issued."): Amended,
    Guid("{13f1eb7f-2301-47fd-903f-45ca95b8f743}"), locale("MS\\0x409"),
    DisplayName("disk_log_read"): Amended]
class XeSqlPkg_disk_log_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_log_read: XeSqlPkg_disk_log_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] sint8  is_read_ahead;
	[WmiDataId(8), read] uint64 private_consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs when a disk log read is ignored."): Amended,
    Guid("{4ef4ebb1-2be8-4a7b-91bf-a4390bc6873e}"), locale("MS\\0x409"),
    DisplayName("disk_log_read_ignore"): Amended]
class XeSqlPkg_disk_log_read_ignore: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class disk_log_read_ignore: XeSqlPkg_disk_log_read_ignore
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 start_log_block_id;
	[WmiDataId(7), read] sint8  is_read_ahead;
	[WmiDataId(8), read] uint64 private_consumer_id;
};
		
[dynamic: ToInstance, Description("Occurs when a log consumer is initialized or closed."): Amended,
    Guid("{c518c77a-de42-40f6-b5e8-f34447709152}"), locale("MS\\0x409"),
    DisplayName("log_consumer_life"): Amended]
class XeSqlPkg_log_consumer_life: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class log_consumer_life: XeSqlPkg_log_consumer_life
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint64 consumer_id;
	[WmiDataId(7), read] sint8  is_alive;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string consumer_name;
};
		
[dynamic: ToInstance, Description("Occurs when the request for a lock was canceled, such as when the query requesting the lock was canceled. Use this event to monitor locks."): Amended,
    Guid("{8c797226-12f0-4dff-8f4a-acc719a619a0}"), locale("MS\\0x409"),
    DisplayName("lock_cancel"): Amended]
class XeSqlPkg_lock_cancel: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_cancel: XeSqlPkg_lock_cancel
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a request for a lock times out because another transaction holds a blocking lock on the required resource. The time-out duration is determined by the @@LOCK_TIMEOUT system function. Use this event to help troubleshoot blocking issues."): Amended,
    Guid("{f7927951-e117-4b1a-a741-c1d047b76912}"), locale("MS\\0x409"),
    DisplayName("lock_timeout"): Amended]
class XeSqlPkg_lock_timeout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_timeout: XeSqlPkg_lock_timeout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when an attempt to acquire a lock generates a deadlock. This event is raised for each participant in the deadlock."): Amended,
    Guid("{7ebe128e-fb90-4f2b-af4c-abc62336e478}"), locale("MS\\0x409"),
    DisplayName("lock_deadlock_chain"): Amended]
class XeSqlPkg_lock_deadlock_chain: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_deadlock_chain: XeSqlPkg_lock_deadlock_chain
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] uint32 deadlock_id;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 associated_object_id;
	[WmiDataId(19), read] sint16 session_id;
	[WmiDataId(20), read, 
				XEMapId(123),
				BitMap { 
					"4", 
					"16", 
					"8", 
					"1", 
					"64", 
					"2", 
					"32" },
				BitValues { 
					"EXCHANGE", 
					"EXTERNAL", 
					"GENERIC", 
					"LOCK", 
					"MATRIX_PARALLEL_QUERY", 
					"THREAD", 
					"WAITFOR" }
			] uint32 resource_owner_type;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a fine-grain lock is converted into a coarser-grain lock, such as when a row lock is converted into an object lock. Use this event to monitor how locks are being used on the server."): Amended,
    Guid("{cf7f0653-e16c-46b8-bdf4-5420bd5568a1}"), locale("MS\\0x409"),
    DisplayName("lock_escalation"): Amended]
class XeSqlPkg_lock_escalation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_escalation: XeSqlPkg_lock_escalation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read, 
				XEMapId(22),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Lock threshold", 
					"Memory threshold" }
			] uint8 escalation_cause;
	[WmiDataId(17), read] sint32 object_id;
	[WmiDataId(18), read] uint64 hobt_id;
	[WmiDataId(19), read] uint32 escalated_lock_count;
	[WmiDataId(20), read] uint32 hobt_lock_count;
	[WmiDataId(21), read, StringTermination("NullTerminated"), Format("w")] string statement;
	[WmiDataId(22), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a request for a lock times out because of a blocking lock that is being held by a different resource. This event is identical to lock_timeout, but excludes cases in which the time-out value is 0, such as when lock probes are used. Time-outs with a duration of 0 do not necessarily indicate a blocking problem."): Amended,
    Guid("{f9665fa9-d19a-48dd-a34e-5f8953972a21}"), locale("MS\\0x409"),
    DisplayName("lock_timeout_greater_than_0"): Amended]
class XeSqlPkg_lock_timeout_greater_than_0: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_timeout_greater_than_0: XeSqlPkg_lock_timeout_greater_than_0
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(6), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(7), read, 
				XEMapId(43),
				ValueMap { 
					"2", 
					"5", 
					"8", 
					"6", 
					"7", 
					"3", 
					"4", 
					"1" },
				Values { 
					"Cursor", 
					"ExclusiveXactWorkspace", 
					"LastLockInfoOwner", 
					"LockConflictNotificationObject", 
					"LockTableIterator", 
					"Session", 
					"SharedXactWorkspace", 
					"Transaction" }
			] uint32 owner_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read, Pointer] object  lockspace_workspace_id;
	[WmiDataId(11), read] uint32 lockspace_sub_id;
	[WmiDataId(12), read] uint32 lockspace_nest_id;
	[WmiDataId(13), read] uint32 resource_0;
	[WmiDataId(14), read] uint32 resource_1;
	[WmiDataId(15), read] uint32 resource_2;
	[WmiDataId(16), read] sint32 object_id;
	[WmiDataId(17), read] uint64 associated_object_id;
	[WmiDataId(18), read] uint64 duration;
	[WmiDataId(19), read, StringTermination("NullTerminated"), Format("w")] string resource_description;
	[WmiDataId(20), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Starting global lock acquire operation."): Amended,
    Guid("{ED326B14-AEAC-472F-BEB1-84B774562E85}"), locale("MS\\0x409"),
    DisplayName("glm_lock_acquire_begin"): Amended]
class XeSqlPkg_glm_lock_acquire_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_lock_acquire_begin: XeSqlPkg_glm_lock_acquire_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_id;
	[WmiDataId(7), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(8), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Ending global lock acquire operation."): Amended,
    Guid("{B9179196-6E8D-4FA4-A1C9-8942E9BA21AE}"), locale("MS\\0x409"),
    DisplayName("glm_lock_acquire_end"): Amended]
class XeSqlPkg_glm_lock_acquire_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_lock_acquire_end: XeSqlPkg_glm_lock_acquire_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_id;
	[WmiDataId(7), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(8), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Starting global lock release operation."): Amended,
    Guid("{36F1CB12-514E-4C19-A3B5-1BE78AE2E0E4}"), locale("MS\\0x409"),
    DisplayName("glm_lock_release_begin"): Amended]
class XeSqlPkg_glm_lock_release_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_lock_release_begin: XeSqlPkg_glm_lock_release_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_id;
	[WmiDataId(7), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(8), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Ending global lock release operation."): Amended,
    Guid("{1B655EC4-A3A7-4399-9011-D05A8DBCE9CB}"), locale("MS\\0x409"),
    DisplayName("glm_lock_release_end"): Amended]
class XeSqlPkg_glm_lock_release_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_lock_release_end: XeSqlPkg_glm_lock_release_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_id;
	[WmiDataId(7), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(8), read, 
				XEMapId(42),
				ValueMap { 
					"13", 
					"10", 
					"2", 
					"8", 
					"3", 
					"12", 
					"7", 
					"16", 
					"11", 
					"1", 
					"5", 
					"14", 
					"6", 
					"9", 
					"15", 
					"0", 
					"4" },
				Values { 
					"ALLOCATION_UNIT", 
					"APPLICATION", 
					"DATABASE", 
					"EXTENT", 
					"FILE", 
					"HOBT", 
					"KEY", 
					"LAST_RESOURCE", 
					"METADATA", 
					"NULL_RESOURCE", 
					"OBJECT", 
					"OIB", 
					"PAGE", 
					"RID", 
					"ROWGROUP", 
					"UNKNOWN_LOCK_RESOURCE", 
					"UNUSED1" }
			] uint32 resource_type;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment acquire lock request received."): Amended,
    Guid("{32D858D5-088C-416F-B9B7-5A1C433A9751}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_acquire_request"): Amended]
class XeSqlPkg_glm_primary_brick_acquire_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_acquire_request: XeSqlPkg_glm_primary_brick_acquire_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment acquire response generated."): Amended,
    Guid("{FF65F867-113F-464D-8842-88F80159BEB0}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_acquire_response"): Amended]
class XeSqlPkg_glm_primary_brick_acquire_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_acquire_response: XeSqlPkg_glm_primary_brick_acquire_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment release lock request received."): Amended,
    Guid("{A579E580-7E99-488B-B6EB-13868691BAF0}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_release_request"): Amended]
class XeSqlPkg_glm_primary_brick_release_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_release_request: XeSqlPkg_glm_primary_brick_release_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment release response generated."): Amended,
    Guid("{DE6CABC3-DA64-45D4-8711-F81CCAD99153}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_release_response"): Amended]
class XeSqlPkg_glm_primary_brick_release_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_release_response: XeSqlPkg_glm_primary_brick_release_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment acquire lock request received."): Amended,
    Guid("{24786D23-9955-4387-A311-6991444185A4}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_acquire_request"): Amended]
class XeSqlPkg_glm_local_brick_acquire_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_acquire_request: XeSqlPkg_glm_local_brick_acquire_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment acquire response generated."): Amended,
    Guid("{49737A4E-239C-432D-8AA1-2BBA16CBE16A}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_acquire_response"): Amended]
class XeSqlPkg_glm_local_brick_acquire_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_acquire_response: XeSqlPkg_glm_local_brick_acquire_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment release lock request received."): Amended,
    Guid("{C7021B52-5CA5-491C-B613-FD2797541A41}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_release_request"): Amended]
class XeSqlPkg_glm_local_brick_release_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_release_request: XeSqlPkg_glm_local_brick_release_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment release response generated."): Amended,
    Guid("{54EF8610-97E8-477A-811D-EA5B1158A5EB}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_release_response"): Amended]
class XeSqlPkg_glm_local_brick_release_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_release_response: XeSqlPkg_glm_local_brick_release_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment undo responses received."): Amended,
    Guid("{7ba964b9-0170-43d0-b2e6-e64902c36ff7}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_undo_response"): Amended]
class XeSqlPkg_glm_primary_brick_undo_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_undo_response: XeSqlPkg_glm_primary_brick_undo_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read] uint32 undo_responses_received;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Primary database segment undo request generated an exception."): Amended,
    Guid("{47527c07-7da6-4d50-adc2-f35ad9781952}"), locale("MS\\0x409"),
    DisplayName("glm_primary_brick_undo_exception"): Amended]
class XeSqlPkg_glm_primary_brick_undo_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_primary_brick_undo_exception: XeSqlPkg_glm_primary_brick_undo_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment undo lock request received."): Amended,
    Guid("{13F005E8-261B-46A5-9C14-338653ABBD97}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_undo_request"): Amended]
class XeSqlPkg_glm_local_brick_undo_request: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_undo_request: XeSqlPkg_glm_local_brick_undo_request
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Local database segment undo response generated."): Amended,
    Guid("{28AB7C99-984A-4E7E-A300-E14AC8EEA37B}"), locale("MS\\0x409"),
    DisplayName("glm_local_brick_undo_response"): Amended]
class XeSqlPkg_glm_local_brick_undo_response: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_local_brick_undo_response: XeSqlPkg_glm_local_brick_undo_response
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(7), read, 
				XEMapId(50),
				ValueMap { 
					"-2", 
					"-3", 
					"-7", 
					"-6", 
					"0", 
					"1", 
					"-5", 
					"-1", 
					"-4" },
				Values { 
					"CANCEL", 
					"DEADLOCK", 
					"KILL_BLOCKED_BY_SYSTEM_TASK", 
					"KILL_EXISTS", 
					"OK", 
					"OKWAIT", 
					"RESULTS_IN_DISTRIBUTED_MODE", 
					"TIMEDOUT", 
					"TMABORT" }
			] uint32 lock_result;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Exception event fired at AcquireDBLock to monitor proper exception handling."): Amended,
    Guid("{a6b626eb-ac56-45a6-ae1c-3777efe79e41}"), locale("MS\\0x409"),
    DisplayName("glm_acquire_database_lock_exception"): Amended]
class XeSqlPkg_glm_acquire_database_lock_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_acquire_database_lock_exception: XeSqlPkg_glm_acquire_database_lock_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(115),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"72", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"24", 
					"52", 
					"15", 
					"12", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"5", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRPCRowset", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 database_reference_type;
	[WmiDataId(7), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(8), read] uint32 timeout;
	[WmiDataId(9), read, 
				XEMapId(126),
				BitMap { 
					"1", 
					"4", 
					"0" },
				BitValues { 
					"ACQUIRE_SYSTEM_DB_LOCKS", 
					"ACQUIRE_TSO_GLOBAL_LOCK", 
					"DB_LOCK_FLAGS_NONE" }
			] uint32 lock_option;
	[WmiDataId(10), read, 
				XEMapId(117),
				ValueMap { 
					"2", 
					"4", 
					"0", 
					"1", 
					"8", 
					"16" },
				Values { 
					"GLM_POLICY_ALL_DB_SEGMENTS", 
					"GLM_POLICY_ALL_ONLINE_DB_SEGMENTS", 
					"GLM_POLICY_INVALID", 
					"GLM_POLICY_LOCAL", 
					"GLM_POLICY_MASTER_DB_SEGMENTS", 
					"GLM_POLICY_PRIMARY_DB_SEGMENT" }
			] uint32 lock_policy;
	[WmiDataId(11), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(12), read] sint32 error_number;
	[WmiDataId(13), read] sint32 severity;
	[WmiDataId(14), read] sint32 state;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Exception event fired at ReleaseDBLock to monitor proper exception handling."): Amended,
    Guid("{1d8548e5-da41-4057-ab80-de9909bae195}"), locale("MS\\0x409"),
    DisplayName("glm_release_database_lock_exception"): Amended]
class XeSqlPkg_glm_release_database_lock_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_release_database_lock_exception: XeSqlPkg_glm_release_database_lock_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read, 
				XEMapId(115),
				ValueMap { 
					"59", 
					"16", 
					"17", 
					"30", 
					"25", 
					"20", 
					"4", 
					"28", 
					"72", 
					"21", 
					"45", 
					"46", 
					"7", 
					"34", 
					"35", 
					"40", 
					"43", 
					"38", 
					"37", 
					"47", 
					"42", 
					"48", 
					"41", 
					"44", 
					"36", 
					"39", 
					"18", 
					"66", 
					"24", 
					"52", 
					"15", 
					"12", 
					"61", 
					"6", 
					"56", 
					"69", 
					"68", 
					"8", 
					"13", 
					"14", 
					"55", 
					"50", 
					"62", 
					"49", 
					"58", 
					"33", 
					"63", 
					"67", 
					"27", 
					"70", 
					"26", 
					"0", 
					"1", 
					"22", 
					"11", 
					"54", 
					"71", 
					"60", 
					"51", 
					"5", 
					"19", 
					"9", 
					"64", 
					"23", 
					"10", 
					"3", 
					"65", 
					"2", 
					"29", 
					"31", 
					"32", 
					"57", 
					"53" },
				Values { 
					"edbrtAddBrick", 
					"edbrtAutoDb", 
					"edbrtAutoDbLock", 
					"edbrtAutoEnlistXactForRPC", 
					"edbrtAutoOpen", 
					"edbrtBackup", 
					"edbrtCheckPoint", 
					"edbrtCloseall", 
					"edbrtCount", 
					"edbrtCreateDB", 
					"edbrtDbccLock", 
					"edbrtDbccRecover", 
					"edbrtDBDeAlloc", 
					"edbrtDbMgr", 
					"edbrtDbMgrAttachDB", 
					"edbrtDbMgrChangeDBName", 
					"edbrtDbMgrChangeDBState", 
					"edbrtDbMgrCreateFile", 
					"edbrtDbMgrDetachDB", 
					"edbrtDbMgrDropDB", 
					"edbrtDbMgrProcessTskPkt", 
					"edbrtDbMgrRebuildLog", 
					"edbrtDbMgrRecollateDB", 
					"edbrtDbMgrShutdown", 
					"edbrtDbMgrSnapshot", 
					"edbrtDbMgrStartTmpDB", 
					"edbrtDbSetOpts", 
					"edbrtDeletePartitionDB", 
					"edbrtDownlevelFsGC", 
					"edbrtDownlevelFsLogTrunc", 
					"edbrtExecLevel", 
					"edbrtFederatedAGEPersist", 
					"edbrtFileTable", 
					"edbrtGhost", 
					"edbrtHadrDbMgr", 
					"edbrtHkRefreshFile", 
					"edbrtHkStorageCleanup", 
					"edbrtHobStats", 
					"edbrtLckMgr", 
					"edbrtLoginLogout", 
					"edbrtLogMgrTest", 
					"edbrtLogshipping", 
					"edbrtLPM", 
					"edbrtMeddata", 
					"edbrtMetadataDiscovery", 
					"edbrtOpenUnstartedDB", 
					"edbrtPairing", 
					"edbrtPartitionDBRecovery", 
					"edbrtProducer", 
					"edbrtQdsDb", 
					"edbrtQNTest", 
					"edbrtReadOnlyXdes", 
					"edbrtReadWriteXdes", 
					"edbrtRecovery", 
					"edbrtReencryptionScan", 
					"edbrtReplaceDb", 
					"edbrtReplacePartitionDb", 
					"edbrtReserveId", 
					"edbrtRestorFromReplica", 
					"edbrtRPCRowset", 
					"edbrtSecurity", 
					"edbrtSEDDL", 
					"edbrtSetPartition", 
					"edbrtSqlSrcDbMgr", 
					"edbrtStartup", 
					"edbrtSystem", 
					"edbrtTrackingTableCleanup", 
					"edbrtTransfer", 
					"edbrtTransientReplica", 
					"edbrtVirtFileStats", 
					"edbrtWorkfile", 
					"edbrtXdesTsVerMgrUpdate", 
					"eSSBQueueMonitor" }
			] uint32 database_reference_type;
	[WmiDataId(7), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(8), read] uint32 timeout;
	[WmiDataId(9), read, 
				XEMapId(126),
				BitMap { 
					"1", 
					"4", 
					"0" },
				BitValues { 
					"ACQUIRE_SYSTEM_DB_LOCKS", 
					"ACQUIRE_TSO_GLOBAL_LOCK", 
					"DB_LOCK_FLAGS_NONE" }
			] uint32 lock_option;
	[WmiDataId(10), read, 
				XEMapId(117),
				ValueMap { 
					"2", 
					"4", 
					"0", 
					"1", 
					"8", 
					"16" },
				Values { 
					"GLM_POLICY_ALL_DB_SEGMENTS", 
					"GLM_POLICY_ALL_ONLINE_DB_SEGMENTS", 
					"GLM_POLICY_INVALID", 
					"GLM_POLICY_LOCAL", 
					"GLM_POLICY_MASTER_DB_SEGMENTS", 
					"GLM_POLICY_PRIMARY_DB_SEGMENT" }
			] uint32 lock_policy;
	[WmiDataId(11), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(12), read] sint32 error_number;
	[WmiDataId(13), read] sint32 severity;
	[WmiDataId(14), read] sint32 state;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Exception event fired at AcquireTableLock to monitor proper exception handling."): Amended,
    Guid("{ca21fdc7-5d40-4aef-85c7-6a9c4b38002f}"), locale("MS\\0x409"),
    DisplayName("glm_acquire_table_lock_exception"): Amended]
class XeSqlPkg_glm_acquire_table_lock_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_acquire_table_lock_exception: XeSqlPkg_glm_acquire_table_lock_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(8), read] uint32 timeout;
	[WmiDataId(9), read, 
				XEMapId(117),
				ValueMap { 
					"2", 
					"4", 
					"0", 
					"1", 
					"8", 
					"16" },
				Values { 
					"GLM_POLICY_ALL_DB_SEGMENTS", 
					"GLM_POLICY_ALL_ONLINE_DB_SEGMENTS", 
					"GLM_POLICY_INVALID", 
					"GLM_POLICY_LOCAL", 
					"GLM_POLICY_MASTER_DB_SEGMENTS", 
					"GLM_POLICY_PRIMARY_DB_SEGMENT" }
			] uint32 lock_policy;
	[WmiDataId(10), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(11), read] sint32 error_number;
	[WmiDataId(12), read] sint32 severity;
	[WmiDataId(13), read] sint32 state;
};
		
[dynamic: ToInstance, Description("Global Lock Manager: Exception event fired at ReleaseTableLock to monitor proper exception handling."): Amended,
    Guid("{ed3a4943-9619-4a27-98f4-d48133abd84c}"), locale("MS\\0x409"),
    DisplayName("glm_release_table_lock_exception"): Amended]
class XeSqlPkg_glm_release_table_lock_exception: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class glm_release_table_lock_exception: XeSqlPkg_glm_release_table_lock_exception
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 table_id;
	[WmiDataId(7), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(8), read] uint32 timeout;
	[WmiDataId(9), read, 
				XEMapId(117),
				ValueMap { 
					"2", 
					"4", 
					"0", 
					"1", 
					"8", 
					"16" },
				Values { 
					"GLM_POLICY_ALL_DB_SEGMENTS", 
					"GLM_POLICY_ALL_ONLINE_DB_SEGMENTS", 
					"GLM_POLICY_INVALID", 
					"GLM_POLICY_LOCAL", 
					"GLM_POLICY_MASTER_DB_SEGMENTS", 
					"GLM_POLICY_PRIMARY_DB_SEGMENT" }
			] uint32 lock_policy;
	[WmiDataId(10), read, 
				XEMapId(116),
				ValueMap { 
					"0", 
					"20", 
					"10", 
					"2", 
					"12", 
					"1", 
					"11" },
				Values { 
					"GLM_REQ_SOURCE_INVALID", 
					"GLM_REQ_SOURCE_LAST", 
					"GLM_REQ_SOURCE_SPLIT", 
					"GLM_REQ_SOURCE_XACT_GETTABLELOCK", 
					"GLM_REQ_SOURCE_XACT_RELEASETABLELOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_GETDBLOCK", 
					"GLM_REQ_SOURCE_XACTWORKSPACE_RELEASEDBLOCK" }
			] uint32 request_source;
	[WmiDataId(11), read] sint32 error_number;
	[WmiDataId(12), read] sint32 severity;
	[WmiDataId(13), read] sint32 state;
};
		
[dynamic: ToInstance, Description("Occurs when a query uses a bitmap filter and the bitmap filter is disabled. Use this event to troubleshoot performance problems for queries with bitmap filters, and to identify queries where the bitmap filter was disabled because it is nonselective."): Amended,
    Guid("{40615cca-f45c-40de-a514-f62e62cb896e}"), locale("MS\\0x409"),
    DisplayName("bitmap_disabled_warning"): Amended]
class XeSqlPkg_bitmap_disabled_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_disabled_warning: XeSqlPkg_bitmap_disabled_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Bitmap preferred memory calculation"): Amended,
    Guid("{a9ac4fd9-3493-4274-8043-bd29e3fc74eb}"), locale("MS\\0x409"),
    DisplayName("bitmap_memory_preferred"): Amended]
class XeSqlPkg_bitmap_memory_preferred: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_memory_preferred: XeSqlPkg_bitmap_memory_preferred
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 build_rows;
	[WmiDataId(6), read] uint64 probe_rows;
	[WmiDataId(7), read] sint32 replicated_bitmaps;
	[WmiDataId(8), read] uint64 preferred_memory;
};
		
[dynamic: ToInstance, Description("Bitmap runtime trace"): Amended,
    Guid("{ce42853d-d31d-4b9d-a0c7-74bbd2971686}"), locale("MS\\0x409"),
    DisplayName("bitmap_runtime_trace"): Amended]
class XeSqlPkg_bitmap_runtime_trace: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bitmap_runtime_trace: XeSqlPkg_bitmap_runtime_trace
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(56),
				ValueMap { 
					"3", 
					"2", 
					"4", 
					"5", 
					"1" },
				Values { 
					"Disabled", 
					"Enabled", 
					"InRowActivated", 
					"InRowLowLevelActivated", 
					"MostSelective" }
			] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction is coordinated through Microsoft Distributed Transaction Coordinator."): Amended,
    Guid("{c8841a86-613d-456e-aeb1-ce7cf00941ba}"), locale("MS\\0x409"),
    DisplayName("dtc_transaction"): Amended]
class XeSqlPkg_dtc_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class dtc_transaction: XeSqlPkg_dtc_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(17),
				ValueMap { 
					"256", 
					"4096", 
					"65536", 
					"1048576" },
				Values { 
					"Read Uncommitted", 
					"Read Committed", 
					"Repeatable Read", 
					"Serializable" }
			] uint32 isolation_level;
	[WmiDataId(6), read, 
				XEMapId(20),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9", 
					"10", 
					"11", 
					"12", 
					"13", 
					"14", 
					"15", 
					"16", 
					"17", 
					"18", 
					"19", 
					"20", 
					"21", 
					"22", 
					"25" },
				Values { 
					"Get address", 
					"Propagate Transaction", 
					"Do Work", 
					"Close connection", 
					"Session has not participated in a DTC transaction", 
					"IDLE", 
					"Creating a new DTC transaction", 
					"Enlisting in a DTC transaction", 
					"DTC Transaction active", 
					"Internal commit", 
					"Internal abort", 
					"Internal asynchronous abort", 
					"Imported Transaction Active", 
					"Prepare Initialize", 
					"Preparing Transaction", 
					"Transaction is prepared", 
					"Transaction is aborting", 
					"Transaction is committing", 
					"Asynchronous Abort", 
					"Disaster Detected", 
					"Abort Drain", 
					"Asynchronous Abort Complete", 
					"TM failed while in prepared state", 
					"Unknown" }
			] uint8 transaction_state;
	[WmiDataId(7), read] sint64 transaction_id;
	[WmiDataId(8), read, Extension("Guid")] guid unit_of_work_id;
};
		
[dynamic: ToInstance, Description("Occurs every time that SQL Server executes a SELECT, INSERT, UPDATE, or DELETE statement. Use this event to monitor if a query is running in parallel."): Amended,
    Guid("{e831bae6-7eb0-4c15-a25e-c77ee39f98e8}"), locale("MS\\0x409"),
    DisplayName("degree_of_parallelism"): Amended]
class XeSqlPkg_degree_of_parallelism: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class degree_of_parallelism: XeSqlPkg_degree_of_parallelism
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 dop;
	[WmiDataId(6), read, 
				XEMapId(24),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5" },
				Values { 
					"Select", 
					"Insert", 
					"Update", 
					"Delete", 
					"Merge" }
			] uint8 statement_type;
	[WmiDataId(7), read] uint32 workspace_memory_grant_kb;
};
		
[dynamic: ToInstance, Description("Occurs when a SQL Server transaction begins, completes, rolls back or executes a savepoint. Use this event to monitor transaction behavior when troubleshooting applications, triggers or stored procedures."): Amended,
    Guid("{EAC6E752-960D-4966-B97D-CDCF6E05D786}"), locale("MS\\0x409"),
    DisplayName("sql_transaction"): Amended]
class XeSqlPkg_sql_transaction: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_transaction: XeSqlPkg_sql_transaction
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read, 
				XEMapId(18),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3" },
				Values { 
					"Begin", 
					"Commit", 
					"Rollback", 
					"Savepoint" }
			] uint8 transaction_state;
	[WmiDataId(7), read, 
				XEMapId(19),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"System", 
					"User" }
			] uint8 transaction_type;
	[WmiDataId(8), read] sint64 transaction_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string savepoint_name;
};
		
[dynamic: ToInstance, Description("Occurs when a table or index scan starts."): Amended,
    Guid("{8b324833-6652-42cc-9bb7-466ad4b9b099}"), locale("MS\\0x409"),
    DisplayName("scan_started"): Amended]
class XeSqlPkg_scan_started: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class scan_started: XeSqlPkg_scan_started
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a table or index scan stops."): Amended,
    Guid("{e1577ad4-1430-4b05-a47b-596763814836}"), locale("MS\\0x409"),
    DisplayName("scan_stopped"): Amended]
class XeSqlPkg_scan_stopped: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class scan_stopped: XeSqlPkg_scan_stopped
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read] uint32 index_id;
	[WmiDataId(8), read] uint64 hobt_id;
	[WmiDataId(9), read] uint64 logical_reads;
	[WmiDataId(10), read] uint64 physical_reads;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a record is added to the SQL Server transaction log. This is a very high volume event that will affect the performance of the server. Therefore, you should use appropriate filtering to reduce the number of events, and only use this event for targeted troubleshooting during a short time period."): Amended,
    Guid("{F985F9B5-ADE0-4328-A70D-0A0A631B2599}"), locale("MS\\0x409"),
    DisplayName("transaction_log"): Amended]
class XeSqlPkg_transaction_log: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class transaction_log: XeSqlPkg_transaction_log
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read] uint32 log_record_size;
	[WmiDataId(8), read, 
				XEMapId(49),
				ValueMap { 
					"130", 
					"150", 
					"160", 
					"201", 
					"128", 
					"148", 
					"154", 
					"214", 
					"17", 
					"129", 
					"20", 
					"149", 
					"18", 
					"176", 
					"134", 
					"180", 
					"173", 
					"217", 
					"142", 
					"223", 
					"3", 
					"11", 
					"135", 
					"181", 
					"174", 
					"144", 
					"21", 
					"153", 
					"161", 
					"202", 
					"13", 
					"166", 
					"16", 
					"136", 
					"212", 
					"213", 
					"133", 
					"1", 
					"145", 
					"230", 
					"232", 
					"231", 
					"137", 
					"140", 
					"138", 
					"139", 
					"2", 
					"22", 
					"221", 
					"141", 
					"132", 
					"127", 
					"210", 
					"143", 
					"6", 
					"5", 
					"4", 
					"146", 
					"0", 
					"216", 
					"131", 
					"220", 
					"126", 
					"200", 
					"206", 
					"19", 
					"215", 
					"240", 
					"7", 
					"10", 
					"211", 
					"162", 
					"204", 
					"205", 
					"203", 
					"207", 
					"12", 
					"152" },
				Values { 
					"LOP_ABORT_XACT", 
					"LOP_BEGIN_CKPT", 
					"LOP_BEGIN_RECOVERY", 
					"LOP_BEGIN_UPDATE", 
					"LOP_BEGIN_XACT", 
					"LOP_BP_DBVER", 
					"LOP_BUF_WRITE", 
					"LOP_BULK_EXT_ALLOCATION", 
					"LOP_CLEAR_GAM_BITS", 
					"LOP_COMMIT_XACT", 
					"LOP_COMPRESSION_INFO", 
					"LOP_COPY_VERSION_INFO", 
					"LOP_COUNT_DELTA", 
					"LOP_CREATE_ALLOCCHAIN", 
					"LOP_CREATE_FILE", 
					"LOP_CREATE_FTCAT", 
					"LOP_CREATE_INDEX", 
					"LOP_CREATE_PHYSICAL_FILE", 
					"LOP_CREATE_STREAMFILE", 
					"LOP_CSI_ROWGROUP", 
					"LOP_DELETE_ROWS", 
					"LOP_DELETE_SPLIT", 
					"LOP_DROP_FILE", 
					"LOP_DROP_FTCAT", 
					"LOP_DROP_INDEX", 
					"LOP_DROP_STREAMFILE", 
					"LOP_ENCRYPT_PAGE", 
					"LOP_END_CKPT", 
					"LOP_END_RECOVERY", 
					"LOP_END_UPDATE", 
					"LOP_EXPUNGE_ROWS", 
					"LOP_FEDTM_INFO", 
					"LOP_FILE_HDR_MODIFY", 
					"LOP_FILE_OP", 
					"LOP_FILESTREAM_INFO_BEGIN", 
					"LOP_FILESTREAM_INFO_END", 
					"LOP_FORGET_XACT", 
					"LOP_FORMAT_PAGE", 
					"LOP_FS_DOWNLEVEL_OP", 
					"LOP_HK", 
					"LOP_HK_CHAINED", 
					"LOP_HK_CHECKPOINT", 
					"LOP_HOBT_DDL", 
					"LOP_HOBT_DELTA", 
					"LOP_IDENT_NEWVAL", 
					"LOP_IDENT_SENTVAL", 
					"LOP_INSERT_ROWS", 
					"LOP_INSYSXACT", 
					"LOP_INVALIDATE_CACHE", 
					"LOP_LOCK_XACT", 
					"LOP_MARK_SAVEPOINT", 
					"LOP_MAX_PAGE_OP", 
					"LOP_MAX_REPL_OP", 
					"LOP_MIGRATE_LOCKS", 
					"LOP_MODIFY_COLUMNS", 
					"LOP_MODIFY_HEADER", 
					"LOP_MODIFY_ROW", 
					"LOP_MODIFY_STREAMFILE_HDR", 
					"LOP_NULL", 
					"LOP_PAGE_REENCRYPT", 
					"LOP_PREP_XACT", 
					"LOP_RANGE_INSERT", 
					"LOP_REMOVE_VERSION_INFO", 
					"LOP_REPL_COMMAND", 
					"LOP_REPL_NOOP", 
					"LOP_ROOT_CHANGE", 
					"LOP_SECURITY_OP", 
					"LOP_SEREPL_MSG", 
					"LOP_SET_BITS", 
					"LOP_SET_FREE_SPACE", 
					"LOP_SHRINK_NOOP", 
					"LOP_TENANT_LOG", 
					"LOP_TEXT_INFO_BEGIN", 
					"LOP_TEXT_INFO_END", 
					"LOP_TEXT_POINTER", 
					"LOP_TEXT_VALUE", 
					"LOP_UNDO_DELETE_SPLIT", 
					"LOP_XACT_CKPT" }
			] uint32 operation;
	[WmiDataId(9), read, 
				XEMapId(61),
				ValueMap { 
					"20", 
					"23", 
					"29", 
					"2", 
					"27", 
					"7", 
					"24", 
					"31", 
					"17", 
					"8", 
					"1", 
					"10", 
					"12", 
					"4", 
					"3", 
					"19", 
					"34", 
					"25", 
					"14", 
					"0", 
					"13", 
					"11", 
					"26", 
					"18", 
					"9", 
					"32", 
					"21", 
					"5", 
					"6", 
					"30", 
					"28", 
					"33" },
				Values { 
					"BOOT_PAGE", 
					"BOOT_PAGE_CKPT", 
					"BULK_OPERATION_PAGE", 
					"CLUSTERED", 
					"DBCC_FORMATTED", 
					"DIAGNOSTICS", 
					"DIFF_MAP", 
					"ENCRYPT_UNALLOC_PAGE", 
					"FILE_HEADER", 
					"GAM", 
					"HEAP", 
					"IAM", 
					"IDENTITY_VALUE", 
					"INDEX_INTERIOR", 
					"INDEX_LEAF", 
					"MARK_AS_GHOST", 
					"MAX_CONTEXT", 
					"ML_MAP", 
					"NONSYS_SPLIT", 
					"NULL", 
					"OBJECT_ID", 
					"PFS", 
					"REMOVE_VERSION_INFO", 
					"SCHEMA_VERSION", 
					"SGAM", 
					"SORT_PAGE", 
					"SYSCONFIG_PAGE", 
					"TEXT_MIX", 
					"TEXT_TREE", 
					"TRACKED_XDES", 
					"UNLINKED_REORG_PAGE", 
					"WORK_FILE_PAGE" }
			] uint8 context;
	[WmiDataId(10), read] uint32 replication_command;
	[WmiDataId(11), read, Extension("WmiTime")] uint64 transaction_start_time;
	[WmiDataId(12), read] uint64 alloc_unit_id;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when there is insufficient memory to process the build input of a hash join. This results in either a hash recursion when the build input is partitioned, or a hash bailout when the partitioning of the build input exceeds the maximum recursion level. Use this event together with any of the query_pre_execution_showplan or query_post_execution_showplan events to determine which operation in the generated plan is causing the hash warning."): Amended,
    Guid("{2a93ef5b-aa3f-4262-bec0-9cb529f0abfb}"), locale("MS\\0x409"),
    DisplayName("hash_warning"): Amended]
class XeSqlPkg_hash_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hash_warning: XeSqlPkg_hash_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(23),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Recursion", 
					"Bailout" }
			] uint8 hash_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
	[WmiDataId(7), read] uint32 recursion_level;
};
		
[dynamic: ToInstance, Description("Occurs when a T-SQL statement or stored procedure waits more than one second for a memory grant or when the initial attempt to get memory fails. Use this event in combination with events that identify waits to troubleshoot contention issues that impact performance"): Amended,
    Guid("{a0efad9f-1ef5-4382-9991-f7fc4a73577d}"), locale("MS\\0x409"),
    DisplayName("execution_warning"): Amended]
class XeSqlPkg_execution_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class execution_warning: XeSqlPkg_execution_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read, 
				XEMapId(55),
				ValueMap { 
					"2", 
					"1" },
				Values { 
					"TIMEOUT_SUBCLASS", 
					"WAIT_SUBCLASS" }
			] uint8 warning_type;
	[WmiDataId(7), read, StringTermination("NullTerminated"), Format("w")] string server_memory_grants;
};
		
[dynamic: ToInstance, Description("Occurs when the sort operation on an executing query does not fit into memory. This event is not generated for sort operations caused by index creation, only for sort operations in a query. (For example, an Order By in a Select statement.) Use this event to identify queries that perform slowly because of the sort operation, particularly when the warning_type = 2, indicating multiple passes over the data were required to sort"): Amended,
    Guid("{1d52af22-ca17-4680-a0cc-04e9bb6a13fe}"), locale("MS\\0x409"),
    DisplayName("sort_warning"): Amended]
class XeSqlPkg_sort_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sort_warning: XeSqlPkg_sort_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(13),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Single pass", 
					"Multiple pass" }
			] uint8 sort_warning_type;
	[WmiDataId(6), read] uint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when the batch operation to build a hash table encounters low memory condition and switches to row mode operation.  Use this event to identify performance issues due to low memory condition."): Amended,
    Guid("{b1bee1e2-510f-4b4f-935e-bfe2c31badfc}"), locale("MS\\0x409"),
    DisplayName("batch_hash_table_build_bailout"): Amended]
class XeSqlPkg_batch_hash_table_build_bailout: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_hash_table_build_bailout: XeSqlPkg_batch_hash_table_build_bailout
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
	[WmiDataId(6), read] sint64 memory_limit_kb;
};
		
[dynamic: ToInstance, Description("Occurs when a query tries to get more memory grant during execution. Failure to get this additional memory grant may cause the query slowdown."): Amended,
    Guid("{065241ee-6e9e-4044-a00e-9c9e2e527b8b}"), locale("MS\\0x409"),
    DisplayName("additional_memory_grant"): Amended]
class XeSqlPkg_additional_memory_grant: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class additional_memory_grant: XeSqlPkg_additional_memory_grant
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint64 requested_memory_kb;
	[WmiDataId(6), read] sint64 granted_memory_kb;
	[WmiDataId(7), read] uint32 resource_pool_id;
};
		
[dynamic: ToInstance, Description("Occurs when the server memory usage increases or decreases by more than either 1 megabyte (MB) or 5% of the maximum server memory, whichever is larger. Use this event to identify periods of increased memory usage on the server."): Amended,
    Guid("{db00668b-8f86-4d4e-8273-2ccf2233e729}"), locale("MS\\0x409"),
    DisplayName("server_memory_change"): Amended]
class XeSqlPkg_server_memory_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class server_memory_change: XeSqlPkg_server_memory_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(15),
				ValueMap { 
					"1", 
					"2" },
				Values { 
					"Server Memory Increased", 
					"Server Memory Decreased" }
			] uint8 memory_change;
	[WmiDataId(6), read] uint32 new_memory_size_mb;
};
		
[dynamic: ToInstance, Description("Occurs when any of the data or log files for a database changes size. Use this event to monitor changes to the size of database files."): Amended,
    Guid("{43b6dde6-c1e5-4db5-b537-1ecdf1a625b2}"), locale("MS\\0x409"),
    DisplayName("database_file_size_change"): Amended]
class XeSqlPkg_database_file_size_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_file_size_change: XeSqlPkg_database_file_size_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read, 
				XEMapId(16),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Data file", 
					"Log file" }
			] uint8 file_type;
	[WmiDataId(9), read] sint8  is_automatic;
	[WmiDataId(10), read] uint64 total_size_kb;
	[WmiDataId(11), read] sint64 size_change_kb;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string file_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the memory communication buffers for a query with multiple Parallelism operators become full, resulting in one of the operators writing to TempDB. If this happens multiple times in a single query plan the query performance is impacted. Use this event in conjunction with any of the *_showplan events to determine which operation in the generated plan is causing the exchange spill using the node_id field"): Amended,
    Guid("{9b753fe3-3ee6-46ea-98f9-a586417e071f}"), locale("MS\\0x409"),
    DisplayName("exchange_spill"): Amended]
class XeSqlPkg_exchange_spill: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class exchange_spill: XeSqlPkg_exchange_spill
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read, 
				XEMapId(3),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Begin", 
					"End" }
			] uint32 opcode;
};
		
[dynamic: ToInstance, Description("Occurs when a task has been blocked longer than the time that is specified by the sp_configure blocked process threshold setting. This event is not triggered by system tasks or by tasks that are waiting for non-deadlock-detectable resources. Use this event to troubleshoot blocked processes. (By default, blocked process reports are not generated.)"): Amended,
    Guid("{ac07082f-7a0a-4e85-9fd7-600b64bc7d93}"), locale("MS\\0x409"),
    DisplayName("blocked_process_report"): Amended]
class XeSqlPkg_blocked_process_report: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class blocked_process_report: XeSqlPkg_blocked_process_report
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 duration;
	[WmiDataId(6), read] sint16 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 lock_mode;
	[WmiDataId(10), read] sint64 transaction_id;
	[WmiDataId(11), read, 
				XEMapId(123),
				BitMap { 
					"4", 
					"16", 
					"8", 
					"1", 
					"64", 
					"2", 
					"32" },
				BitValues { 
					"EXCHANGE", 
					"EXTERNAL", 
					"GENERIC", 
					"LOCK", 
					"MATRIX_PARALLEL_QUERY", 
					"THREAD", 
					"WAITFOR" }
			] uint32 resource_owner_type;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string blocked_process;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when the state of a database mirror has changed. Use this event to monitor the condition of a database mirror."): Amended,
    Guid("{df604481-ed79-4590-9f7c-cd9f8874675f}"), locale("MS\\0x409"),
    DisplayName("database_mirroring_state_change"): Amended]
class XeSqlPkg_database_mirroring_state_change: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_mirroring_state_change: XeSqlPkg_database_mirroring_state_change
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(62),
				ValueMap { 
					"8", 
					"9", 
					"7", 
					"10", 
					"14", 
					"0", 
					"13", 
					"5", 
					"12", 
					"11", 
					"6", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"AutomaticFailover", 
					"Disabled", 
					"ManualFailover", 
					"NoQuorum", 
					"NotificationCount", 
					"NullNotification", 
					"PrimaryCatchingUp", 
					"PrimaryDied", 
					"PrimaryRunningExposed", 
					"SecondaryCatchingUp", 
					"SecondaryDied", 
					"ShippingAsPrimary", 
					"ShippingAsPrimaryNoWitness", 
					"ShippingAsSecondary", 
					"ShippingAsSecondaryNoWitness" }
			] uint8 new_state;
	[WmiDataId(6), read, 
				XEMapId(62),
				ValueMap { 
					"8", 
					"9", 
					"7", 
					"10", 
					"14", 
					"0", 
					"13", 
					"5", 
					"12", 
					"11", 
					"6", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"AutomaticFailover", 
					"Disabled", 
					"ManualFailover", 
					"NoQuorum", 
					"NotificationCount", 
					"NullNotification", 
					"PrimaryCatchingUp", 
					"PrimaryDied", 
					"PrimaryRunningExposed", 
					"SecondaryCatchingUp", 
					"SecondaryDied", 
					"ShippingAsPrimary", 
					"ShippingAsPrimaryNoWitness", 
					"ShippingAsSecondary", 
					"ShippingAsSecondaryNoWitness" }
			] uint8 prior_state;
	[WmiDataId(7), read] uint32 database_id;
	[WmiDataId(8), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string state_change_desc;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process to indicate the progress of the build operation. Each stage of an online index build operation generates an event. Use this event to monitor online index builds."): Amended,
    Guid("{bfcb6b84-b925-4293-9da7-ebeb01d0cfad}"), locale("MS\\0x409"),
    DisplayName("progress_report_online_index_operation"): Amended]
class XeSqlPkg_progress_report_online_index_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class progress_report_online_index_operation: XeSqlPkg_progress_report_online_index_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(21),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"Start", 
					"Stage 1 execution begin", 
					"Stage 1 execution end", 
					"Stage 2 execution begin", 
					"Stage 2 execution end", 
					"Inserted row count", 
					"Done" }
			] uint8 build_stage;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint64 duration;
	[WmiDataId(10), read] uint64 rows_inserted;
	[WmiDataId(11), read] uint64 parallel_process_thread_id;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs during an online index build process to indicate the progress of the build operation. Each stage of an online index build operation generates an event. Use this event to monitor online index builds."): Amended,
    Guid("{bfcb6b84-b925-4293-9da7-ebeb01d0cfad}"), locale("MS\\0x409"),
    DisplayName("progress_report_online_index_operation"): Amended]
class XeSqlPkg_progress_report_online_index_operation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(2)]
class progress_report_online_index_operation: XeSqlPkg_progress_report_online_index_operation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(21),
				ValueMap { 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7" },
				Values { 
					"Start", 
					"Stage 1 execution begin", 
					"Stage 1 execution end", 
					"Stage 2 execution begin", 
					"Stage 2 execution end", 
					"Inserted row count", 
					"Done" }
			] uint8 build_stage;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
	[WmiDataId(8), read] uint32 index_id;
	[WmiDataId(9), read] uint32 partition_number;
	[WmiDataId(10), read] uint64 partition_id;
	[WmiDataId(11), read] uint64 duration;
	[WmiDataId(12), read] uint64 rows_inserted;
	[WmiDataId(13), read] uint64 parallel_process_thread_id;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string index_name;
	[WmiDataId(15), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(16), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when a page is added to the suspect_pages table in the msdb database. This event is issued asynchronously from the insertion of a corresponding page into the suspect_pages table. Therefore, a job that is listening to this event may not find the correlating suspect_pages entry immediately."): Amended,
    Guid("{47f601cd-ac21-4ce0-a8b4-9436aa7ab5cd}"), locale("MS\\0x409"),
    DisplayName("database_suspect_data_page"): Amended]
class XeSqlPkg_database_suspect_data_page: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class database_suspect_data_page: XeSqlPkg_database_suspect_data_page
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint16 file_id;
	[WmiDataId(7), read] uint32 page_id;
	[WmiDataId(8), read, 
				XEMapId(57),
				ValueMap { 
					"2", 
					"7", 
					"6", 
					"8", 
					"0", 
					"1", 
					"5", 
					"4", 
					"3" },
				Values { 
					"BAD_CHECKSUM", 
					"DEALLOCATED", 
					"FORMATTED", 
					"ILLEGAL_HIGH", 
					"ILLEGAL_LOW", 
					"IO_ERROR", 
					"REPAIRED", 
					"RESTORED", 
					"TORN_PAGE" }
			] uint8 page_error;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string database_name;
};
		
[dynamic: ToInstance, Description("Occurs when Resource Governor detects that a query has exceeded the CPU threshold that is specified for REQUEST_MAX_CPU_TIME_SEC. The detection interval is five seconds. The event is guaranteed to detect the queries that exceed the threshold by at least five seconds. If a query exceeds the threshold by less than five seconds, the detection might be missed, depending on the timing of the query and the time of the last detection sweep."): Amended,
    Guid("{bf253c2c-2eaa-4b02-b101-5e11d7d25b45}"), locale("MS\\0x409"),
    DisplayName("cpu_threshold_exceeded"): Amended]
class XeSqlPkg_cpu_threshold_exceeded: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class cpu_threshold_exceeded: XeSqlPkg_cpu_threshold_exceeded
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 cpu_time;
	[WmiDataId(6), read] sint16 session_id;
	[WmiDataId(7), read] uint32 group_id;
};
		
[dynamic: ToInstance, Description("Process an invalidate cache log record"): Amended,
    Guid("{411CA545-DFFD-4408-8D2F-C1074FFE6636}"), locale("MS\\0x409"),
    DisplayName("process_invalidate_cache_logrec"): Amended]
class XeSqlPkg_process_invalidate_cache_logrec: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class process_invalidate_cache_logrec: XeSqlPkg_process_invalidate_cache_logrec
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_type;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string keys;
};
		
[dynamic: ToInstance, Description("Remove database cache"): Amended,
    Guid("{894B5454-9285-406A-B825-9675C0420047}"), locale("MS\\0x409"),
    DisplayName("remove_database_cache"): Amended]
class XeSqlPkg_remove_database_cache: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class remove_database_cache: XeSqlPkg_remove_database_cache
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
};
		
[dynamic: ToInstance, Description("Page allocated"): Amended,
    Guid("{29c4a861-b98d-4c5b-9bef-ab3f35f8fbf5}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_page_allocated"): Amended]
class XeSqlPkg_buffer_pool_page_allocated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_page_allocated: XeSqlPkg_buffer_pool_page_allocated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  worker_address;
	[WmiDataId(6), read] uint64 number_pages;
	[WmiDataId(7), read] uint64 page_size;
	[WmiDataId(8), read] uint64 page_location;
	[WmiDataId(9), read, 
				XEMapId(67),
				ValueMap { 
					"2", 
					"3", 
					"5", 
					"0", 
					"4", 
					"1" },
				Values { 
					"EMERGENCY", 
					"LARGEPAGE", 
					"LAST", 
					"NONE", 
					"RESERVATION", 
					"SINGLE" }
			] uint32 allocator_type;
	[WmiDataId(10), read] uint32 numa_node_id;
	[WmiDataId(11), read, 
				XEMapId(124),
				BitMap { 
					"1", 
					"16", 
					"4", 
					"32", 
					"0", 
					"8", 
					"2" },
				BitValues { 
					"ColdBuffer", 
					"DecommitPage", 
					"ForShortTermUse", 
					"L2DiskIo", 
					"NoStealOption", 
					"NoZeroing", 
					"PartOfReservation" }
			] uint32 steal_options;
	[WmiDataId(12), read] uint32 pool_id;
};
		
[dynamic: ToInstance, Description("Page freed"): Amended,
    Guid("{4c0968d6-535b-453e-bef4-80332559b0d6}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_page_freed"): Amended]
class XeSqlPkg_buffer_pool_page_freed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_page_freed: XeSqlPkg_buffer_pool_page_freed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Pointer] object  worker_address;
	[WmiDataId(6), read] uint64 number_pages;
	[WmiDataId(7), read] uint64 page_size;
	[WmiDataId(8), read] uint64 page_location;
	[WmiDataId(9), read] uint32 numa_node_id;
	[WmiDataId(10), read, 
				XEMapId(124),
				BitMap { 
					"1", 
					"16", 
					"4", 
					"32", 
					"0", 
					"8", 
					"2" },
				BitValues { 
					"ColdBuffer", 
					"DecommitPage", 
					"ForShortTermUse", 
					"L2DiskIo", 
					"NoStealOption", 
					"NoZeroing", 
					"PartOfReservation" }
			] uint32 steal_options;
};
		
[dynamic: ToInstance, Description("Occurs when new extents are allocated during index building. Use this event to indentify how extents are used by an index."): Amended,
    Guid("{72833EED-0E7A-4248-87AF-EBCD6C8D57BE}"), locale("MS\\0x409"),
    DisplayName("index_build_extents_allocation"): Amended]
class XeSqlPkg_index_build_extents_allocation: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class index_build_extents_allocation: XeSqlPkg_index_build_extents_allocation
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 thread_internal_id;
	[WmiDataId(6), read] uint32 file_id;
	[WmiDataId(7), read] uint32 extents_number;
	[WmiDataId(8), read] uint32 breaks_number;
	[WmiDataId(9), read] uint32 first_extent_id;
};
		
[dynamic: ToInstance, Description("Pre-allocating new cache range for a Sequence object.See system view sys.sequences for more details."): Amended,
    Guid("{9ce55442-0d75-4355-922d-0eec384825dd}"), locale("MS\\0x409"),
    DisplayName("metadata_persist_last_value_for_sequence"): Amended]
class XeSqlPkg_metadata_persist_last_value_for_sequence: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_persist_last_value_for_sequence: XeSqlPkg_metadata_persist_last_value_for_sequence
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 sequence_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string persisted_value;
};
		
[dynamic: ToInstance, Description("Occurs when the extent activation cache has reached its max size and we have to go into overflow mechanism."): Amended,
    Guid("{681CD116-629D-4708-A6B1-AA73937A62A7}"), locale("MS\\0x409"),
    DisplayName("extent_activation_cache_overflow"): Amended]
class XeSqlPkg_extent_activation_cache_overflow: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class extent_activation_cache_overflow: XeSqlPkg_extent_activation_cache_overflow
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 cache_max_count;
	[WmiDataId(6), read] uint32 current_overflow_count;
};
		
[dynamic: ToInstance, Description("Occurs immediately before QVM context is serialized and shipped, and immediately after it is received and deserialized. Use this to get a dump of shipped/received QVM context data."): Amended,
    Guid("{e98b6c20-9bbd-42e1-817b-b0dad3de3538}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_shipping"): Amended]
class XeSqlPkg_queryvm_context_shipping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_shipping: XeSqlPkg_queryvm_context_shipping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(33),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint8 dump_point;
	[WmiDataId(6), read] sint32 remote_exchange_node_id;
	[WmiDataId(7), read] sint16 remote_exchange_thread_id;
	[WmiDataId(8), read] uint64 connect_brick_id;
	[WmiDataId(9), read] uint64 query_id;
	[WmiDataId(10), read] uint64 context_sessionid;
	[WmiDataId(11), read] uint64 context_sessiontoken;
	[WmiDataId(12), read] uint64 context_brickgenerationid;
	[WmiDataId(13), read] sint8  context_issysadmin;
	[WmiDataId(14), read] sint8  context_isdac;
	[WmiDataId(15), read] sint16 context_dbcompatlevel;
	[WmiDataId(16), read] sint64 context_schidprocpcp;
	[WmiDataId(17), read] sint64 context_objidprocpcp;
	[WmiDataId(18), read] sint64 context_dbidprocpcp;
	[WmiDataId(19), read, Pointer] object  context_dbso;
	[WmiDataId(20), read] uint32 context_dbso_useropt1;
	[WmiDataId(21), read] uint32 context_dbso_useropt2;
	[WmiDataId(22), read] uint32 context_dbso_useropt1setmask;
	[WmiDataId(23), read] sint64 context_dbso_idtinsert_objid;
	[WmiDataId(24), read] sint8  context_dbso_idtinsert_state;
	[WmiDataId(25), read] uint16 context_dbso_idtinsert_dbid;
	[WmiDataId(26), read] sint64 context_dbso_rowcnt;
	[WmiDataId(27), read] sint64 context_dbso_statlist;
	[WmiDataId(28), read] sint64 context_dbso_textsize;
	[WmiDataId(29), read] sint64 context_dbso_offsets;
	[WmiDataId(30), read] uint64 context_dbso_locktimeout;
	[WmiDataId(31), read] uint64 context_dbso_querygov;
	[WmiDataId(32), read] sint64 context_dbso_dtfmt;
	[WmiDataId(33), read] sint64 context_dbso_daydatefirst;
	[WmiDataId(34), read] sint64 context_dbso_ddlckpri;
	[WmiDataId(35), read] sint64 context_dbso_isolvl;
	[WmiDataId(36), read] sint64 context_dbso_fipsflag;
	[WmiDataId(37), read] sint16 context_dbso_langid;
};
		
[dynamic: ToInstance, Description("Occurs immediately before QVM context is serialized and written back, and immediately after it is received and deserialized. Use this to get a snapshot of writeback QVM context data."): Amended,
    Guid("{f28b1522-fcbe-449e-967e-feeb2cc6c009}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_writeback"): Amended]
class XeSqlPkg_queryvm_context_writeback: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_writeback: XeSqlPkg_queryvm_context_writeback
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(33),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Send", 
					"Receive" }
			] uint8 dump_point;
	[WmiDataId(6), read] sint32 remote_exchange_node_id;
	[WmiDataId(7), read] sint16 remote_exchange_thread_id;
	[WmiDataId(8), read] uint64 connect_brick_id;
	[WmiDataId(9), read] uint64 query_id;
	[WmiDataId(10), read] sint64 context_newidt;
	[WmiDataId(11), read] sint64 context_lasterror;
};
		
[dynamic: ToInstance, Description("Occurs whenever some context that fits in Int64 is accessed from within QVM."): Amended,
    Guid("{ebb1fb89-644a-4e1b-b129-d5f300f692a6}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_access_int64"): Amended]
class XeSqlPkg_queryvm_context_access_int64: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_access_int64: XeSqlPkg_queryvm_context_access_int64
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 remote_exchange_node_id;
	[WmiDataId(6), read] sint16 remote_exchange_thread_id;
	[WmiDataId(7), read] uint64 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read, 
				XEMapId(35),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"DbAndSetOpts", 
					"SessionId", 
					"IsSysAdmin", 
					"IsDac", 
					"DbCompatLevel", 
					"SchidProcPcp", 
					"ObjidProcPcp", 
					"DbidProcPcp", 
					"RetStat", 
					"LastError" }
			] uint8 context_accessed_name;
	[WmiDataId(10), read] sint64 context_accessed_value;
};
		
[dynamic: ToInstance, Description("Occurs whenever CDbAndSetOpts is accessed from within QVM."): Amended,
    Guid("{11486fbd-a345-45c4-8f2d-4d4a313d5f70}"), locale("MS\\0x409"),
    DisplayName("queryvm_context_access_cdbandsetopts"): Amended]
class XeSqlPkg_queryvm_context_access_cdbandsetopts: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class queryvm_context_access_cdbandsetopts: XeSqlPkg_queryvm_context_access_cdbandsetopts
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 remote_exchange_node_id;
	[WmiDataId(6), read] sint16 remote_exchange_thread_id;
	[WmiDataId(7), read] uint64 connect_brick_id;
	[WmiDataId(8), read] uint64 query_id;
	[WmiDataId(9), read, 
				XEMapId(35),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4", 
					"5", 
					"6", 
					"7", 
					"8", 
					"9" },
				Values { 
					"DbAndSetOpts", 
					"SessionId", 
					"IsSysAdmin", 
					"IsDac", 
					"DbCompatLevel", 
					"SchidProcPcp", 
					"ObjidProcPcp", 
					"DbidProcPcp", 
					"RetStat", 
					"LastError" }
			] uint8 context_accessed_name;
	[WmiDataId(10), read, Pointer] object  context_dbso;
	[WmiDataId(11), read] uint32 context_dbso_useropt1;
	[WmiDataId(12), read] uint32 context_dbso_useropt2;
	[WmiDataId(13), read] uint32 context_dbso_useropt1setmask;
	[WmiDataId(14), read] sint64 context_dbso_idtinsert_objid;
	[WmiDataId(15), read] sint8  context_dbso_idtinsert_state;
	[WmiDataId(16), read] uint16 context_dbso_idtinsert_dbid;
	[WmiDataId(17), read] sint64 context_dbso_rowcnt;
	[WmiDataId(18), read] sint64 context_dbso_statlist;
	[WmiDataId(19), read] sint64 context_dbso_textsize;
	[WmiDataId(20), read] sint64 context_dbso_offsets;
	[WmiDataId(21), read] uint64 context_dbso_locktimeout;
	[WmiDataId(22), read] uint64 context_dbso_querygov;
	[WmiDataId(23), read] sint64 context_dbso_dtfmt;
	[WmiDataId(24), read] sint64 context_dbso_daydatefirst;
	[WmiDataId(25), read] sint64 context_dbso_ddlckpri;
	[WmiDataId(26), read] sint64 context_dbso_isolvl;
	[WmiDataId(27), read] sint64 context_dbso_fipsflag;
	[WmiDataId(28), read] sint16 context_dbso_langid;
};
		
[dynamic: ToInstance, Description("ThreadCache node was successfully checked out."): Amended,
    Guid("{088c0665-1a55-4d56-96ed-44b5f711c8ad}"), locale("MS\\0x409"),
    DisplayName("thread_cache_cache_event"): Amended]
class XeSqlPkg_thread_cache_cache_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_cache_event: XeSqlPkg_thread_cache_cache_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  session_match;
	[WmiDataId(6), read] sint8  cpu_match;
	[WmiDataId(7), read] uint64 last_session_id;
	[WmiDataId(8), read] uint16 node_status;
};
		
[dynamic: ToInstance, Description("Occurs when an expression is not natively supported in batch processing mode and a wrapper of row-by-row evaluation is used."): Amended,
    Guid("{ac22d90e-c9fb-485f-b597-b70de87fd5e0}"), locale("MS\\0x409"),
    DisplayName("expression_compile_stop_batch_processing"): Amended]
class XeSqlPkg_expression_compile_stop_batch_processing: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class expression_compile_stop_batch_processing: XeSqlPkg_expression_compile_stop_batch_processing
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Process performance object. The event occurs once every 15 seconds for both the SQL Server and SQL Agent processes."): Amended,
    Guid("{D4B15C2A-61A8-43C7-AD1F-DAD6867191AF}"), locale("MS\\0x409"),
    DisplayName("perfobject_process"): Amended]
class XeSqlPkg_perfobject_process: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_process: XeSqlPkg_perfobject_process
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_privileged_time;
	[WmiDataId(6), read] uint64 percent_processor_time;
	[WmiDataId(7), read] uint64 percent_user_time;
	[WmiDataId(8), read] uint64 virtual_bytes;
	[WmiDataId(9), read] uint64 virtual_bytes_peak;
	[WmiDataId(10), read] uint64 working_set;
	[WmiDataId(11), read] uint64 working_set_private;
	[WmiDataId(12), read] uint64 working_set_peak;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the System performance object. The event occurs once every 15 seconds."): Amended,
    Guid("{CA7C68E2-B99A-4D85-82C3-1F8CF0222D5F}"), locale("MS\\0x409"),
    DisplayName("perfobject_system"): Amended]
class XeSqlPkg_perfobject_system: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_system: XeSqlPkg_perfobject_system
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_registry_quota_in_use;
	[WmiDataId(6), read] uint64 alignment_fixups_per_second;
	[WmiDataId(7), read] uint64 context_switches_per_second;
	[WmiDataId(8), read] uint64 exception_dispatches_per_second;
	[WmiDataId(9), read] uint64 file_control_bytes_per_second;
	[WmiDataId(10), read] uint64 file_control_operations_per_second;
	[WmiDataId(11), read] uint64 file_data_operations_per_second;
	[WmiDataId(12), read] uint64 file_read_bytes_per_second;
	[WmiDataId(13), read] uint64 file_read_operations_per_second;
	[WmiDataId(14), read] uint64 file_write_bytes_per_second;
	[WmiDataId(15), read] uint64 file_write_operations_per_second;
	[WmiDataId(16), read] uint64 floating_emulations_per_second;
	[WmiDataId(17), read] uint64 processes;
	[WmiDataId(18), read] uint64 processor_queue_length;
	[WmiDataId(19), read] uint64 system_calls_per_second;
	[WmiDataId(20), read] uint64 system_up_time;
	[WmiDataId(21), read] uint64 threads;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Logical Disk performance object. The event occurs once every 15 seconds for each hard or fixed disk drive."): Amended,
    Guid("{3E1FA98F-891B-46FE-84C4-3A4313329F73}"), locale("MS\\0x409"),
    DisplayName("perfobject_logicaldisk"): Amended]
class XeSqlPkg_perfobject_logicaldisk: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_logicaldisk: XeSqlPkg_perfobject_logicaldisk
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_disk_read_time;
	[WmiDataId(6), read] uint64 percent_disk_time;
	[WmiDataId(7), read] uint64 percent_disk_write_time;
	[WmiDataId(8), read] uint64 percent_free_space;
	[WmiDataId(9), read] uint64 percent_idle_time;
	[WmiDataId(10), read] uint64 average_disk_bytes_per_read;
	[WmiDataId(11), read] uint64 average_disk_bytes_per_transfer;
	[WmiDataId(12), read] uint64 average_disk_bytes_per_write;
	[WmiDataId(13), read] uint64 average_disk_queue_length;
	[WmiDataId(14), read] uint64 average_disk_read_queue_length;
	[WmiDataId(15), read] uint64 average_disk_seconds_per_read;
	[WmiDataId(16), read] uint64 average_disk_seconds_per_transfer;
	[WmiDataId(17), read] uint64 average_disk_seconds_per_write;
	[WmiDataId(18), read] uint64 average_disk_write_queue_length;
	[WmiDataId(19), read] uint64 current_disk_queue_length;
	[WmiDataId(20), read] uint64 disk_bytes_per_second;
	[WmiDataId(21), read] uint64 disk_read_bytes_per_second;
	[WmiDataId(22), read] uint64 disk_reads_per_second;
	[WmiDataId(23), read] uint64 disk_transfers_per_second;
	[WmiDataId(24), read] uint64 disk_write_bytes_per_second;
	[WmiDataId(25), read] uint64 disk_writes_per_second;
	[WmiDataId(26), read] uint64 free_megabytes;
	[WmiDataId(27), read] uint64 split_io_per_second;
	[WmiDataId(28), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Returns a set of counters associated with the Processor performance object. The event occurs once every 15 seconds for each processor in the system."): Amended,
    Guid("{6800FCD7-959E-48A2-9BFF-FBAACF601728}"), locale("MS\\0x409"),
    DisplayName("perfobject_processor"): Amended]
class XeSqlPkg_perfobject_processor: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class perfobject_processor: XeSqlPkg_perfobject_processor
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 percent_c1_time;
	[WmiDataId(6), read] uint64 percent_c2_time;
	[WmiDataId(7), read] uint64 percent_c3_time;
	[WmiDataId(8), read] uint64 percent_dpc_time;
	[WmiDataId(9), read] uint64 percent_idle_time;
	[WmiDataId(10), read] uint64 percent_interrupt_time;
	[WmiDataId(11), read] uint64 percent_maximum_frequency;
	[WmiDataId(12), read] uint64 percent_priority_time;
	[WmiDataId(13), read] uint64 percent_privileged_time;
	[WmiDataId(14), read] uint64 percent_processor_time;
	[WmiDataId(15), read] uint64 percent_user_time;
	[WmiDataId(16), read] uint64 c1_transitions_per_second;
	[WmiDataId(17), read] uint64 c2_transitions_per_second;
	[WmiDataId(18), read] uint64 c3_transitions_per_second;
	[WmiDataId(19), read] uint64 dpc_rate;
	[WmiDataId(20), read] uint64 dpcs_queued_per_second;
	[WmiDataId(21), read] uint64 interrupts_per_second;
	[WmiDataId(22), read] uint64 parking_status;
	[WmiDataId(23), read] uint64 processor_frequency;
	[WmiDataId(24), read] uint64 processor_state_flags;
	[WmiDataId(25), read, StringTermination("NullTerminated"), Format("w")] string instance_name;
};
		
[dynamic: ToInstance, Description("Occurs when an operator outputs significantly more rows than estimated by the Query Optimizer. Use this event to identify queries that may be using sub-optimal plans due to cardinality estimate inaccuracy. Using this event can have a significant performance overhead so it should only be used when troubleshooting or monitoring specific problems for brief periods of time."): Amended,
    Guid("{2D02FF8C-3E15-46EA-8838-893568EC8863}"), locale("MS\\0x409"),
    DisplayName("inaccurate_cardinality_estimate"): Amended]
class XeSqlPkg_inaccurate_cardinality_estimate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class inaccurate_cardinality_estimate: XeSqlPkg_inaccurate_cardinality_estimate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 node_id;
	[WmiDataId(6), read] uint32 thread_id;
	[WmiDataId(7), read] uint64 estimated_rows;
	[WmiDataId(8), read] uint64 actual_rows;
	[WmiDataId(9), read] uint32 fire_count;
};
		
[dynamic: ToInstance, Description("Occurs when a spool is opened."): Amended,
    Guid("{a9070c09-e2db-49eb-922e-9a5974332248}"), locale("MS\\0x409"),
    DisplayName("query_execution_spool_open"): Amended]
class XeSqlPkg_query_execution_spool_open: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_spool_open: XeSqlPkg_query_execution_spool_open
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 query_operation_node_id;
	[WmiDataId(6), read] sint8  is_primary;
	[WmiDataId(7), read] sint8  is_hybrid;
	[WmiDataId(8), read] sint8  is_segment;
	[WmiDataId(9), read] sint8  is_multiparent;
	[WmiDataId(10), read] sint8  is_eager;
	[WmiDataId(11), read] sint8  is_stack;
	[WmiDataId(12), read] sint8  keep_workfile_around;
	[WmiDataId(13), read] sint8  is_index_on_the_fly;
	[WmiDataId(14), read] sint8  is_index_cache;
	[WmiDataId(15), read] sint8  has_one_row_optimization;
	[WmiDataId(16), read] sint8  support_large_objects;
	[WmiDataId(17), read] sint8  prefetch_large_objects;
	[WmiDataId(18), read] sint8  is_top_one;
	[WmiDataId(19), read] sint8  is_parallel;
};
		
[dynamic: ToInstance, Description("Occurs when a secondary spool is opened before primary for the first time or after a rebind."): Amended,
    Guid("{194a5a42-7f4a-4115-a3a2-d72625a98955}"), locale("MS\\0x409"),
    DisplayName("query_execution_spool_secondary_open_before_primary"): Amended]
class XeSqlPkg_query_execution_spool_secondary_open_before_primary: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_spool_secondary_open_before_primary: XeSqlPkg_query_execution_spool_secondary_open_before_primary
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 secondary_spool_query_operation_node_id;
	[WmiDataId(6), read] uint32 primary_spool_query_operation_node_id;
	[WmiDataId(7), read] sint8  primary_spool_never_opened;
};
		
[dynamic: ToInstance, Description("RPC thread cache Session Context generated for shipping."): Amended,
    Guid("{d39b0d21-feaf-4acd-8e6e-81eefbb2eac3}"), locale("MS\\0x409"),
    DisplayName("thread_cache_context_shipping"): Amended]
class XeSqlPkg_thread_cache_context_shipping: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_context_shipping: XeSqlPkg_thread_cache_context_shipping
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Full", 
					"Partial" }
			] uint8 shipped_type;
	[WmiDataId(6), read] uint64 last_session_id;
};
		
[dynamic: ToInstance, Description("Remote context is being initialized for thread cache."): Amended,
    Guid("{e13a7b97-8856-4c48-8cab-aeece98d3c3b}"), locale("MS\\0x409"),
    DisplayName("thread_cache_remote_context_setup"): Amended]
class XeSqlPkg_thread_cache_remote_context_setup: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class thread_cache_remote_context_setup: XeSqlPkg_thread_cache_remote_context_setup
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(34),
				ValueMap { 
					"0", 
					"1" },
				Values { 
					"Full", 
					"Partial" }
			] uint8 setup_type;
	[WmiDataId(6), read] uint64 last_session_id;
};
		
[dynamic: ToInstance, Description("Occurs when a Window Spool operator uses on-disk work table."): Amended,
    Guid("{8502D00B-FE2F-4257-BCE6-626F996F0DF7}"), locale("MS\\0x409"),
    DisplayName("window_spool_ondisk_warning"): Amended]
class XeSqlPkg_window_spool_ondisk_warning: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class window_spool_ondisk_warning: XeSqlPkg_window_spool_ondisk_warning
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operation_node_id;
};
		
[dynamic: ToInstance, Description("Occurs when a filter eliminates column store segment during scan."): Amended,
    Guid("{40327607-1075-4408-86db-abadc0cc7e33}"), locale("MS\\0x409"),
    DisplayName("column_store_segment_eliminate"): Amended]
class XeSqlPkg_column_store_segment_eliminate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_segment_eliminate: XeSqlPkg_column_store_segment_eliminate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 transaction_id_high;
	[WmiDataId(6), read] uint32 transaction_id_low;
	[WmiDataId(7), read] uint64 rowset_id;
	[WmiDataId(8), read] uint32 rowgroup_id;
};
		
[dynamic: ToInstance, Description("Occurs when a list of filters for column store index is pushed down to storage engine."): Amended,
    Guid("{44f06131-6c95-434e-bdc6-2da258dbf7e5}"), locale("MS\\0x409"),
    DisplayName("column_store_filters_pushdown"): Amended]
class XeSqlPkg_column_store_filters_pushdown: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_filters_pushdown: XeSqlPkg_column_store_filters_pushdown
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint8  filter_list_overflow;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string filter_list;
};
		
[dynamic: ToInstance, Description("Occurs when we issue read-ahead for a rowgroup during a scan on a column store."): Amended,
    Guid("{9ef7a104-3db0-4a24-9083-dfd7dc6ef93a}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_readahead_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_readahead_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_rowgroup_readahead_issued: XeSqlPkg_column_store_rowgroup_readahead_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
};
		
[dynamic: ToInstance, Description("Occurs when we issue read for a rowgroup during a scan on a column store."): Amended,
    Guid("{7a0e34e4-e016-40e7-baea-ccf6e214c849}"), locale("MS\\0x409"),
    DisplayName("column_store_rowgroup_read_issued"): Amended]
class XeSqlPkg_column_store_rowgroup_read_issued: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class column_store_rowgroup_read_issued: XeSqlPkg_column_store_rowgroup_read_issued
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 rowgroup_id;
	[WmiDataId(6), read] uint64 hobt_id;
	[WmiDataId(7), read] uint64 accessor_id;
};
		
[dynamic: ToInstance, Description("Occurs when batch hash join uses separate hash column in hash table."): Amended,
    Guid("{10edb158-6321-4adb-9481-927d29c087e7}"), locale("MS\\0x409"),
    DisplayName("batch_hash_join_separate_hash_column"): Amended]
class XeSqlPkg_batch_hash_join_separate_hash_column: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class batch_hash_join_separate_hash_column: XeSqlPkg_batch_hash_join_separate_hash_column
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 node_id;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has started for online index build with LOBs."): Amended,
    Guid("{5301411e-9655-428f-a639-dbe08c7c4d32}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_begin"): Amended]
class XeSqlPkg_oiblob_cleanup_begin: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_begin: XeSqlPkg_oiblob_cleanup_begin
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
};
		
[dynamic: ToInstance, Description("Occurs when cleanup has finished for online index build with LOBs."): Amended,
    Guid("{076263b5-d451-4a8c-837d-3be4430f101a}"), locale("MS\\0x409"),
    DisplayName("oiblob_cleanup_end"): Amended]
class XeSqlPkg_oiblob_cleanup_end: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class oiblob_cleanup_end: XeSqlPkg_oiblob_cleanup_end
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read] uint64 owner_rowset;
	[WmiDataId(7), read] uint64 tracking_table_rowset;
	[WmiDataId(8), read] uint64 secondary_rowset;
	[WmiDataId(9), read, 
				XEMapId(32),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"4" },
				Values { 
					"Cleanup lock acquire failed", 
					"Cleanup data mismatch", 
					"Cleanup batch complete", 
					"Cleanup finished" }
			] uint32 cleanup_result;
};
		
[dynamic: ToInstance, Description("Bad memory detected by the operating system"): Amended,
    Guid("{5ab1467a-d800-4739-bc3f-d681d974c3dc}"), locale("MS\\0x409"),
    DisplayName("bad_memory_detected"): Amended]
class XeSqlPkg_bad_memory_detected: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bad_memory_detected: XeSqlPkg_bad_memory_detected
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 bad_page_count;
};
		
[dynamic: ToInstance, Description("Database page with bad memory detected by the operating system"): Amended,
    Guid("{8a1a5ec8-082f-4e03-95f7-60913fba0824}"), locale("MS\\0x409"),
    DisplayName("bad_memory_fixed"): Amended]
class XeSqlPkg_bad_memory_fixed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class bad_memory_fixed: XeSqlPkg_bad_memory_fixed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 database_id;
	[WmiDataId(6), read, Pointer] object  page_address;
	[WmiDataId(7), read] uint16 file_id;
	[WmiDataId(8), read] uint32 page_id;
	[WmiDataId(9), read] sint8  dirty_page;
	[WmiDataId(10), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string file_path;
};
		
[dynamic: ToInstance, Description("Occurs just before deleting all the extended recovery forks."): Amended,
    Guid("{7fe74b94-0f71-485c-9fbe-21b542078b95}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_deleteAllXrf_beforeEntry"): Amended]
class XeSqlPkg_hadr_xrf_deleteAllXrf_beforeEntry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_deleteAllXrf_beforeEntry: XeSqlPkg_hadr_xrf_deleteAllXrf_beforeEntry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs just before deleting the recovery LSN in the metadata."): Amended,
    Guid("{65fdc0d5-814e-4186-a614-3eced3adb0d6}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_deleteRecLsn_beforeEntry"): Amended]
class XeSqlPkg_hadr_xrf_deleteRecLsn_beforeEntry: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_deleteRecLsn_beforeEntry: XeSqlPkg_hadr_xrf_deleteRecLsn_beforeEntry
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs during updating secondary's recovery forks stack. After deleting extra entries in the secondary stack but before copying new entries from primary."): Amended,
    Guid("{dd97a250-d51c-4e3b-8029-12c3985eb954}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_updateXrf_partialUpdate"): Amended]
class XeSqlPkg_hadr_xrf_updateXrf_partialUpdate: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_updateXrf_partialUpdate: XeSqlPkg_hadr_xrf_updateXrf_partialUpdate
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs during updating secondary's recovery forks stack. After updating the stack but before saving the recovery LSN in the metadata."): Amended,
    Guid("{091626a6-130f-4785-b5b2-2428f3fdf866}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_updateXrf_before_recoveryLsn_update"): Amended]
class XeSqlPkg_hadr_xrf_updateXrf_before_recoveryLsn_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_updateXrf_before_recoveryLsn_update: XeSqlPkg_hadr_xrf_updateXrf_before_recoveryLsn_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs after deleting secondary's stack entries but before copying primary's entries."): Amended,
    Guid("{24d5939c-b548-49b2-a588-b5f01b0883ce}"), locale("MS\\0x409"),
    DisplayName("hadr_xrf_copyXrf_partialCopy"): Amended]
class XeSqlPkg_hadr_xrf_copyXrf_partialCopy: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hadr_xrf_copyXrf_partialCopy: XeSqlPkg_hadr_xrf_copyXrf_partialCopy
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Page or contiguous set of pages evicted into the buffer pool extension cache."): Amended,
    Guid("{FF6E3632-B7CA-4ABB-873F-3BF0FB14DAFC}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_written"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_written: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_written: XeSqlPkg_buffer_pool_extension_pages_written
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
};
		
[dynamic: ToInstance, Description("Page is read from the buffer pool extension cache."): Amended,
    Guid("{7DCFB25F-7B89-4727-9F4D-7FE9A87A0861}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_read"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_read: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_read: XeSqlPkg_buffer_pool_extension_pages_read
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
};
		
[dynamic: ToInstance, Description("Page is evicted from the buffer pool extension cache."): Amended,
    Guid("{166EB22D-BE79-4F49-A496-888EB6DE4751}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_extension_pages_evicted"): Amended]
class XeSqlPkg_buffer_pool_extension_pages_evicted: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_extension_pages_evicted: XeSqlPkg_buffer_pool_extension_pages_evicted
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint64 number_pages;
	[WmiDataId(6), read] uint16 first_page_file_id;
	[WmiDataId(7), read] uint32 first_page_id;
	[WmiDataId(8), read] uint64 page_file_offset;
	[WmiDataId(9), read] uint16 numa_node_id;
};
		
[dynamic: ToInstance, Description("Lazywriter and/or worker clock has wrapped the BUF array and thresholds are re-calculated."): Amended,
    Guid("{C8D70433-CEC8-404D-9085-645037EF95B8}"), locale("MS\\0x409"),
    DisplayName("buffer_pool_eviction_thresholds_recalculated"): Amended]
class XeSqlPkg_buffer_pool_eviction_thresholds_recalculated: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class buffer_pool_eviction_thresholds_recalculated: XeSqlPkg_buffer_pool_eviction_thresholds_recalculated
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 numa_node_id;
	[WmiDataId(6), read] uint16 warm_threshold;
	[WmiDataId(7), read] uint16 cold_threshold;
	[WmiDataId(8), read] uint64 number_evictions_to_bpool_extension;
	[WmiDataId(9), read] uint64 number_evictions_from_bpool;
	[WmiDataId(10), read] uint32 PagesUnassigned;
	[WmiDataId(11), read] uint32 PagesStolenOrFree;
	[WmiDataId(12), read] uint32 PagesHot;
	[WmiDataId(13), read] uint32 PagesNotOnLRU;
	[WmiDataId(14), read] uint32 PagesUsedOnce;
	[WmiDataId(15), read] uint32 PagesSpilled;
	[WmiDataId(16), read] uint32 PagesBusyIo;
	[WmiDataId(17), read] uint32 PagesAllocationRequest;
	[WmiDataId(18), read] uint32 PagesSimulated;
};
		
[dynamic: ToInstance, Description("Fired at the beginning of an API call by a host callback; used by test to inject failure into the API."): Amended,
    Guid("{a43d5906-ee80-4a37-a9ad-a60accf45a74}"), locale("MS\\0x409"),
    DisplayName("hekaton_api_failure_injection"): Amended]
class XeSqlPkg_hekaton_api_failure_injection: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_api_failure_injection: XeSqlPkg_hekaton_api_failure_injection
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(38),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"HkTransactionCreateSavePoint", 
					"HkTransactionRollbackToSavePoint", 
					"SaveErrorForCatchBlock" }
			] uint8 api_id;
	[WmiDataId(6), read, Pointer] object  result;
};
		
[dynamic: ToInstance, Description("A test hook event, to report Hekaton search key data to test code."): Amended,
    Guid("{dbf5cb6a-b166-4784-9ae1-cd6d34e483ba}"), locale("MS\\0x409"),
    DisplayName("hekaton_search_key_event"): Amended]
class XeSqlPkg_hekaton_search_key_event: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class hekaton_search_key_event: XeSqlPkg_hekaton_search_key_event
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, Extension("Variant")] object key_data;
};
		
[dynamic: ToInstance, Description("Metadata is preallocating object IDs"): Amended,
    Guid("{9ef230d7-7d2d-4f00-8690-da7b3f3fb695}"), locale("MS\\0x409"),
    DisplayName("metadata_preallocate_object_id"): Amended]
class XeSqlPkg_metadata_preallocate_object_id: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class metadata_preallocate_object_id: XeSqlPkg_metadata_preallocate_object_id
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint8 stage;
	[WmiDataId(6), read] sint32 in_memory_next;
	[WmiDataId(7), read] sint32 on_disk_next;
	[WmiDataId(8), read] sint32 generated_next;
};
		
[dynamic: ToInstance, Description("Indicates that page allocations for the database are allowed."): Amended,
    Guid("{5D91E692-5C11-47A9-89B4-35BD732D420A}"), locale("MS\\0x409"),
    DisplayName("xtp_db_page_allocation_allowed"): Amended]
class XeSqlPkg_xtp_db_page_allocation_allowed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_db_page_allocation_allowed: XeSqlPkg_xtp_db_page_allocation_allowed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_pool_id;
	[WmiDataId(7), read] sint64 xtp_memory_broker_target_allocations;
	[WmiDataId(8), read] sint64 xtp_memory_broker_allocations;
	[WmiDataId(9), read] sint64 xtp_memory_broker_overall_memory;
	[WmiDataId(10), read] sint8  system_physical_memory_high;
	[WmiDataId(11), read] sint8  system_virtual_memory_low;
	[WmiDataId(12), read] sint8  process_physical_memory_low;
	[WmiDataId(13), read] sint8  process_virtual_memory_low;
};
		
[dynamic: ToInstance, Description("Indicates that page allocations for the database are disallowed due to memory pressure."): Amended,
    Guid("{BD3ECDF2-0516-45C3-AEEA-5B9CCFEAB682}"), locale("MS\\0x409"),
    DisplayName("xtp_db_page_allocation_disallowed"): Amended]
class XeSqlPkg_xtp_db_page_allocation_disallowed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_db_page_allocation_disallowed: XeSqlPkg_xtp_db_page_allocation_disallowed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 resource_pool_id;
	[WmiDataId(7), read] sint64 xtp_memory_broker_target_allocations;
	[WmiDataId(8), read] sint64 xtp_memory_broker_allocations;
	[WmiDataId(9), read] sint64 xtp_memory_broker_overall_memory;
	[WmiDataId(10), read] sint8  system_physical_memory_high;
	[WmiDataId(11), read] sint8  system_virtual_memory_low;
	[WmiDataId(12), read] sint8  process_physical_memory_low;
	[WmiDataId(13), read] sint8  process_virtual_memory_low;
	[WmiDataId(14), read] uint32 grace_period;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint when the checkpoint thread begins."): Amended,
    Guid("{37771FBC-95BE-4D70-9F69-9C91FEFB3765}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_scan_start"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_scan_start: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_scan_start: XeSqlPkg_xtp_offline_checkpoint_scan_start
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string start_lsn;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint before it process each host log record."): Amended,
    Guid("{AD6FAB05-5E00-4EE1-A942-7FCA9DEB52F0}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_before_log_record"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_before_log_record: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_before_log_record: XeSqlPkg_xtp_offline_checkpoint_before_log_record
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] uint32 log_operation;
	[WmiDataId(7), read] sint8  is_passive_state;
	[WmiDataId(8), read] sint8  state_log;
	[WmiDataId(9), read, Pointer] object  log_record;
	[WmiDataId(10), read, Pointer] object  error_code_pointer;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string current_lsn;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint before it hardens the complete checkpoint information into the boot page."): Amended,
    Guid("{E3849831-BD1F-4597-9636-6E719F486B2D}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_before_harden_complete"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_before_harden_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_before_harden_complete: XeSqlPkg_xtp_offline_checkpoint_before_harden_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read] sint8  is_passive_state;
	[WmiDataId(7), read, Pointer] object  error_code_pointer;
	[WmiDataId(8), read] uint64 checkpoint_ts;
	[WmiDataId(9), read, StringTermination("NullTerminated"), Format("w")] string recovery_lsn;
};
		
[dynamic: ToInstance, Description("Fired by XTP offline checkpoint when the checkpoint thread stops."): Amended,
    Guid("{8CF13970-27C1-4DDD-BF27-9473BC2255C2}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_scan_stop"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_scan_stop: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_scan_stop: XeSqlPkg_xtp_offline_checkpoint_scan_stop
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
};
		
[dynamic: ToInstance, Description("Occurs at start of log recovery of XTP table."): Amended,
    Guid("{6e5e242b-3f68-435e-ae7f-1590a4e83ea0}"), locale("MS\\0x409"),
    DisplayName("xtp_recover_table"): Amended]
class XeSqlPkg_xtp_recover_table: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_recover_table: XeSqlPkg_xtp_recover_table
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs at completion of log recovery of XTP table."): Amended,
    Guid("{516b9134-6f7c-4bc0-9c82-4d60c0d2e58a}"), locale("MS\\0x409"),
    DisplayName("xtp_recover_done"): Amended]
class XeSqlPkg_xtp_recover_done: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_recover_done: XeSqlPkg_xtp_recover_done
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] uint32 object_id;
};
		
[dynamic: ToInstance, Description("Occurs on every BFC row update or insert."): Amended,
    Guid("{0FCDB812-7E42-4484-B91C-D07C20CCD307}"), locale("MS\\0x409"),
    DisplayName("xtp_offline_checkpoint_bfc_update"): Amended]
class XeSqlPkg_xtp_offline_checkpoint_bfc_update: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class xtp_offline_checkpoint_bfc_update: XeSqlPkg_xtp_offline_checkpoint_bfc_update
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint16 database_id;
	[WmiDataId(6), read, Pointer] object  error_code_pointer;
	[WmiDataId(7), read, Extension("Guid")] guid file_id;
};
		
[dynamic: ToInstance, Description("A lock request is being processed by the lock manager and we need to report its priority"): Amended,
    Guid("{54ade838-1ab4-48ea-a470-db3f8b552421}"), locale("MS\\0x409"),
    DisplayName("lock_request_priority"): Amended]
class XeSqlPkg_lock_request_priority: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_request_priority: XeSqlPkg_lock_request_priority
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
	[WmiDataId(8), read] sint8  is_kill_request;
	[WmiDataId(9), read] sint8  is_low_priority_request;
	[WmiDataId(10), read] uint32 request_timeout;
};
		
[dynamic: ToInstance, Description("A process is killed by an ABORT = BLOCKERS DDL statement"): Amended,
    Guid("{0422cac1-a878-46b3-86a9-c9e37d99d1b4}"), locale("MS\\0x409"),
    DisplayName("process_killed_by_abort_blockers"): Amended]
class XeSqlPkg_process_killed_by_abort_blockers: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class process_killed_by_abort_blockers: XeSqlPkg_process_killed_by_abort_blockers
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 killed_process_id;
	[WmiDataId(6), read] uint32 database_id;
	[WmiDataId(7), read] sint32 object_id;
};
		
[dynamic: ToInstance, Description("The priority state of a lock request"): Amended,
    Guid("{38dee9f2-2d59-47cd-9dc6-2fb46e110e12}"), locale("MS\\0x409"),
    DisplayName("lock_request_priority_state"): Amended]
class XeSqlPkg_lock_request_priority_state: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class lock_request_priority_state: XeSqlPkg_lock_request_priority_state
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint32 object_id;
	[WmiDataId(7), read, 
				XEMapId(41),
				ValueMap { 
					"0", 
					"1", 
					"2", 
					"3", 
					"4" },
				Values { 
					"Low Priority Period Started", 
					"Low Priority Period Expired", 
					"Normal Priority", 
					"Abort Blockers", 
					"Abort Self" }
			] uint8 state;
	[WmiDataId(8), read, 
				XEMapId(45),
				ValueMap { 
					"12", 
					"6", 
					"7", 
					"8", 
					"21", 
					"0", 
					"15", 
					"16", 
					"17", 
					"18", 
					"13", 
					"14", 
					"19", 
					"20", 
					"3", 
					"2", 
					"1", 
					"9", 
					"10", 
					"4", 
					"11", 
					"5" },
				Values { 
					"BU", 
					"IS", 
					"IU", 
					"IX", 
					"LAST_MODE", 
					"NL", 
					"RI_NL", 
					"RI_S", 
					"RI_U", 
					"RI_X", 
					"RS_S", 
					"RS_U", 
					"RX_S", 
					"RX_U", 
					"S", 
					"SCH_M", 
					"SCH_S", 
					"SIU", 
					"SIX", 
					"U", 
					"UIX", 
					"X" }
			] uint32 mode;
};
		
[dynamic: ToInstance, Description("A DDL statement was executed using the WAIT_AT_LOW_PRIORITY options"): Amended,
    Guid("{f86f2578-6443-40f6-b686-7448eb5d16ce}"), locale("MS\\0x409"),
    DisplayName("ddl_with_wait_at_low_priority"): Amended]
class XeSqlPkg_ddl_with_wait_at_low_priority: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class ddl_with_wait_at_low_priority: XeSqlPkg_ddl_with_wait_at_low_priority
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read, 
				XEMapId(40),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"ALTER TABLE REBUILD", 
					"ALTER TABLE SWITCH", 
					"ALTER INDEX REBUILD" }
			] uint8 type;
	[WmiDataId(6), read] uint32 max_duration;
	[WmiDataId(7), read, 
				XEMapId(39),
				ValueMap { 
					"0", 
					"1", 
					"2" },
				Values { 
					"NONE", 
					"BLOCKERS", 
					"SELF" }
			] uint8 abort_after_wait;
	[WmiDataId(8), read] sint32 host_process_id;
	[WmiDataId(9), read] uint32 database_id;
	[WmiDataId(10), read] sint32 object_id;
	[WmiDataId(11), read, StringTermination("NullTerminated"), Format("w")] string host_name;
	[WmiDataId(12), read, StringTermination("NullTerminated"), Format("w")] string database_name;
	[WmiDataId(13), read, StringTermination("NullTerminated"), Format("w")] string object_name;
	[WmiDataId(14), read, StringTermination("NullTerminated"), Format("w")] string target_object_name;
};
		
[dynamic: ToInstance, Description("Occurs when SQL Server fails to store dirty entries in Query Store on database shutdown."): Amended,
    Guid("{ff3cf2d2-e9a6-46b4-857b-8a5d060696dd}"), locale("MS\\0x409"),
    DisplayName("query_store_persist_on_shutdown_failed"): Amended]
class XeSqlPkg_query_store_persist_on_shutdown_failed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_store_persist_on_shutdown_failed: XeSqlPkg_query_store_persist_on_shutdown_failed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 dbId;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation cleans up single defunct tenant."): Amended,
    Guid("{CEDB5E0F-044D-4157-B105-769B29C02D95}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_defunct_cleanup_complete"): Amended]
class XeSqlPkg_logconsolidation_defunct_cleanup_complete: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_defunct_cleanup_complete: XeSqlPkg_logconsolidation_defunct_cleanup_complete
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 tenant_id;
	[WmiDataId(6), read] uint32 rows_deleted;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation begins one move-log-to-data task, but before any sectors are moved."): Amended,
    Guid("{1E66918C-680B-4219-B56B-3D3F8ADA7247}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_sectors_moving_to_data"): Amended]
class XeSqlPkg_logconsolidation_sectors_moving_to_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_sectors_moving_to_data: XeSqlPkg_logconsolidation_sectors_moving_to_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
};
		
[dynamic: ToInstance, Description("Occurs when log consolidation completes one move-log-to-data task."): Amended,
    Guid("{E29D9B01-D88D-4A8C-81E6-DEB09DC9BD3B}"), locale("MS\\0x409"),
    DisplayName("logconsolidation_sectors_moved_to_data"): Amended]
class XeSqlPkg_logconsolidation_sectors_moved_to_data: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class logconsolidation_sectors_moved_to_data: XeSqlPkg_logconsolidation_sectors_moved_to_data
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 sectors_moved;
	[WmiDataId(6), read] uint32 sectors_cleared;
};
		
[dynamic: ToInstance, Description("Occurs each time when hash join spills some data to disk in batch processing."): Amended,
    Guid("{5e524410-5006-439f-b89c-44e76da0bf3f}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_join_spilled"): Amended]
class XeSqlPkg_query_execution_batch_hash_join_spilled: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_join_spilled: XeSqlPkg_query_execution_batch_hash_join_spilled
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 spilling_level;
	[WmiDataId(7), read] uint32 spilled_partitions_percent;
	[WmiDataId(8), read] uint64 build_side_spilled_data_size;
	[WmiDataId(9), read] uint64 build_side_in_memory_data_size;
	[WmiDataId(10), read] uint64 probe_side_spilled_data_size;
};
		
[dynamic: ToInstance, Description("Occurs each time when hash join reverses build and probe side while processing data spilled to disk."): Amended,
    Guid("{95bebc9c-2ac8-4d06-b238-ad4e4654842f}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_children_reversed"): Amended]
class XeSqlPkg_query_execution_batch_hash_children_reversed: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_children_reversed: XeSqlPkg_query_execution_batch_hash_children_reversed
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint32 spilling_level;
};
		
[dynamic: ToInstance, Description("Occurs at the end of batch hash aggregation."): Amended,
    Guid("{996268c2-53d2-4d57-9554-24b9094e3651}"), locale("MS\\0x409"),
    DisplayName("query_execution_batch_hash_aggregation_finished"): Amended]
class XeSqlPkg_query_execution_batch_hash_aggregation_finished: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class query_execution_batch_hash_aggregation_finished: XeSqlPkg_query_execution_batch_hash_aggregation_finished
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] sint32 query_operator_node_id;
	[WmiDataId(6), read] sint64 pure_group_by_columns_rows_number;
	[WmiDataId(7), read] sint64 max_allocated_deep_data_size;
	[WmiDataId(8), read] sint64 garbage_collected_deep_data_size;
	[WmiDataId(9), read] sint64 max_allocated_hash_table_data_size;
	[WmiDataId(10), read] sint32 cpu_cycles_per_row;
	[WmiDataId(11), read] sint8  local_aggregation_used;
	[WmiDataId(12), read] sint64 spilled_data_size;
	[WmiDataId(13), read] sint32 spilled_hard_partitions_number;
	[WmiDataId(14), read] sint64 spilled_rows_number;
	[WmiDataId(15), read] sint64 soft_partitions_number;
	[WmiDataId(16), read] sint8  fast_comparison_used;
	[WmiDataId(17), read] sint32 fast_aggregation_columns_number;
};
		
[dynamic: ToInstance, Description("Fired when a file handle we're trying to delete is in use and we don't expect it to be. The typical response is dumping all the handles in the system via SysInternals HANDLE.EXE"): Amended,
    Guid("{DF0D99BE-58C2-4420-9877-09B05CB44DBC}"), locale("MS\\0x409"),
    DisplayName("file_handle_in_use"): Amended]
class XeSqlPkg_file_handle_in_use: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class file_handle_in_use: XeSqlPkg_file_handle_in_use
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 win32error;
	[WmiDataId(6), read, StringTermination("NullTerminated"), Format("w")] string file_name;
};
		
[dynamic: ToInstance, Description("Occurs when a sql transaction is committed with single phase commit."): Amended,
    Guid("{ea9b3b62-a546-4268-9732-b173f66458f0}"), locale("MS\\0x409"),
    DisplayName("sql_transaction_commit_single_phase"): Amended]
class XeSqlPkg_sql_transaction_commit_single_phase: XeSqlPkg
{
};

[dynamic: ToInstance, EventType(0), EventVersion(1)]
class sql_transaction_commit_single_phase: XeSqlPkg_sql_transaction_commit_single_phase
{
	[WmiDataId(1), Description("FragmentId"): Amended,read] uint32 FragmentId;
	[WmiDataId(2), Description("RemainingLength"): Amended,read] uint32 RemainingLength;
	[WmiDataId(3), Description("ActivityId"): Amended,ActivityID, read, Extension("Guid")] guid ActivityId;
	[WmiDataId(4), Description("SequenceNumber"): Amended,read] uint32 SequenceNumber;
	[WmiDataId(5), read] uint32 database_id;
	[WmiDataId(6), read] sint64 transaction_id;
	[WmiDataId(7), read] sint8  is_delayed_durable;
};
		